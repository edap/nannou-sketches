{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2","program":"/home/dapx/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","wgpu","--edition=2018","/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=52d762efab7690ff","-C","extra-filename=-52d762efab7690ff","--out-dir","/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps","-L","dependency=/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps","--extern","arrayvec=/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps/libarrayvec-cbf42d665ceca16c.rmeta","--extern","parking_lot=/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps/libparking_lot-55f09101399d258e.rmeta","--extern","raw_window_handle=/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps/libraw_window_handle-43b2017ba65de332.rmeta","--extern","smallvec=/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps/libsmallvec-dae6fe39ce188836.rmeta","--extern","wgc=/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps/libwgpu_core-a303a37c1d7581f9.rmeta","--extern","wgn=/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps/libwgpu_native-2c6e3a99c6220b16.rmeta","--extern","wgt=/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps/libwgpu_types-0f58ecb45f645c8a.rmeta","--cap-lints","allow","-L","native=/usr/lib/x86_64-linux-gnu","--error-format=json","--sysroot","/home/dapx/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps/libwgpu-52d762efab7690ff.rmeta"},"prelude":{"crate_id":{"name":"wgpu","disambiguator":[12528335196973600570,17071705015952214038]},"crate_root":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src","external_crates":[{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6528836112941390771,2028724122443642861]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14673858572786541001,1892137737928154225]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17117278319981904138,16406771668640906211]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11917984669602857069,6489053565454986112]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12362109612685904499,382626321872987168]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4151571022625212401,1888722734493896023]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4322023011642103678,14222697504055880771]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8420579222726968489,9136630199856205157]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[13745492306750544571,5475822973716876235]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14030493773096865675,2651053314204399788]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[8310449678941769819,14748581810882876583]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17983290995241619958,6056021938633518527]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2836549575564442446,8627689666430273126]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7274711288869898279,15671112109327640352]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/backend/native_gpu_future.rs","num":15,"id":{"name":"parking_lot","disambiguator":[16554682812003532951,3232511923212470204]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/backend/native_gpu_future.rs","num":16,"id":{"name":"lock_api","disambiguator":[2863804777762583869,14799884867851676310]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/backend/native_gpu_future.rs","num":17,"id":{"name":"scopeguard","disambiguator":[5081943333480440636,9076196664652206448]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/backend/native_gpu_future.rs","num":18,"id":{"name":"parking_lot_core","disambiguator":[17423062282415908726,2925042377433277499]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/backend/native_gpu_future.rs","num":19,"id":{"name":"cfg_if","disambiguator":[905820604123660737,9080961431952796619]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","num":20,"id":{"name":"smallvec","disambiguator":[8424235311401871579,2024392795712170874]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/backend/native_gpu_future.rs","num":21,"id":{"name":"libc","disambiguator":[7997064065336242500,8511025302220419458]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","num":22,"id":{"name":"arrayvec","disambiguator":[9004341979910421875,14891185808555529484]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","num":23,"id":{"name":"wgpu_types","disambiguator":[14357785073259150552,3354238834040034292]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","num":24,"id":{"name":"peek_poke","disambiguator":[14331327832270415912,8630366020488660477]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","num":25,"id":{"name":"peek_poke_derive","disambiguator":[15107351388756802746,4536164632405274167]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","num":26,"id":{"name":"bitflags","disambiguator":[381175081479133518,10994153786536176848]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","num":27,"id":{"name":"wgpu_core","disambiguator":[4849257671602977732,14968735803367757800]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","num":28,"id":{"name":"gfx_backend_empty","disambiguator":[15570638977034065362,3005036407645018242]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","num":29,"id":{"name":"gfx_hal","disambiguator":[11122676734006237625,10181242700647790931]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","num":30,"id":{"name":"raw_window_handle","disambiguator":[6552574937117001955,7578084645408101463]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","num":31,"id":{"name":"log","disambiguator":[2463566853520751095,647246307195811942]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","num":32,"id":{"name":"gfx_backend_vulkan","disambiguator":[1293028570960877467,1827271728393022748]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","num":33,"id":{"name":"lazy_static","disambiguator":[9660684555614800310,8568331244489293542]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","num":34,"id":{"name":"ash","disambiguator":[13326526696875271192,14646632525963250969]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","num":35,"id":{"name":"libloading","disambiguator":[11641301825938901659,14827736444180748540]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","num":36,"id":{"name":"gfx_descriptor","disambiguator":[6095036957982477111,17269523964587798349]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","num":37,"id":{"name":"fxhash","disambiguator":[949214370214060910,13199831759942322742]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","num":38,"id":{"name":"byteorder","disambiguator":[10719404080946289605,17148540255389135738]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","num":39,"id":{"name":"copyless","disambiguator":[5348737350794132577,14259337281780975958]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","num":40,"id":{"name":"gfx_memory","disambiguator":[12972892183308685379,12518162897643129721]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","num":41,"id":{"name":"hibitset","disambiguator":[12551236931944093258,15446363680029529775]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","num":42,"id":{"name":"atom","disambiguator":[7388032441240403036,7755558300585397009]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","num":43,"id":{"name":"slab","disambiguator":[4729543071339994363,11740316045407999008]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","num":44,"id":{"name":"vec_map","disambiguator":[7922345956730970798,7298238641922458119]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","num":45,"id":{"name":"wgpu_native","disambiguator":[17234771122095828114,13023491115061837703]}}],"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":0,"byte_end":56243,"line_start":1,"line_end":1764,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":23,"index":1774},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":316,"byte_end":327,"line_start":22,"line_end":22,"column_start":5,"column_end":16},"alias_span":null,"name":"AddressMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":64},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":333,"byte_end":340,"line_start":23,"line_end":23,"column_start":5,"column_end":12},"alias_span":null,"name":"Backend","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":124},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":346,"byte_end":356,"line_start":24,"line_end":24,"column_start":5,"column_end":15},"alias_span":null,"name":"BackendBit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":500},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":362,"byte_end":377,"line_start":25,"line_end":25,"column_start":5,"column_end":20},"alias_span":null,"name":"BlendDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":416},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":383,"byte_end":394,"line_start":26,"line_end":26,"column_start":5,"column_end":16},"alias_span":null,"name":"BlendFactor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":470},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":400,"byte_end":414,"line_start":27,"line_end":27,"column_start":5,"column_end":19},"alias_span":null,"name":"BlendOperation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":16},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":420,"byte_end":433,"line_start":28,"line_end":28,"column_start":5,"column_end":18},"alias_span":null,"name":"BufferAddress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":1155},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":439,"byte_end":450,"line_start":29,"line_end":29,"column_start":5,"column_end":16},"alias_span":null,"name":"BufferUsage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":1629},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":456,"byte_end":461,"line_start":30,"line_end":30,"column_start":5,"column_end":10},"alias_span":null,"name":"Color","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":518},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":467,"byte_end":487,"line_start":31,"line_end":31,"column_start":5,"column_end":25},"alias_span":null,"name":"ColorStateDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":757},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":493,"byte_end":503,"line_start":32,"line_end":32,"column_start":5,"column_end":15},"alias_span":null,"name":"ColorWrite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":1837},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":509,"byte_end":532,"line_start":33,"line_end":33,"column_start":5,"column_end":28},"alias_span":null,"name":"CommandBufferDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":969},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":538,"byte_end":553,"line_start":34,"line_end":34,"column_start":5,"column_end":20},"alias_span":null,"name":"CompareFunction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":588},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":559,"byte_end":567,"line_start":35,"line_end":35,"column_start":5,"column_end":13},"alias_span":null,"name":"CullMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":868},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":573,"byte_end":600,"line_start":36,"line_end":36,"column_start":5,"column_end":32},"alias_span":null,"name":"DepthStencilStateDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":279},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":606,"byte_end":622,"line_start":37,"line_end":37,"column_start":5,"column_end":21},"alias_span":null,"name":"DeviceDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":43},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":628,"byte_end":641,"line_start":38,"line_end":38,"column_start":5,"column_end":18},"alias_span":null,"name":"DynamicOffset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":245},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":647,"byte_end":657,"line_start":39,"line_end":39,"column_start":5,"column_end":15},"alias_span":null,"name":"Extensions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":1695},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":663,"byte_end":671,"line_start":40,"line_end":40,"column_start":5,"column_end":13},"alias_span":null,"name":"Extent3d","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":1798},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":677,"byte_end":687,"line_start":41,"line_end":41,"column_start":5,"column_end":15},"alias_span":null,"name":"FilterMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":567},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":693,"byte_end":702,"line_start":42,"line_end":42,"column_start":5,"column_end":14},"alias_span":null,"name":"FrontFace","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":890},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":708,"byte_end":719,"line_start":43,"line_end":43,"column_start":5,"column_end":16},"alias_span":null,"name":"IndexFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":1011},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":725,"byte_end":738,"line_start":44,"line_end":44,"column_start":5,"column_end":18},"alias_span":null,"name":"InputStepMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":263},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":744,"byte_end":750,"line_start":45,"line_end":45,"column_start":5,"column_end":11},"alias_span":null,"name":"Limits","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":1515},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":756,"byte_end":762,"line_start":46,"line_end":46,"column_start":5,"column_end":11},"alias_span":null,"name":"LoadOp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":1676},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":768,"byte_end":776,"line_start":47,"line_end":47,"column_start":5,"column_end":13},"alias_span":null,"name":"Origin3d","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":100},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":782,"byte_end":797,"line_start":48,"line_end":48,"column_start":5,"column_end":20},"alias_span":null,"name":"PowerPreference","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":1340},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":803,"byte_end":814,"line_start":49,"line_end":49,"column_start":5,"column_end":16},"alias_span":null,"name":"PresentMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":537},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":820,"byte_end":837,"line_start":50,"line_end":50,"column_start":5,"column_end":22},"alias_span":null,"name":"PrimitiveTopology","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":612},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":843,"byte_end":871,"line_start":51,"line_end":51,"column_start":5,"column_end":33},"alias_span":null,"name":"RasterizationStateDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":1819},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":877,"byte_end":894,"line_start":52,"line_end":52,"column_start":5,"column_end":22},"alias_span":null,"name":"SamplerDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":40},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":900,"byte_end":914,"line_start":53,"line_end":53,"column_start":5,"column_end":19},"alias_span":null,"name":"ShaderLocation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":288},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":920,"byte_end":931,"line_start":54,"line_end":54,"column_start":5,"column_end":16},"alias_span":null,"name":"ShaderStage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":911},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":937,"byte_end":953,"line_start":55,"line_end":55,"column_start":5,"column_end":21},"alias_span":null,"name":"StencilOperation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":950},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":959,"byte_end":985,"line_start":56,"line_end":56,"column_start":5,"column_end":31},"alias_span":null,"name":"StencilStateFaceDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":1546},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":991,"byte_end":998,"line_start":57,"line_end":57,"column_start":5,"column_end":12},"alias_span":null,"name":"StoreOp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":1495},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":1004,"byte_end":1023,"line_start":58,"line_end":58,"column_start":5,"column_end":24},"alias_span":null,"name":"SwapChainDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":1737},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":1029,"byte_end":1042,"line_start":59,"line_end":59,"column_start":5,"column_end":18},"alias_span":null,"name":"TextureAspect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":1855},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":1048,"byte_end":1068,"line_start":60,"line_end":60,"column_start":5,"column_end":25},"alias_span":null,"name":"TextureComponentType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":1655},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":1074,"byte_end":1090,"line_start":61,"line_end":61,"column_start":5,"column_end":21},"alias_span":null,"name":"TextureDimension","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":628},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":1096,"byte_end":1109,"line_start":62,"line_end":62,"column_start":5,"column_end":18},"alias_span":null,"name":"TextureFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":1364},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":1115,"byte_end":1127,"line_start":63,"line_end":63,"column_start":5,"column_end":17},"alias_span":null,"name":"TextureUsage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":1758},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":1133,"byte_end":1154,"line_start":64,"line_end":64,"column_start":5,"column_end":26},"alias_span":null,"name":"TextureViewDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":389},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":1160,"byte_end":1180,"line_start":65,"line_end":65,"column_start":5,"column_end":25},"alias_span":null,"name":"TextureViewDimension","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":1032},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":1186,"byte_end":1211,"line_start":66,"line_end":66,"column_start":5,"column_end":30},"alias_span":null,"name":"VertexAttributeDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":1050},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":1217,"byte_end":1229,"line_start":67,"line_end":67,"column_start":5,"column_end":17},"alias_span":null,"name":"VertexFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":63},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":1235,"byte_end":1256,"line_start":68,"line_end":68,"column_start":5,"column_end":26},"alias_span":null,"name":"BIND_BUFFER_ALIGNMENT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":10},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":1262,"byte_end":1277,"line_start":69,"line_end":69,"column_start":5,"column_end":20},"alias_span":null,"name":"MAX_BIND_GROUPS","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":13},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":1283,"byte_end":1293,"line_start":70,"line_end":70,"column_start":5,"column_end":15},"alias_span":null,"name":"read_spirv","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":2344},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":1327,"byte_end":1338,"line_start":73,"line_end":73,"column_start":5,"column_end":16},"alias_span":null,"name":"AdapterInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":2358},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":1344,"byte_end":1354,"line_start":74,"line_end":74,"column_start":5,"column_end":15},"alias_span":null,"name":"DeviceType","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":0,"byte_end":56243,"line_start":1,"line_end":1764,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":59},{"krate":0,"index":109},{"krate":0,"index":274},{"krate":0,"index":277},{"krate":0,"index":275},{"krate":0,"index":279},{"krate":0,"index":285},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":287},{"krate":0,"index":294},{"krate":0,"index":291},{"krate":0,"index":297},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":316},{"krate":0,"index":315},{"krate":0,"index":313},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":318},{"krate":0,"index":325},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":327},{"krate":0,"index":334},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":336},{"krate":0,"index":343},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":345},{"krate":0,"index":351},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":353},{"krate":0,"index":359},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":361},{"krate":0,"index":367},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":369},{"krate":0,"index":375},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":377},{"krate":0,"index":383},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":112},{"krate":0,"index":385},{"krate":0,"index":391},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":393},{"krate":0,"index":399},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":401},{"krate":0,"index":407},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":409},{"krate":0,"index":415},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":417},{"krate":0,"index":423},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":425},{"krate":0,"index":428},{"krate":0,"index":430},{"krate":0,"index":434},{"krate":0,"index":437},{"krate":0,"index":441},{"krate":0,"index":444},{"krate":0,"index":450},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":452},{"krate":0,"index":466},{"krate":0,"index":463},{"krate":0,"index":469},{"krate":0,"index":476},{"krate":0,"index":473},{"krate":0,"index":479},{"krate":0,"index":510},{"krate":0,"index":508},{"krate":0,"index":506},{"krate":0,"index":503},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":511},{"krate":0,"index":520},{"krate":0,"index":518},{"krate":0,"index":515},{"krate":0,"index":522},{"krate":0,"index":529},{"krate":0,"index":526},{"krate":0,"index":532},{"krate":0,"index":540},{"krate":0,"index":537},{"krate":0,"index":543},{"krate":0,"index":549},{"krate":0,"index":546},{"krate":0,"index":552},{"krate":0,"index":559},{"krate":0,"index":556},{"krate":0,"index":562},{"krate":0,"index":569},{"krate":0,"index":566},{"krate":0,"index":572},{"krate":0,"index":580},{"krate":0,"index":577},{"krate":0,"index":583},{"krate":0,"index":599},{"krate":0,"index":596},{"krate":0,"index":602},{"krate":0,"index":609},{"krate":0,"index":606},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":612},{"krate":0,"index":617},{"krate":0,"index":621},{"krate":0,"index":644},{"krate":0,"index":641},{"krate":0,"index":635},{"krate":0,"index":637},{"krate":0,"index":630},{"krate":0,"index":632},{"krate":0,"index":626},{"krate":0,"index":647},{"krate":0,"index":668},{"krate":0,"index":665},{"krate":0,"index":659},{"krate":0,"index":661},{"krate":0,"index":654},{"krate":0,"index":656},{"krate":0,"index":650},{"krate":0,"index":671},{"krate":0,"index":699},{"krate":0,"index":696},{"krate":0,"index":690},{"krate":0,"index":692},{"krate":0,"index":685},{"krate":0,"index":687},{"krate":0,"index":681},{"krate":0,"index":702},{"krate":0,"index":705},{"krate":0,"index":707},{"krate":0,"index":716},{"krate":0,"index":713},{"krate":0,"index":118},{"krate":0,"index":719},{"krate":0,"index":728},{"krate":0,"index":725},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":146},{"krate":0,"index":172},{"krate":0,"index":731},{"krate":0,"index":741},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":733},{"krate":0,"index":174},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":207},{"krate":0,"index":209},{"krate":0,"index":211},{"krate":0,"index":227},{"krate":0,"index":244},{"krate":0,"index":247},{"krate":0,"index":256},{"krate":0,"index":259},{"krate":0,"index":263},{"krate":0,"index":743},{"krate":0,"index":747},{"krate":0,"index":745},{"krate":0,"index":265},{"krate":0,"index":267},{"krate":0,"index":270}],"decl_id":null,"docs":" A cross-platform graphics and compute library based on WebGPU.\n","sig":null,"attributes":[{"value":"! A cross-platform graphics and compute library based on WebGPU.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":0,"byte_end":66,"line_start":1,"line_end":1,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":279},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":1818,"byte_end":1825,"line_start":89,"line_end":89,"column_start":12,"column_end":19},"name":"Adapter","qualname":"::Adapter","value":"Adapter {  }","parent":null,"children":[{"krate":0,"index":280}],"decl_id":null,"docs":" A handle to a physical graphics and/or compute device.","sig":null,"attributes":[{"value":"/ A handle to a physical graphics and/or compute device.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":1584,"byte_end":1642,"line_start":84,"line_end":84,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":1643,"byte_end":1646,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ An `Adapter` can be used to open a connection to the corresponding device on the host system,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":1647,"byte_end":1744,"line_start":86,"line_end":86,"column_start":1,"column_end":98}},{"value":"/ yielding a [`Device`] object.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":1745,"byte_end":1778,"line_start":87,"line_end":87,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":287},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":1930,"byte_end":1951,"line_start":95,"line_end":95,"column_start":12,"column_end":33},"name":"RequestAdapterOptions","qualname":"::RequestAdapterOptions","value":"RequestAdapterOptions { power_preference, compatible_surface }","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":290}],"decl_id":null,"docs":" Options for requesting adapter.\n","sig":null,"attributes":[{"value":"/ Options for requesting adapter.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":1859,"byte_end":1894,"line_start":93,"line_end":93,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":289},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":2008,"byte_end":2024,"line_start":97,"line_end":97,"column_start":9,"column_end":25},"name":"power_preference","qualname":"::RequestAdapterOptions::power_preference","value":"wgpu_types::PowerPreference","parent":{"krate":0,"index":287},"children":[],"decl_id":null,"docs":" Power preference for the adapter.\n","sig":null,"attributes":[{"value":"/ Power preference for the adapter.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":1962,"byte_end":1999,"line_start":96,"line_end":96,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":290},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":2130,"byte_end":2148,"line_start":99,"line_end":99,"column_start":9,"column_end":27},"name":"compatible_surface","qualname":"::RequestAdapterOptions::compatible_surface","value":"std::option::Option<&'a Surface>","parent":{"krate":0,"index":287},"children":[],"decl_id":null,"docs":" Surface that is required to be presentable with the requested adapter.\n","sig":null,"attributes":[{"value":"/ Surface that is required to be presentable with the requested adapter.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":2047,"byte_end":2121,"line_start":98,"line_end":98,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":297},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":2403,"byte_end":2409,"line_start":107,"line_end":107,"column_start":12,"column_end":18},"name":"Device","qualname":"::Device","value":"Device {  }","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299}],"decl_id":null,"docs":" An open connection to a graphics and/or compute device.","sig":null,"attributes":[{"value":"/ An open connection to a graphics and/or compute device.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":2174,"byte_end":2233,"line_start":102,"line_end":102,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":2234,"byte_end":2237,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The `Device` is the responsible for the creation of most rendering and compute resources, as","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":2238,"byte_end":2334,"line_start":104,"line_end":104,"column_start":1,"column_end":97}},{"value":"/ well as exposing [`Queue`] objects.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":2335,"byte_end":2374,"line_start":105,"line_end":105,"column_start":1,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":303},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":2611,"byte_end":2615,"line_start":116,"line_end":116,"column_start":5,"column_end":9},"name":"Wait","qualname":"::Maintain::Wait","value":"Maintain::Wait","parent":{"krate":0,"index":302},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":305},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":2621,"byte_end":2625,"line_start":117,"line_end":117,"column_start":5,"column_end":9},"name":"Poll","qualname":"::Maintain::Poll","value":"Maintain::Poll","parent":{"krate":0,"index":302},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":302},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":2596,"byte_end":2604,"line_start":115,"line_end":115,"column_start":10,"column_end":18},"name":"Maintain","qualname":"::Maintain","value":"Maintain::{Wait, Poll}","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":305}],"decl_id":null,"docs":" This is passed to `Device::poll` to control whether\n it should block or not.\n","sig":null,"attributes":[{"value":"/ This is passed to `Device::poll` to control whether","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":2458,"byte_end":2513,"line_start":112,"line_end":112,"column_start":1,"column_end":56}},{"value":"/ it should block or not.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":2514,"byte_end":2541,"line_start":113,"line_end":113,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":318},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":2710,"byte_end":2716,"line_start":122,"line_end":122,"column_start":12,"column_end":18},"name":"Buffer","qualname":"::Buffer","value":"Buffer {  }","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":320}],"decl_id":null,"docs":" A handle to a GPU-accessible buffer.\n","sig":null,"attributes":[{"value":"/ A handle to a GPU-accessible buffer.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":2630,"byte_end":2670,"line_start":120,"line_end":120,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":327},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":2860,"byte_end":2867,"line_start":129,"line_end":129,"column_start":12,"column_end":19},"name":"Texture","qualname":"::Texture","value":"Texture {  }","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":329}],"decl_id":null,"docs":" A handle to a texture on the GPU.\n","sig":null,"attributes":[{"value":"/ A handle to a texture on the GPU.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":2783,"byte_end":2820,"line_start":127,"line_end":127,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":336},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":3117,"byte_end":3128,"line_start":139,"line_end":139,"column_start":12,"column_end":23},"name":"TextureView","qualname":"::TextureView","value":"TextureView {  }","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338}],"decl_id":null,"docs":" A handle to a texture view.","sig":null,"attributes":[{"value":"/ A handle to a texture view.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":2918,"byte_end":2949,"line_start":134,"line_end":134,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":2950,"byte_end":2953,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ A `TextureView` object describes a texture and associated metadata needed by a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":2954,"byte_end":3036,"line_start":136,"line_end":136,"column_start":1,"column_end":83}},{"value":"/ [`RenderPipeline`] or [`BindGroup`].","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":3037,"byte_end":3077,"line_start":137,"line_end":137,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":345},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":3516,"byte_end":3523,"line_start":150,"line_end":150,"column_start":12,"column_end":19},"name":"Sampler","qualname":"::Sampler","value":"Sampler {  }","parent":null,"children":[{"krate":0,"index":346}],"decl_id":null,"docs":" A handle to a sampler.","sig":null,"attributes":[{"value":"/ A handle to a sampler.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":3183,"byte_end":3209,"line_start":144,"line_end":144,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":3210,"byte_end":3213,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ A `Sampler` object defines how a pipeline will sample from a [`TextureView`]. Samplers define","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":3214,"byte_end":3311,"line_start":146,"line_end":146,"column_start":1,"column_end":98}},{"value":"/ image filters (including anisotropy) and address (wrapping) modes, among other things. See","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":3312,"byte_end":3406,"line_start":147,"line_end":147,"column_start":1,"column_end":95}},{"value":"/ the documentation for [`SamplerDescriptor`] for more information.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":3407,"byte_end":3476,"line_start":148,"line_end":148,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":353},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":3810,"byte_end":3817,"line_start":159,"line_end":159,"column_start":12,"column_end":19},"name":"Surface","qualname":"::Surface","value":"Surface {  }","parent":null,"children":[{"krate":0,"index":354}],"decl_id":null,"docs":" A handle to a presentable surface.","sig":null,"attributes":[{"value":"/ A handle to a presentable surface.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":3557,"byte_end":3595,"line_start":154,"line_end":154,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":3596,"byte_end":3599,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ A `Surface` represents a platform-specific surface (e.g. a window) to which rendered images may","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":3600,"byte_end":3699,"line_start":156,"line_end":156,"column_start":1,"column_end":100}},{"value":"/ be presented. A `Surface` may be created with [`Surface::create`].","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":3700,"byte_end":3770,"line_start":157,"line_end":157,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":361},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":4093,"byte_end":4102,"line_start":168,"line_end":168,"column_start":12,"column_end":21},"name":"SwapChain","qualname":"::SwapChain","value":"SwapChain {  }","parent":null,"children":[{"krate":0,"index":362}],"decl_id":null,"docs":" A handle to a swap chain.","sig":null,"attributes":[{"value":"/ A handle to a swap chain.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":3851,"byte_end":3880,"line_start":163,"line_end":163,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":3881,"byte_end":3884,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ A `SwapChain` represents the image or series of images that will be presented to a [`Surface`].","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":3885,"byte_end":3984,"line_start":165,"line_end":165,"column_start":1,"column_end":100}},{"value":"/ A `SwapChain` may be created with [`Device::create_swap_chain`].","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":3985,"byte_end":4053,"line_start":166,"line_end":166,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":369},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":4614,"byte_end":4629,"line_start":179,"line_end":179,"column_start":12,"column_end":27},"name":"BindGroupLayout","qualname":"::BindGroupLayout","value":"BindGroupLayout {  }","parent":null,"children":[{"krate":0,"index":370}],"decl_id":null,"docs":" An opaque handle to a binding group layout.","sig":null,"attributes":[{"value":"/ An opaque handle to a binding group layout.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":4138,"byte_end":4185,"line_start":172,"line_end":172,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":4186,"byte_end":4189,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ A `BindGroupLayout` is a handle to the GPU-side layout of a binding group. It can be used to","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":4190,"byte_end":4286,"line_start":174,"line_end":174,"column_start":1,"column_end":97}},{"value":"/ create a [`BindGroupDescriptor`] object, which in turn can be used to create a [`BindGroup`]","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":4287,"byte_end":4383,"line_start":175,"line_end":175,"column_start":1,"column_end":97}},{"value":"/ object with [`Device::create_bind_group`]. A series of `BindGroupLayout`s can also be used to","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":4384,"byte_end":4481,"line_start":176,"line_end":176,"column_start":1,"column_end":98}},{"value":"/ create a [`PipelineLayoutDescriptor`], which can be used to create a [`PipelineLayout`].","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":4482,"byte_end":4574,"line_start":177,"line_end":177,"column_start":1,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":377},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":5086,"byte_end":5095,"line_start":190,"line_end":190,"column_start":12,"column_end":21},"name":"BindGroup","qualname":"::BindGroup","value":"BindGroup {  }","parent":null,"children":[{"krate":0,"index":378}],"decl_id":null,"docs":" An opaque handle to a binding group.","sig":null,"attributes":[{"value":"/ An opaque handle to a binding group.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":4671,"byte_end":4711,"line_start":183,"line_end":183,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":4712,"byte_end":4715,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ A `BindGroup` represents the set of resources bound to the bindings described by a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":4716,"byte_end":4802,"line_start":185,"line_end":185,"column_start":1,"column_end":87}},{"value":"/ [`BindGroupLayout`]. It can be created with [`Device::create_bind_group`]. A `BindGroup` can","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":4803,"byte_end":4899,"line_start":186,"line_end":186,"column_start":1,"column_end":97}},{"value":"/ be bound to a particular [`RenderPass`] with [`RenderPass::set_bind_group`], or to a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":4900,"byte_end":4988,"line_start":187,"line_end":187,"column_start":1,"column_end":89}},{"value":"/ [`ComputePass`] with [`ComputePass::set_bind_group`].","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":4989,"byte_end":5046,"line_start":188,"line_end":188,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":385},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":5560,"byte_end":5572,"line_start":206,"line_end":206,"column_start":12,"column_end":24},"name":"ShaderModule","qualname":"::ShaderModule","value":"ShaderModule {  }","parent":null,"children":[{"krate":0,"index":386}],"decl_id":null,"docs":" A handle to a compiled shader module.","sig":null,"attributes":[{"value":"/ A handle to a compiled shader module.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":5238,"byte_end":5279,"line_start":200,"line_end":200,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":5280,"byte_end":5283,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ A `ShaderModule` represents a compiled shader module on the GPU. It can be created by passing","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":5284,"byte_end":5381,"line_start":202,"line_end":202,"column_start":1,"column_end":98}},{"value":"/ valid SPIR-V source code to [`Device::create_shader_module`]. Shader modules are used to define","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":5382,"byte_end":5481,"line_start":203,"line_end":203,"column_start":1,"column_end":100}},{"value":"/ programmable stages of a pipeline.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":5482,"byte_end":5520,"line_start":204,"line_end":204,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":393},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":5781,"byte_end":5795,"line_start":214,"line_end":214,"column_start":12,"column_end":26},"name":"PipelineLayout","qualname":"::PipelineLayout","value":"PipelineLayout {  }","parent":null,"children":[{"krate":0,"index":394}],"decl_id":null,"docs":" An opaque handle to a pipeline layout.","sig":null,"attributes":[{"value":"/ An opaque handle to a pipeline layout.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":5611,"byte_end":5653,"line_start":210,"line_end":210,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":5654,"byte_end":5657,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ A `PipelineLayout` object describes the available binding groups of a pipeline.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":5658,"byte_end":5741,"line_start":212,"line_end":212,"column_start":1,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":401},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":6122,"byte_end":6136,"line_start":223,"line_end":223,"column_start":12,"column_end":26},"name":"RenderPipeline","qualname":"::RenderPipeline","value":"RenderPipeline {  }","parent":null,"children":[{"krate":0,"index":402}],"decl_id":null,"docs":" A handle to a rendering (graphics) pipeline.","sig":null,"attributes":[{"value":"/ A handle to a rendering (graphics) pipeline.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":5836,"byte_end":5884,"line_start":218,"line_end":218,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":5885,"byte_end":5888,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ A `RenderPipeline` object represents a graphics pipeline and its stages, bindings, vertex","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":5889,"byte_end":5982,"line_start":220,"line_end":220,"column_start":1,"column_end":94}},{"value":"/ buffers and targets. A `RenderPipeline` may be created with [`Device::create_render_pipeline`].","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":5983,"byte_end":6082,"line_start":221,"line_end":221,"column_start":1,"column_end":100}}]},{"kind":"Struct","id":{"krate":0,"index":409},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":6252,"byte_end":6267,"line_start":229,"line_end":229,"column_start":12,"column_end":27},"name":"ComputePipeline","qualname":"::ComputePipeline","value":"ComputePipeline {  }","parent":null,"children":[{"krate":0,"index":410}],"decl_id":null,"docs":" A handle to a compute pipeline.\n","sig":null,"attributes":[{"value":"/ A handle to a compute pipeline.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":6177,"byte_end":6212,"line_start":227,"line_end":227,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":417},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":6676,"byte_end":6689,"line_start":239,"line_end":239,"column_start":12,"column_end":25},"name":"CommandBuffer","qualname":"::CommandBuffer","value":"CommandBuffer {  }","parent":null,"children":[{"krate":0,"index":418}],"decl_id":null,"docs":" An opaque handle to a command buffer on the GPU.","sig":null,"attributes":[{"value":"/ An opaque handle to a command buffer on the GPU.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":6309,"byte_end":6361,"line_start":233,"line_end":233,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":6362,"byte_end":6365,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ A `CommandBuffer` represents a complete sequence of commands that may be submitted to a command","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":6366,"byte_end":6465,"line_start":235,"line_end":235,"column_start":1,"column_end":100}},{"value":"/ queue with [`Queue::submit`]. A `CommandBuffer` is obtained by recording a series of commands to","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":6466,"byte_end":6566,"line_start":236,"line_end":236,"column_start":1,"column_end":101}},{"value":"/ a [`CommandEncoder`] and then calling [`CommandEncoder::finish`].","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":6567,"byte_end":6636,"line_start":237,"line_end":237,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":425},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":7108,"byte_end":7122,"line_start":251,"line_end":251,"column_start":12,"column_end":26},"name":"CommandEncoder","qualname":"::CommandEncoder","value":"CommandEncoder {  }","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":427}],"decl_id":null,"docs":" An object that encodes GPU operations.","sig":null,"attributes":[{"value":"/ An object that encodes GPU operations.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":6729,"byte_end":6771,"line_start":243,"line_end":243,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":6772,"byte_end":6775,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ A `CommandEncoder` can record [`RenderPass`]es, [`ComputePass`]es, and transfer operations","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":6776,"byte_end":6870,"line_start":245,"line_end":245,"column_start":1,"column_end":95}},{"value":"/ between driver-managed resources like [`Buffer`]s and [`Texture`]s.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":6871,"byte_end":6942,"line_start":246,"line_end":246,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":6943,"byte_end":6946,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ When finished recording, call [`CommandEncoder::finish`] to obtain a [`CommandBuffer`] which may","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":6947,"byte_end":7047,"line_start":248,"line_end":248,"column_start":1,"column_end":101}},{"value":"/ be submitted for execution.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":7048,"byte_end":7079,"line_start":249,"line_end":249,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":430},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":7401,"byte_end":7411,"line_start":260,"line_end":260,"column_start":12,"column_end":22},"name":"RenderPass","qualname":"::RenderPass","value":"RenderPass {  }","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":433}],"decl_id":null,"docs":" An in-progress recording of a render pass.\n","sig":null,"attributes":[{"value":"/ An in-progress recording of a render pass.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":7326,"byte_end":7372,"line_start":258,"line_end":258,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":437},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":7565,"byte_end":7576,"line_start":267,"line_end":267,"column_start":12,"column_end":23},"name":"ComputePass","qualname":"::ComputePass","value":"ComputePass {  }","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440}],"decl_id":null,"docs":" An in-progress recording of a compute pass.\n","sig":null,"attributes":[{"value":"/ An in-progress recording of a compute pass.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":7489,"byte_end":7536,"line_start":265,"line_end":265,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":444},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":7802,"byte_end":7807,"line_start":276,"line_end":276,"column_start":12,"column_end":17},"name":"Queue","qualname":"::Queue","value":"Queue {  }","parent":null,"children":[{"krate":0,"index":445}],"decl_id":null,"docs":" A handle to a command queue on a device.","sig":null,"attributes":[{"value":"/ A handle to a command queue on a device.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":7655,"byte_end":7699,"line_start":272,"line_end":272,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":7700,"byte_end":7703,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ A `Queue` executes recorded [`CommandBuffer`] objects.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":7704,"byte_end":7762,"line_start":274,"line_end":274,"column_start":1,"column_end":59}}]},{"kind":"StructVariant","id":{"krate":0,"index":454},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":7946,"byte_end":7952,"line_start":283,"line_end":283,"column_start":5,"column_end":11},"name":"Buffer","qualname":"::BindingResource::Buffer","value":"BindingResource::Buffer { buffer, range }","parent":{"krate":0,"index":452},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":457},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":8031,"byte_end":8038,"line_start":287,"line_end":287,"column_start":5,"column_end":12},"name":"Sampler","qualname":"::BindingResource::Sampler","value":"BindingResource::Sampler(&'a Sampler)","parent":{"krate":0,"index":452},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":460},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":8057,"byte_end":8068,"line_start":288,"line_end":288,"column_start":5,"column_end":16},"name":"TextureView","qualname":"::BindingResource::TextureView","value":"BindingResource::TextureView(&'a TextureView)","parent":{"krate":0,"index":452},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":452},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":7920,"byte_end":7935,"line_start":282,"line_end":282,"column_start":10,"column_end":25},"name":"BindingResource","qualname":"::BindingResource","value":"BindingResource::{Buffer, Sampler, TextureView}","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":457},{"krate":0,"index":460}],"decl_id":null,"docs":" A resource that can be bound to a pipeline.\n","sig":null,"attributes":[{"value":"/ A resource that can be bound to a pipeline.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":7839,"byte_end":7886,"line_start":280,"line_end":280,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":469},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":8177,"byte_end":8184,"line_start":293,"line_end":293,"column_start":12,"column_end":19},"name":"Binding","qualname":"::Binding","value":"Binding { binding, resource }","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":472}],"decl_id":null,"docs":" A bindable resource and the slot to bind it to.\n","sig":null,"attributes":[{"value":"/ A bindable resource and the slot to bind it to.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":8090,"byte_end":8141,"line_start":291,"line_end":291,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":471},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":8199,"byte_end":8206,"line_start":294,"line_end":294,"column_start":9,"column_end":16},"name":"binding","qualname":"::Binding::binding","value":"u32","parent":{"krate":0,"index":469},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":472},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":8221,"byte_end":8229,"line_start":295,"line_end":295,"column_start":9,"column_end":17},"name":"resource","qualname":"::Binding::resource","value":"BindingResource<'a>","parent":{"krate":0,"index":469},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":480},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":8366,"byte_end":8379,"line_start":301,"line_end":301,"column_start":5,"column_end":18},"name":"UniformBuffer","qualname":"::BindingType::UniformBuffer","value":"BindingType::UniformBuffer { dynamic }","parent":{"krate":0,"index":479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":482},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":8416,"byte_end":8429,"line_start":304,"line_end":304,"column_start":5,"column_end":18},"name":"StorageBuffer","qualname":"::BindingType::StorageBuffer","value":"BindingType::StorageBuffer { dynamic, readonly }","parent":{"krate":0,"index":479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":485},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":8490,"byte_end":8497,"line_start":308,"line_end":308,"column_start":5,"column_end":12},"name":"Sampler","qualname":"::BindingType::Sampler","value":"BindingType::Sampler { comparison }","parent":{"krate":0,"index":479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":487},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":8537,"byte_end":8551,"line_start":311,"line_end":311,"column_start":5,"column_end":19},"name":"SampledTexture","qualname":"::BindingType::SampledTexture","value":"BindingType::SampledTexture { dimension, component_type, multisampled }","parent":{"krate":0,"index":479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":491},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":8680,"byte_end":8694,"line_start":316,"line_end":316,"column_start":5,"column_end":19},"name":"StorageTexture","qualname":"::BindingType::StorageTexture","value":"BindingType::StorageTexture { dimension, component_type, format, readonly }","parent":{"krate":0,"index":479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":479},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":8348,"byte_end":8359,"line_start":300,"line_end":300,"column_start":10,"column_end":21},"name":"BindingType","qualname":"::BindingType","value":"BindingType::{UniformBuffer, StorageBuffer, Sampler, SampledTexture, StorageTexture}","parent":null,"children":[{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":487},{"krate":0,"index":491}],"decl_id":null,"docs":" Specific type of a binding..\n","sig":null,"attributes":[{"value":"/ Specific type of a binding..","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":8255,"byte_end":8287,"line_start":298,"line_end":298,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":511},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":8949,"byte_end":8969,"line_start":326,"line_end":326,"column_start":12,"column_end":32},"name":"BindGroupLayoutEntry","qualname":"::BindGroupLayoutEntry","value":"BindGroupLayoutEntry { binding, visibility, ty }","parent":null,"children":[{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514}],"decl_id":null,"docs":" A description of a single binding inside a bind group.\n","sig":null,"attributes":[{"value":"/ A description of a single binding inside a bind group.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":8849,"byte_end":8907,"line_start":324,"line_end":324,"column_start":1,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":512},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":8980,"byte_end":8987,"line_start":327,"line_end":327,"column_start":9,"column_end":16},"name":"binding","qualname":"::BindGroupLayoutEntry::binding","value":"u32","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":513},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":9002,"byte_end":9012,"line_start":328,"line_end":328,"column_start":9,"column_end":19},"name":"visibility","qualname":"::BindGroupLayoutEntry::visibility","value":"wgpu_types::ShaderStage","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":514},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":9035,"byte_end":9037,"line_start":329,"line_end":329,"column_start":9,"column_end":11},"name":"ty","qualname":"::BindGroupLayoutEntry::ty","value":"BindingType","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":522},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":9132,"byte_end":9157,"line_start":334,"line_end":334,"column_start":12,"column_end":37},"name":"BindGroupLayoutDescriptor","qualname":"::BindGroupLayoutDescriptor","value":"BindGroupLayoutDescriptor { bindings, label }","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":525}],"decl_id":null,"docs":" A description of a bind group layout.\n","sig":null,"attributes":[{"value":"/ A description of a bind group layout.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":9055,"byte_end":9096,"line_start":332,"line_end":332,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":524},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":9172,"byte_end":9180,"line_start":335,"line_end":335,"column_start":9,"column_end":17},"name":"bindings","qualname":"::BindGroupLayoutDescriptor::bindings","value":"&'a [BindGroupLayoutEntry]","parent":{"krate":0,"index":522},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":525},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":9347,"byte_end":9352,"line_start":339,"line_end":339,"column_start":9,"column_end":14},"name":"label","qualname":"::BindGroupLayoutDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":522},"children":[],"decl_id":null,"docs":" An optional label to apply to the bind group layout.\n This can be useful for debugging and performance analysis.\n","sig":null,"attributes":[{"value":"/ An optional label to apply to the bind group layout.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":9215,"byte_end":9271,"line_start":337,"line_end":337,"column_start":5,"column_end":61}},{"value":"/ This can be useful for debugging and performance analysis.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":9276,"byte_end":9338,"line_start":338,"line_end":338,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":532},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":9481,"byte_end":9500,"line_start":344,"line_end":344,"column_start":12,"column_end":31},"name":"BindGroupDescriptor","qualname":"::BindGroupDescriptor","value":"BindGroupDescriptor { layout, bindings, label }","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536}],"decl_id":null,"docs":" A description of a group of bindings and the resources to be bound.\n","sig":null,"attributes":[{"value":"/ A description of a group of bindings and the resources to be bound.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":9374,"byte_end":9445,"line_start":342,"line_end":342,"column_start":1,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":534},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":9555,"byte_end":9561,"line_start":346,"line_end":346,"column_start":9,"column_end":15},"name":"layout","qualname":"::BindGroupDescriptor::layout","value":"&'a BindGroupLayout","parent":{"krate":0,"index":532},"children":[],"decl_id":null,"docs":" The layout for this bind group.\n","sig":null,"attributes":[{"value":"/ The layout for this bind group.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":9511,"byte_end":9546,"line_start":345,"line_end":345,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":535},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":9643,"byte_end":9651,"line_start":349,"line_end":349,"column_start":9,"column_end":17},"name":"bindings","qualname":"::BindGroupDescriptor::bindings","value":"&'a [Binding<'a>]","parent":{"krate":0,"index":532},"children":[],"decl_id":null,"docs":" The resources to bind to this bind group.\n","sig":null,"attributes":[{"value":"/ The resources to bind to this bind group.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":9589,"byte_end":9634,"line_start":348,"line_end":348,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":536},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":9802,"byte_end":9807,"line_start":353,"line_end":353,"column_start":9,"column_end":14},"name":"label","qualname":"::BindGroupDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":532},"children":[],"decl_id":null,"docs":" An optional label to apply to the bind group.\n This can be useful for debugging and performance analysis.\n","sig":null,"attributes":[{"value":"/ An optional label to apply to the bind group.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":9677,"byte_end":9726,"line_start":351,"line_end":351,"column_start":5,"column_end":54}},{"value":"/ This can be useful for debugging and performance analysis.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":9731,"byte_end":9793,"line_start":352,"line_end":352,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":543},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":10029,"byte_end":10053,"line_start":361,"line_end":361,"column_start":12,"column_end":36},"name":"PipelineLayoutDescriptor","qualname":"::PipelineLayoutDescriptor","value":"PipelineLayoutDescriptor { bind_group_layouts }","parent":null,"children":[{"krate":0,"index":545}],"decl_id":null,"docs":" A description of a pipeline layout.","sig":null,"attributes":[{"value":"/ A description of a pipeline layout.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":9829,"byte_end":9868,"line_start":356,"line_end":356,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":9869,"byte_end":9872,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/ A `PipelineLayoutDescriptor` can be passed to [`Device::create_pipeline_layout`] to obtain a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":9873,"byte_end":9969,"line_start":358,"line_end":358,"column_start":1,"column_end":97}},{"value":"/ [`PipelineLayout`].","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":9970,"byte_end":9993,"line_start":359,"line_end":359,"column_start":1,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":545},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":10068,"byte_end":10086,"line_start":362,"line_end":362,"column_start":9,"column_end":27},"name":"bind_group_layouts","qualname":"::PipelineLayoutDescriptor::bind_group_layouts","value":"&'a [&'a BindGroupLayout]","parent":{"krate":0,"index":543},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":552},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":10205,"byte_end":10232,"line_start":367,"line_end":367,"column_start":12,"column_end":39},"name":"ProgrammableStageDescriptor","qualname":"::ProgrammableStageDescriptor","value":"ProgrammableStageDescriptor { module, entry_point }","parent":null,"children":[{"krate":0,"index":554},{"krate":0,"index":555}],"decl_id":null,"docs":" A description of a programmable pipeline stage.\n","sig":null,"attributes":[{"value":"/ A description of a programmable pipeline stage.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":10118,"byte_end":10169,"line_start":365,"line_end":365,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":554},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":10298,"byte_end":10304,"line_start":369,"line_end":369,"column_start":9,"column_end":15},"name":"module","qualname":"::ProgrammableStageDescriptor::module","value":"&'a ShaderModule","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" The compiled shader module for this stage.\n","sig":null,"attributes":[{"value":"/ The compiled shader module for this stage.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":10243,"byte_end":10289,"line_start":368,"line_end":368,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":555},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":10393,"byte_end":10404,"line_start":372,"line_end":372,"column_start":9,"column_end":20},"name":"entry_point","qualname":"::ProgrammableStageDescriptor::entry_point","value":"&'a str","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" The name of the entry point in the compiled shader.\n","sig":null,"attributes":[{"value":"/ The name of the entry point in the compiled shader.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":10329,"byte_end":10384,"line_start":371,"line_end":371,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":562},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":10503,"byte_end":10524,"line_start":377,"line_end":377,"column_start":12,"column_end":33},"name":"VertexStateDescriptor","qualname":"::VertexStateDescriptor","value":"VertexStateDescriptor { index_format, vertex_buffers }","parent":null,"children":[{"krate":0,"index":564},{"krate":0,"index":565}],"decl_id":null,"docs":" The vertex input state for a render pipeline.\n","sig":null,"attributes":[{"value":"/ The vertex input state for a render pipeline.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":10418,"byte_end":10467,"line_start":375,"line_end":375,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":564},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":10604,"byte_end":10616,"line_start":379,"line_end":379,"column_start":9,"column_end":21},"name":"index_format","qualname":"::VertexStateDescriptor::index_format","value":"wgpu_types::IndexFormat","parent":{"krate":0,"index":562},"children":[],"decl_id":null,"docs":" The format of any index buffers used with this pipeline.\n","sig":null,"attributes":[{"value":"/ The format of any index buffers used with this pipeline.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":10535,"byte_end":10595,"line_start":378,"line_end":378,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":565},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":10706,"byte_end":10720,"line_start":382,"line_end":382,"column_start":9,"column_end":23},"name":"vertex_buffers","qualname":"::VertexStateDescriptor::vertex_buffers","value":"&'a [VertexBufferDescriptor<'a>]","parent":{"krate":0,"index":562},"children":[],"decl_id":null,"docs":" The format of any vertex buffers used with this pipeline.\n","sig":null,"attributes":[{"value":"/ The format of any vertex buffers used with this pipeline.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":10636,"byte_end":10697,"line_start":381,"line_end":381,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":572},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":10832,"byte_end":10854,"line_start":387,"line_end":387,"column_start":12,"column_end":34},"name":"VertexBufferDescriptor","qualname":"::VertexBufferDescriptor","value":"VertexBufferDescriptor { stride, step_mode, attributes }","parent":null,"children":[{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576}],"decl_id":null,"docs":" A description of a vertex buffer.\n","sig":null,"attributes":[{"value":"/ A description of a vertex buffer.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":10759,"byte_end":10796,"line_start":385,"line_end":385,"column_start":1,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":574},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":10932,"byte_end":10938,"line_start":389,"line_end":389,"column_start":9,"column_end":15},"name":"stride","qualname":"::VertexBufferDescriptor::stride","value":"u64","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" The stride, in bytes, between elements of this buffer.\n","sig":null,"attributes":[{"value":"/ The stride, in bytes, between elements of this buffer.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":10865,"byte_end":10923,"line_start":388,"line_end":388,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":575},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":10964,"byte_end":10973,"line_start":391,"line_end":391,"column_start":9,"column_end":18},"name":"step_mode","qualname":"::VertexBufferDescriptor::step_mode","value":"wgpu_types::InputStepMode","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":576},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":11062,"byte_end":11072,"line_start":394,"line_end":394,"column_start":9,"column_end":19},"name":"attributes","qualname":"::VertexBufferDescriptor::attributes","value":"&'a [wgpu_types::VertexAttributeDescriptor]","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" The list of attributes which comprise a single vertex.\n","sig":null,"attributes":[{"value":"/ The list of attributes which comprise a single vertex.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":10995,"byte_end":11053,"line_start":393,"line_end":393,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":583},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":11205,"byte_end":11229,"line_start":399,"line_end":399,"column_start":12,"column_end":36},"name":"RenderPipelineDescriptor","qualname":"::RenderPipelineDescriptor","value":"RenderPipelineDescriptor { layout, vertex_stage, fragment_stage, rasterization_state, primitive_topology, color_states, depth_stencil_state, vertex_state, sample_count, sample_mask, alpha_to_coverage_enabled }","parent":null,"children":[{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595}],"decl_id":null,"docs":" A complete description of a render (graphics) pipeline.\n","sig":null,"attributes":[{"value":"/ A complete description of a render (graphics) pipeline.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":11110,"byte_end":11169,"line_start":397,"line_end":397,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":585},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":11297,"byte_end":11303,"line_start":401,"line_end":401,"column_start":9,"column_end":15},"name":"layout","qualname":"::RenderPipelineDescriptor::layout","value":"&'a PipelineLayout","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" The layout of bind groups for this pipeline.\n","sig":null,"attributes":[{"value":"/ The layout of bind groups for this pipeline.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":11240,"byte_end":11288,"line_start":400,"line_end":400,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":586},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":11389,"byte_end":11401,"line_start":404,"line_end":404,"column_start":9,"column_end":21},"name":"vertex_stage","qualname":"::RenderPipelineDescriptor::vertex_stage","value":"ProgrammableStageDescriptor<'a>","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" The compiled vertex stage and its entry point.\n","sig":null,"attributes":[{"value":"/ The compiled vertex stage and its entry point.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":11330,"byte_end":11380,"line_start":403,"line_end":403,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":587},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":11510,"byte_end":11524,"line_start":407,"line_end":407,"column_start":9,"column_end":23},"name":"fragment_stage","qualname":"::RenderPipelineDescriptor::fragment_stage","value":"std::option::Option<ProgrammableStageDescriptor<'a>>","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" The compiled fragment stage and its entry point, if any.\n","sig":null,"attributes":[{"value":"/ The compiled fragment stage and its entry point, if any.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":11441,"byte_end":11501,"line_start":406,"line_end":406,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":588},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":11629,"byte_end":11648,"line_start":410,"line_end":410,"column_start":9,"column_end":28},"name":"rasterization_state","qualname":"::RenderPipelineDescriptor::rasterization_state","value":"std::option::Option<wgpu_types::RasterizationStateDescriptor>","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" The rasterization process for this pipeline.\n","sig":null,"attributes":[{"value":"/ The rasterization process for this pipeline.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":11572,"byte_end":11620,"line_start":409,"line_end":409,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":589},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":11756,"byte_end":11774,"line_start":413,"line_end":413,"column_start":9,"column_end":27},"name":"primitive_topology","qualname":"::RenderPipelineDescriptor::primitive_topology","value":"wgpu_types::PrimitiveTopology","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" The primitive topology used to interpret vertices.\n","sig":null,"attributes":[{"value":"/ The primitive topology used to interpret vertices.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":11693,"byte_end":11747,"line_start":412,"line_end":412,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":590},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":11879,"byte_end":11891,"line_start":416,"line_end":416,"column_start":9,"column_end":21},"name":"color_states","qualname":"::RenderPipelineDescriptor::color_states","value":"&'a [wgpu_types::ColorStateDescriptor]","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" The effect of draw calls on the color aspect of the output target.\n","sig":null,"attributes":[{"value":"/ The effect of draw calls on the color aspect of the output target.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":11800,"byte_end":11870,"line_start":415,"line_end":415,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":591},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":12026,"byte_end":12045,"line_start":419,"line_end":419,"column_start":9,"column_end":28},"name":"depth_stencil_state","qualname":"::RenderPipelineDescriptor::depth_stencil_state","value":"std::option::Option<wgpu_types::DepthStencilStateDescriptor>","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" The effect of draw calls on the depth and stencil aspects of the output target, if any.\n","sig":null,"attributes":[{"value":"/ The effect of draw calls on the depth and stencil aspects of the output target, if any.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":11926,"byte_end":12017,"line_start":418,"line_end":418,"column_start":5,"column_end":96}}]},{"kind":"Field","id":{"krate":0,"index":592},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":12143,"byte_end":12155,"line_start":422,"line_end":422,"column_start":9,"column_end":21},"name":"vertex_state","qualname":"::RenderPipelineDescriptor::vertex_state","value":"VertexStateDescriptor<'a>","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" The vertex input state for this pipeline.\n","sig":null,"attributes":[{"value":"/ The vertex input state for this pipeline.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":12089,"byte_end":12134,"line_start":421,"line_end":421,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":593},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":12256,"byte_end":12268,"line_start":425,"line_end":425,"column_start":9,"column_end":21},"name":"sample_count","qualname":"::RenderPipelineDescriptor::sample_count","value":"u32","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" The number of samples calculated per pixel (for MSAA).\n","sig":null,"attributes":[{"value":"/ The number of samples calculated per pixel (for MSAA).","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":12189,"byte_end":12247,"line_start":424,"line_end":424,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":594},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":12365,"byte_end":12376,"line_start":428,"line_end":428,"column_start":9,"column_end":20},"name":"sample_mask","qualname":"::RenderPipelineDescriptor::sample_mask","value":"u32","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" Bitmask that restricts the samples of a pixel modified by this pipeline.\n","sig":null,"attributes":[{"value":"/ Bitmask that restricts the samples of a pixel modified by this pipeline.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":12280,"byte_end":12356,"line_start":427,"line_end":427,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":595},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":12757,"byte_end":12782,"line_start":435,"line_end":435,"column_start":9,"column_end":34},"name":"alpha_to_coverage_enabled","qualname":"::RenderPipelineDescriptor::alpha_to_coverage_enabled","value":"bool","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" When enabled, produces another sample mask per pixel based on the alpha output value, that\n is ANDed with the sample_mask and the primitive coverage to restrict the set of samples\n affected by a primitive.\n The implicit mask produced for alpha of zero is guaranteed to be zero, and for alpha of one\n is guaranteed to be all 1-s.\n","sig":null,"attributes":[{"value":"/ When enabled, produces another sample mask per pixel based on the alpha output value, that","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":12388,"byte_end":12482,"line_start":430,"line_end":430,"column_start":5,"column_end":99}},{"value":"/ is ANDed with the sample_mask and the primitive coverage to restrict the set of samples","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":12487,"byte_end":12578,"line_start":431,"line_end":431,"column_start":5,"column_end":96}},{"value":"/ affected by a primitive.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":12583,"byte_end":12611,"line_start":432,"line_end":432,"column_start":5,"column_end":33}},{"value":"/ The implicit mask produced for alpha of zero is guaranteed to be zero, and for alpha of one","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":12616,"byte_end":12711,"line_start":433,"line_end":433,"column_start":5,"column_end":100}},{"value":"/ is guaranteed to be all 1-s.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":12716,"byte_end":12748,"line_start":434,"line_end":434,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":602},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":12878,"byte_end":12903,"line_start":440,"line_end":440,"column_start":12,"column_end":37},"name":"ComputePipelineDescriptor","qualname":"::ComputePipelineDescriptor","value":"ComputePipelineDescriptor { layout, compute_stage }","parent":null,"children":[{"krate":0,"index":604},{"krate":0,"index":605}],"decl_id":null,"docs":" A complete description of a compute pipeline.\n","sig":null,"attributes":[{"value":"/ A complete description of a compute pipeline.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":12793,"byte_end":12842,"line_start":438,"line_end":438,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":604},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":12971,"byte_end":12977,"line_start":442,"line_end":442,"column_start":9,"column_end":15},"name":"layout","qualname":"::ComputePipelineDescriptor::layout","value":"&'a PipelineLayout","parent":{"krate":0,"index":602},"children":[],"decl_id":null,"docs":" The layout of bind groups for this pipeline.\n","sig":null,"attributes":[{"value":"/ The layout of bind groups for this pipeline.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":12914,"byte_end":12962,"line_start":441,"line_end":441,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":605},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":13064,"byte_end":13077,"line_start":445,"line_end":445,"column_start":9,"column_end":22},"name":"compute_stage","qualname":"::ComputePipelineDescriptor::compute_stage","value":"ProgrammableStageDescriptor<'a>","parent":{"krate":0,"index":602},"children":[],"decl_id":null,"docs":" The compiled compute stage and its entry point.\n","sig":null,"attributes":[{"value":"/ The compiled compute stage and its entry point.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":13004,"byte_end":13055,"line_start":444,"line_end":444,"column_start":5,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":114},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":13124,"byte_end":13159,"line_start":448,"line_end":448,"column_start":10,"column_end":45},"name":"RenderPassColorAttachmentDescriptor","qualname":"::RenderPassColorAttachmentDescriptor","value":"wgt::RenderPassColorAttachmentDescriptorBase<&'a TextureView>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":116},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":13242,"byte_end":13284,"line_start":450,"line_end":450,"column_start":10,"column_end":52},"name":"RenderPassDepthStencilAttachmentDescriptor","qualname":"::RenderPassDepthStencilAttachmentDescriptor","value":"wgt::RenderPassDepthStencilAttachmentDescriptorBase<&'a TextureView>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":612},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":13453,"byte_end":13473,"line_start":455,"line_end":455,"column_start":12,"column_end":32},"name":"RenderPassDescriptor","qualname":"::RenderPassDescriptor","value":"RenderPassDescriptor { color_attachments, depth_stencil_attachment }","parent":null,"children":[{"krate":0,"index":615},{"krate":0,"index":616}],"decl_id":null,"docs":" A description of all the attachments of a render pass.\n","sig":null,"attributes":[{"value":"/ A description of all the attachments of a render pass.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":13366,"byte_end":13424,"line_start":453,"line_end":453,"column_start":1,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":615},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":13542,"byte_end":13559,"line_start":457,"line_end":457,"column_start":9,"column_end":26},"name":"color_attachments","qualname":"::RenderPassDescriptor::color_attachments","value":"&'b [wgpu_types::RenderPassColorAttachmentDescriptorBase<&'a TextureView>]","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" The color attachments of the render pass.\n","sig":null,"attributes":[{"value":"/ The color attachments of the render pass.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":13488,"byte_end":13533,"line_start":456,"line_end":456,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":616},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":13686,"byte_end":13710,"line_start":460,"line_end":460,"column_start":9,"column_end":33},"name":"depth_stencil_attachment","qualname":"::RenderPassDescriptor::depth_stencil_attachment","value":"std::option::Option<wgpu_types::RenderPassDepthStencilAttachmentDescriptorBase<&'a TextureView>>","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" The depth and stencil attachment of the render pass, if any.\n","sig":null,"attributes":[{"value":"/ The depth and stencil attachment of the render pass, if any.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":13613,"byte_end":13677,"line_start":459,"line_end":459,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":621},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":13866,"byte_end":13882,"line_start":466,"line_end":466,"column_start":12,"column_end":28},"name":"BufferDescriptor","qualname":"::BufferDescriptor","value":"BufferDescriptor { label, size, usage }","parent":null,"children":[{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625}],"decl_id":null,"docs":" A description of a buffer.\n","sig":null,"attributes":[{"value":"/ A description of a buffer.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":13779,"byte_end":13809,"line_start":464,"line_end":464,"column_start":1,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":623},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":14014,"byte_end":14019,"line_start":469,"line_end":469,"column_start":9,"column_end":14},"name":"label","qualname":"::BufferDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":621},"children":[],"decl_id":null,"docs":" An optional label to apply to the buffer.\n This can be useful for debugging and performance analysis.\n","sig":null,"attributes":[{"value":"/ An optional label to apply to the buffer.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":13893,"byte_end":13938,"line_start":467,"line_end":467,"column_start":5,"column_end":50}},{"value":"/ This can be useful for debugging and performance analysis.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":13943,"byte_end":14005,"line_start":468,"line_end":468,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":624},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":14090,"byte_end":14094,"line_start":472,"line_end":472,"column_start":9,"column_end":13},"name":"size","qualname":"::BufferDescriptor::size","value":"u64","parent":{"krate":0,"index":621},"children":[],"decl_id":null,"docs":" The size of the buffer (in bytes).\n","sig":null,"attributes":[{"value":"/ The size of the buffer (in bytes).","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":14043,"byte_end":14081,"line_start":471,"line_end":471,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":625},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":14170,"byte_end":14175,"line_start":475,"line_end":475,"column_start":9,"column_end":14},"name":"usage","qualname":"::BufferDescriptor::usage","value":"wgpu_types::BufferUsage","parent":{"krate":0,"index":621},"children":[],"decl_id":null,"docs":" All possible ways the buffer can be used.\n","sig":null,"attributes":[{"value":"/ All possible ways the buffer can be used.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":14116,"byte_end":14161,"line_start":474,"line_end":474,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":647},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":14289,"byte_end":14313,"line_start":480,"line_end":480,"column_start":12,"column_end":36},"name":"CommandEncoderDescriptor","qualname":"::CommandEncoderDescriptor","value":"CommandEncoderDescriptor { label }","parent":null,"children":[{"krate":0,"index":649}],"decl_id":null,"docs":" A description of a command encoder.\n","sig":null,"attributes":[{"value":"/ A description of a command encoder.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":14193,"byte_end":14232,"line_start":478,"line_end":478,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":649},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":14454,"byte_end":14459,"line_start":483,"line_end":483,"column_start":9,"column_end":14},"name":"label","qualname":"::CommandEncoderDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":647},"children":[],"decl_id":null,"docs":" An optional label to apply to the command encoder.\n This can be useful for debugging and performance analysis.\n","sig":null,"attributes":[{"value":"/ An optional label to apply to the command encoder.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":14324,"byte_end":14378,"line_start":481,"line_end":481,"column_start":5,"column_end":59}},{"value":"/ This can be useful for debugging and performance analysis.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":14383,"byte_end":14445,"line_start":482,"line_end":482,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":671},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":14569,"byte_end":14586,"line_start":488,"line_end":488,"column_start":12,"column_end":29},"name":"TextureDescriptor","qualname":"::TextureDescriptor","value":"TextureDescriptor { label, size, array_layer_count, mip_level_count, sample_count, dimension, format, usage }","parent":null,"children":[{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680}],"decl_id":null,"docs":" A description of a texture.\n","sig":null,"attributes":[{"value":"/ A description of a texture.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":14481,"byte_end":14512,"line_start":486,"line_end":486,"column_start":1,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":673},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":14719,"byte_end":14724,"line_start":491,"line_end":491,"column_start":9,"column_end":14},"name":"label","qualname":"::TextureDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":671},"children":[],"decl_id":null,"docs":" An optional label to apply to the texture.\n This can be useful for debugging and performance analysis.\n","sig":null,"attributes":[{"value":"/ An optional label to apply to the texture.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":14597,"byte_end":14643,"line_start":489,"line_end":489,"column_start":5,"column_end":51}},{"value":"/ This can be useful for debugging and performance analysis.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":14648,"byte_end":14710,"line_start":490,"line_end":490,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":674},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":14785,"byte_end":14789,"line_start":494,"line_end":494,"column_start":9,"column_end":13},"name":"size","qualname":"::TextureDescriptor::size","value":"wgpu_types::Extent3d","parent":{"krate":0,"index":671},"children":[],"decl_id":null,"docs":" The size of the texture.\n","sig":null,"attributes":[{"value":"/ The size of the texture.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":14748,"byte_end":14776,"line_start":493,"line_end":493,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":675},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":14841,"byte_end":14858,"line_start":497,"line_end":497,"column_start":9,"column_end":26},"name":"array_layer_count","qualname":"::TextureDescriptor::array_layer_count","value":"u32","parent":{"krate":0,"index":671},"children":[],"decl_id":null,"docs":" The array layer count.\n","sig":null,"attributes":[{"value":"/ The array layer count.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":14806,"byte_end":14832,"line_start":496,"line_end":496,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":676},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":14903,"byte_end":14918,"line_start":500,"line_end":500,"column_start":9,"column_end":24},"name":"mip_level_count","qualname":"::TextureDescriptor::mip_level_count","value":"u32","parent":{"krate":0,"index":671},"children":[],"decl_id":null,"docs":" The mip level count.\n","sig":null,"attributes":[{"value":"/ The mip level count.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":14870,"byte_end":14894,"line_start":499,"line_end":499,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":677},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":14960,"byte_end":14972,"line_start":503,"line_end":503,"column_start":9,"column_end":21},"name":"sample_count","qualname":"::TextureDescriptor::sample_count","value":"u32","parent":{"krate":0,"index":671},"children":[],"decl_id":null,"docs":" The sample count.\n","sig":null,"attributes":[{"value":"/ The sample count.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":14930,"byte_end":14951,"line_start":502,"line_end":502,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":678},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":15019,"byte_end":15028,"line_start":506,"line_end":506,"column_start":9,"column_end":18},"name":"dimension","qualname":"::TextureDescriptor::dimension","value":"wgpu_types::TextureDimension","parent":{"krate":0,"index":671},"children":[],"decl_id":null,"docs":" The texture dimension.\n","sig":null,"attributes":[{"value":"/ The texture dimension.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":14984,"byte_end":15010,"line_start":505,"line_end":505,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":679},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":15085,"byte_end":15091,"line_start":509,"line_end":509,"column_start":9,"column_end":15},"name":"format","qualname":"::TextureDescriptor::format","value":"wgpu_types::TextureFormat","parent":{"krate":0,"index":671},"children":[],"decl_id":null,"docs":" The texture format.\n","sig":null,"attributes":[{"value":"/ The texture format.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":15053,"byte_end":15076,"line_start":508,"line_end":508,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":680},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":15168,"byte_end":15173,"line_start":512,"line_end":512,"column_start":9,"column_end":14},"name":"usage","qualname":"::TextureDescriptor::usage","value":"wgpu_types::TextureUsage","parent":{"krate":0,"index":671},"children":[],"decl_id":null,"docs":" All possible ways the texture can be used.\n","sig":null,"attributes":[{"value":"/ All possible ways the texture can be used.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":15113,"byte_end":15159,"line_start":511,"line_end":511,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":702},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":15268,"byte_end":15283,"line_start":517,"line_end":517,"column_start":12,"column_end":27},"name":"SwapChainOutput","qualname":"::SwapChainOutput","value":"SwapChainOutput { view }","parent":null,"children":[{"krate":0,"index":703},{"krate":0,"index":704}],"decl_id":null,"docs":" A swap chain image that can be rendered to.\n","sig":null,"attributes":[{"value":"/ A swap chain image that can be rendered to.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":15192,"byte_end":15239,"line_start":515,"line_end":515,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":703},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":15294,"byte_end":15298,"line_start":518,"line_end":518,"column_start":9,"column_end":13},"name":"view","qualname":"::SwapChainOutput::view","value":"TextureView","parent":{"krate":0,"index":702},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":707},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":15463,"byte_end":15477,"line_start":524,"line_end":524,"column_start":12,"column_end":26},"name":"BufferCopyView","qualname":"::BufferCopyView","value":"BufferCopyView { buffer, offset, bytes_per_row, rows_per_image }","parent":null,"children":[{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712}],"decl_id":null,"docs":" A view of a buffer which can be used to copy to or from a texture.\n","sig":null,"attributes":[{"value":"/ A view of a buffer which can be used to copy to or from a texture.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":15357,"byte_end":15427,"line_start":522,"line_end":522,"column_start":1,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":709},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":15536,"byte_end":15542,"line_start":526,"line_end":526,"column_start":9,"column_end":15},"name":"buffer","qualname":"::BufferCopyView::buffer","value":"&'a Buffer","parent":{"krate":0,"index":707},"children":[],"decl_id":null,"docs":" The buffer to be copied to or from.\n","sig":null,"attributes":[{"value":"/ The buffer to be copied to or from.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":15488,"byte_end":15527,"line_start":525,"line_end":525,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":710},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":15732,"byte_end":15738,"line_start":530,"line_end":530,"column_start":9,"column_end":15},"name":"offset","qualname":"::BufferCopyView::offset","value":"u64","parent":{"krate":0,"index":707},"children":[],"decl_id":null,"docs":" The offset in bytes from the start of the buffer.\n In the future this must be aligned to 512 bytes, however the requirement is currently unimplemented.\n","sig":null,"attributes":[{"value":"/ The offset in bytes from the start of the buffer.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":15561,"byte_end":15614,"line_start":528,"line_end":528,"column_start":5,"column_end":58}},{"value":"/ In the future this must be aligned to 512 bytes, however the requirement is currently unimplemented.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":15619,"byte_end":15723,"line_start":529,"line_end":529,"column_start":5,"column_end":109}}]},{"kind":"Field","id":{"krate":0,"index":711},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":15934,"byte_end":15947,"line_start":534,"line_end":534,"column_start":9,"column_end":22},"name":"bytes_per_row","qualname":"::BufferCopyView::bytes_per_row","value":"u32","parent":{"krate":0,"index":707},"children":[],"decl_id":null,"docs":" The size in bytes of a single row of the texture.\n In the future this must be a multiple of 256 bytes, however the requirement is currently unimplemented.\n","sig":null,"attributes":[{"value":"/ The size in bytes of a single row of the texture.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":15760,"byte_end":15813,"line_start":532,"line_end":532,"column_start":5,"column_end":58}},{"value":"/ In the future this must be a multiple of 256 bytes, however the requirement is currently unimplemented.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":15818,"byte_end":15925,"line_start":533,"line_end":533,"column_start":5,"column_end":112}}]},{"kind":"Field","id":{"krate":0,"index":712},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":16108,"byte_end":16122,"line_start":538,"line_end":538,"column_start":9,"column_end":23},"name":"rows_per_image","qualname":"::BufferCopyView::rows_per_image","value":"u32","parent":{"krate":0,"index":707},"children":[],"decl_id":null,"docs":" The height in texels of the imaginary texture view overlaid on the buffer.\n Must be zero for copies where `copy_size.depth == 1`.\n","sig":null,"attributes":[{"value":"/ The height in texels of the imaginary texture view overlaid on the buffer.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":15959,"byte_end":16037,"line_start":536,"line_end":536,"column_start":5,"column_end":83}},{"value":"/ Must be zero for copies where `copy_size.depth == 1`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":16042,"byte_end":16099,"line_start":537,"line_end":537,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":719},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":16565,"byte_end":16580,"line_start":554,"line_end":554,"column_start":12,"column_end":27},"name":"TextureCopyView","qualname":"::TextureCopyView","value":"TextureCopyView { texture, mip_level, array_layer, origin }","parent":null,"children":[{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724}],"decl_id":null,"docs":" A view of a texture which can be used to copy to or from a buffer or another texture.\n","sig":null,"attributes":[{"value":"/ A view of a texture which can be used to copy to or from a buffer or another texture.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":16440,"byte_end":16529,"line_start":552,"line_end":552,"column_start":1,"column_end":90}}]},{"kind":"Field","id":{"krate":0,"index":721},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":16640,"byte_end":16647,"line_start":556,"line_end":556,"column_start":9,"column_end":16},"name":"texture","qualname":"::TextureCopyView::texture","value":"&'a Texture","parent":{"krate":0,"index":719},"children":[],"decl_id":null,"docs":" The texture to be copied to or from.\n","sig":null,"attributes":[{"value":"/ The texture to be copied to or from.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":16591,"byte_end":16631,"line_start":555,"line_end":555,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":722},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":16716,"byte_end":16725,"line_start":559,"line_end":559,"column_start":9,"column_end":18},"name":"mip_level","qualname":"::TextureCopyView::mip_level","value":"u32","parent":{"krate":0,"index":719},"children":[],"decl_id":null,"docs":" The target mip level of the texture.\n","sig":null,"attributes":[{"value":"/ The target mip level of the texture.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":16667,"byte_end":16707,"line_start":558,"line_end":558,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":723},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":16782,"byte_end":16793,"line_start":562,"line_end":562,"column_start":9,"column_end":20},"name":"array_layer","qualname":"::TextureCopyView::array_layer","value":"u32","parent":{"krate":0,"index":719},"children":[],"decl_id":null,"docs":" The target layer of the texture.\n","sig":null,"attributes":[{"value":"/ The target layer of the texture.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":16737,"byte_end":16773,"line_start":561,"line_end":561,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":724},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":16876,"byte_end":16882,"line_start":565,"line_end":565,"column_start":9,"column_end":15},"name":"origin","qualname":"::TextureCopyView::origin","value":"wgpu_types::Origin3d","parent":{"krate":0,"index":719},"children":[],"decl_id":null,"docs":" The base texel of the texture in the selected `mip_level`.\n","sig":null,"attributes":[{"value":"/ The base texel of the texture in the selected `mip_level`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":16805,"byte_end":16867,"line_start":564,"line_end":564,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":123},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":17262,"byte_end":17280,"line_start":580,"line_end":580,"column_start":12,"column_end":30},"name":"CreateBufferMapped","qualname":"::CreateBufferMapped","value":"CreateBufferMapped { data }","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127}],"decl_id":null,"docs":" A buffer being created, mapped in host memory.\n","sig":null,"attributes":[{"value":"/ A buffer being created, mapped in host memory.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":17200,"byte_end":17250,"line_start":579,"line_end":579,"column_start":1,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":126},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":17322,"byte_end":17326,"line_start":582,"line_end":582,"column_start":9,"column_end":13},"name":"data","qualname":"::CreateBufferMapped::data","value":"&'a mut [u8]","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":17489,"byte_end":17495,"line_start":588,"line_end":588,"column_start":12,"column_end":18},"name":"finish","qualname":"<CreateBufferMapped>::finish","value":"fn (self) -> Buffer","parent":null,"children":[],"decl_id":null,"docs":" Unmaps the buffer from host memory and returns a [`Buffer`].\n","sig":null,"attributes":[{"value":"/ Unmaps the buffer from host memory and returns a [`Buffer`].","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":17413,"byte_end":17477,"line_start":587,"line_end":587,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":17700,"byte_end":17706,"line_start":596,"line_end":596,"column_start":12,"column_end":18},"name":"create","qualname":"<Surface>::create","value":"fn <W> (window: &W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a surface from a raw window handle.\n","sig":null,"attributes":[{"value":"/ Creates a surface from a raw window handle.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":17641,"byte_end":17688,"line_start":595,"line_end":595,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":18229,"byte_end":18238,"line_start":612,"line_end":612,"column_start":12,"column_end":21},"name":"enumerate","qualname":"<Adapter>::enumerate","value":"fn (backends: BackendBit) -> Vec<Self>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves all available [`Adapter`]s that match the given backends.\n","sig":null,"attributes":[{"value":"/ Retrieves all available [`Adapter`]s that match the given backends.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":18146,"byte_end":18217,"line_start":611,"line_end":611,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":18686,"byte_end":18693,"line_start":624,"line_end":624,"column_start":18,"column_end":25},"name":"request","qualname":"<Adapter>::request","value":"fn (options: &RequestAdapterOptions<'_>, backends: BackendBit) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves an [`Adapter`] which matches the given options.","sig":null,"attributes":[{"value":"/ Retrieves an [`Adapter`] which matches the given options.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":18420,"byte_end":18481,"line_start":619,"line_end":619,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":18486,"byte_end":18489,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ Some options are \"soft\", so treated as non-mandatory. Others are \"hard\".","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":18494,"byte_end":18570,"line_start":621,"line_end":621,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":18575,"byte_end":18578,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ If no adapters are found that suffice all the \"hard\" options, `None` is returned.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":18583,"byte_end":18668,"line_start":623,"line_end":623,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":19853,"byte_end":19867,"line_start":654,"line_end":654,"column_start":18,"column_end":32},"name":"request_device","qualname":"<Adapter>::request_device","value":"fn (&self, desc: &DeviceDescriptor) -> (Device, Queue)","parent":null,"children":[],"decl_id":null,"docs":" Requests a connection to a physical device, creating a logical device.\n Returns the device together with a queue that executes command buffers.","sig":null,"attributes":[{"value":"/ Requests a connection to a physical device, creating a logical device.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":19560,"byte_end":19634,"line_start":648,"line_end":648,"column_start":5,"column_end":79}},{"value":"/ Returns the device together with a queue that executes command buffers.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":19639,"byte_end":19714,"line_start":649,"line_end":649,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":19719,"byte_end":19722,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":19727,"byte_end":19739,"line_start":651,"line_end":651,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":19744,"byte_end":19747,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ Panics if the extensions specified by `desc` are not supported by this adapter.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":19752,"byte_end":19835,"line_start":653,"line_end":653,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":20212,"byte_end":20220,"line_start":665,"line_end":665,"column_start":12,"column_end":20},"name":"get_info","qualname":"<Adapter>::get_info","value":"fn (&self) -> AdapterInfo","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":20377,"byte_end":20381,"line_start":672,"line_end":672,"column_start":12,"column_end":16},"name":"poll","qualname":"<Device>::poll","value":"fn (&self, maintain: Maintain) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Check for resource cleanups and mapping callbacks.\n","sig":null,"attributes":[{"value":"/ Check for resource cleanups and mapping callbacks.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":20311,"byte_end":20365,"line_start":671,"line_end":671,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":20627,"byte_end":20647,"line_start":680,"line_end":680,"column_start":12,"column_end":32},"name":"create_shader_module","qualname":"<Device>::create_shader_module","value":"fn (&self, spv: &[u32]) -> ShaderModule","parent":null,"children":[],"decl_id":null,"docs":" Creates a shader module from SPIR-V source code.\n","sig":null,"attributes":[{"value":"/ Creates a shader module from SPIR-V source code.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":20563,"byte_end":20615,"line_start":679,"line_end":679,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":21044,"byte_end":21066,"line_start":693,"line_end":693,"column_start":12,"column_end":34},"name":"create_command_encoder","qualname":"<Device>::create_command_encoder","value":"fn (&self, desc: &CommandEncoderDescriptor) -> CommandEncoder","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty [`CommandEncoder`].\n","sig":null,"attributes":[{"value":"/ Creates an empty [`CommandEncoder`].","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":20992,"byte_end":21032,"line_start":692,"line_end":692,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":21536,"byte_end":21553,"line_start":707,"line_end":707,"column_start":12,"column_end":29},"name":"create_bind_group","qualname":"<Device>::create_bind_group","value":"fn (&self, desc: &BindGroupDescriptor) -> BindGroup","parent":null,"children":[],"decl_id":null,"docs":" Creates a new bind group.\n","sig":null,"attributes":[{"value":"/ Creates a new bind group.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":21495,"byte_end":21524,"line_start":706,"line_end":706,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":23096,"byte_end":23120,"line_start":749,"line_end":749,"column_start":12,"column_end":36},"name":"create_bind_group_layout","qualname":"<Device>::create_bind_group_layout","value":"fn (&self, desc: &BindGroupLayoutDescriptor) -> BindGroupLayout","parent":null,"children":[],"decl_id":null,"docs":" Creates a bind group layout.\n","sig":null,"attributes":[{"value":"/ Creates a bind group layout.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":23052,"byte_end":23084,"line_start":748,"line_end":748,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":26193,"byte_end":26215,"line_start":815,"line_end":815,"column_start":12,"column_end":34},"name":"create_pipeline_layout","qualname":"<Device>::create_pipeline_layout","value":"fn (&self, desc: &PipelineLayoutDescriptor) -> PipelineLayout","parent":null,"children":[],"decl_id":null,"docs":" Creates a pipeline layout.\n","sig":null,"attributes":[{"value":"/ Creates a pipeline layout.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":26151,"byte_end":26181,"line_start":814,"line_end":814,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":26861,"byte_end":26883,"line_start":834,"line_end":834,"column_start":12,"column_end":34},"name":"create_render_pipeline","qualname":"<Device>::create_render_pipeline","value":"fn (&self, desc: &RenderPipelineDescriptor) -> RenderPipeline","parent":null,"children":[],"decl_id":null,"docs":" Creates a render pipeline.\n","sig":null,"attributes":[{"value":"/ Creates a render pipeline.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":26819,"byte_end":26849,"line_start":833,"line_end":833,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":29819,"byte_end":29842,"line_start":900,"line_end":900,"column_start":12,"column_end":35},"name":"create_compute_pipeline","qualname":"<Device>::create_compute_pipeline","value":"fn (&self, desc: &ComputePipelineDescriptor) -> ComputePipeline","parent":null,"children":[],"decl_id":null,"docs":" Creates a compute pipeline.\n","sig":null,"attributes":[{"value":"/ Creates a compute pipeline.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":29776,"byte_end":29807,"line_start":899,"line_end":899,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":30534,"byte_end":30547,"line_start":920,"line_end":920,"column_start":12,"column_end":25},"name":"create_buffer","qualname":"<Device>::create_buffer","value":"fn (&self, desc: &BufferDescriptor) -> Buffer","parent":null,"children":[],"decl_id":null,"docs":" Creates a new buffer.\n","sig":null,"attributes":[{"value":"/ Creates a new buffer.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":30497,"byte_end":30522,"line_start":919,"line_end":919,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":31254,"byte_end":31274,"line_start":939,"line_end":939,"column_start":12,"column_end":32},"name":"create_buffer_mapped","qualname":"<Device>::create_buffer_mapped","value":"fn (&self, desc: &BufferDescriptor) -> CreateBufferMapped<'_>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new buffer and maps it into host-visible memory.","sig":null,"attributes":[{"value":"/ Creates a new buffer and maps it into host-visible memory.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":31000,"byte_end":31062,"line_start":935,"line_end":935,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":31067,"byte_end":31070,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ This returns a [`CreateBufferMapped`], which exposes a `&mut [u8]`. The actual [`Buffer`]","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":31075,"byte_end":31168,"line_start":937,"line_end":937,"column_start":5,"column_end":98}},{"value":"/ will not be created until calling [`CreateBufferMapped::finish`].","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":31173,"byte_end":31242,"line_start":938,"line_end":938,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":32209,"byte_end":32232,"line_start":963,"line_end":963,"column_start":12,"column_end":35},"name":"create_buffer_with_data","qualname":"<Device>::create_buffer_with_data","value":"fn (&self, data: &[u8], usage: BufferUsage) -> Buffer","parent":null,"children":[],"decl_id":null,"docs":" Creates a new buffer, maps it into host-visible memory, copies data from the given slice,\n and finally unmaps it, returning a [`Buffer`].\n","sig":null,"attributes":[{"value":"/ Creates a new buffer, maps it into host-visible memory, copies data from the given slice,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":32049,"byte_end":32142,"line_start":961,"line_end":961,"column_start":5,"column_end":98}},{"value":"/ and finally unmaps it, returning a [`Buffer`].","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":32147,"byte_end":32197,"line_start":962,"line_end":962,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":32633,"byte_end":32647,"line_start":976,"line_end":976,"column_start":12,"column_end":26},"name":"create_texture","qualname":"<Device>::create_texture","value":"fn (&self, desc: &TextureDescriptor) -> Texture","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Texture`].","sig":null,"attributes":[{"value":"/ Creates a new [`Texture`].","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":32523,"byte_end":32553,"line_start":973,"line_end":973,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":32558,"byte_end":32561,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ `desc` specifies the general format of the texture.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":32566,"byte_end":32621,"line_start":975,"line_end":975,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":33383,"byte_end":33397,"line_start":996,"line_end":996,"column_start":12,"column_end":26},"name":"create_sampler","qualname":"<Device>::create_sampler","value":"fn (&self, desc: &SamplerDescriptor) -> Sampler","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Sampler`].","sig":null,"attributes":[{"value":"/ Creates a new [`Sampler`].","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":33279,"byte_end":33309,"line_start":993,"line_end":993,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":33314,"byte_end":33317,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ `desc` specifies the behavior of the sampler.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":33322,"byte_end":33371,"line_start":995,"line_end":995,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":33614,"byte_end":33631,"line_start":1003,"line_end":1003,"column_start":12,"column_end":29},"name":"create_swap_chain","qualname":"<Device>::create_swap_chain","value":"fn (&self, surface: &Surface, desc: &SwapChainDescriptor) -> SwapChain","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`SwapChain`] which targets `surface`.\n","sig":null,"attributes":[{"value":"/ Create a new [`SwapChain`] which targets `surface`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":33547,"byte_end":33602,"line_start":1002,"line_end":1002,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":731},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":34104,"byte_end":34118,"line_start":1020,"line_end":1020,"column_start":12,"column_end":26},"name":"BufferAsyncErr","qualname":"::BufferAsyncErr","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":174},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":34132,"byte_end":34149,"line_start":1022,"line_end":1022,"column_start":12,"column_end":29},"name":"BufferReadMapping","qualname":"::BufferReadMapping","value":"BufferReadMapping {  }","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":34348,"byte_end":34356,"line_start":1033,"line_end":1033,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<BufferReadMapping>::as_slice","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":184},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":34607,"byte_end":34625,"line_start":1046,"line_end":1046,"column_start":12,"column_end":30},"name":"BufferWriteMapping","qualname":"::BufferWriteMapping","value":"BufferWriteMapping {  }","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":34825,"byte_end":34833,"line_start":1057,"line_end":1057,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<BufferWriteMapping>::as_slice","value":"fn (&mut self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":35625,"byte_end":35633,"line_start":1081,"line_end":1081,"column_start":12,"column_end":20},"name":"map_read","qualname":"<Buffer>::map_read","value":"fn (&self, start: BufferAddress, size: BufferAddress) -> impl Future<Output = Result<BufferReadMapping, BufferAsyncErr>>","parent":null,"children":[],"decl_id":null,"docs":" Map the buffer for reading. The result is returned in a future.\n \n For the future to complete, `device.poll(...)` must be called elsewhere in the runtime, possibly integrated\n into an event loop, run on a separate thread, or continually polled in the same task runtime that this\n future will be run on.\n \n It's expected that wgpu will eventually supply its own event loop infrastructure that will be easy to integrate\n into other event loops, like winit's.\n","sig":null,"attributes":[{"value":"/ Map the buffer for reading. The result is returned in a future.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":35104,"byte_end":35171,"line_start":1073,"line_end":1073,"column_start":5,"column_end":72}},{"value":"/ ","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":35176,"byte_end":35180,"line_start":1074,"line_end":1074,"column_start":5,"column_end":9}},{"value":"/ For the future to complete, `device.poll(...)` must be called elsewhere in the runtime, possibly integrated","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":35185,"byte_end":35296,"line_start":1075,"line_end":1075,"column_start":5,"column_end":116}},{"value":"/ into an event loop, run on a separate thread, or continually polled in the same task runtime that this","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":35301,"byte_end":35407,"line_start":1076,"line_end":1076,"column_start":5,"column_end":111}},{"value":"/ future will be run on.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":35412,"byte_end":35438,"line_start":1077,"line_end":1077,"column_start":5,"column_end":31}},{"value":"/ ","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":35443,"byte_end":35447,"line_start":1078,"line_end":1078,"column_start":5,"column_end":9}},{"value":"/ It's expected that wgpu will eventually supply its own event loop infrastructure that will be easy to integrate","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":35452,"byte_end":35567,"line_start":1079,"line_end":1079,"column_start":5,"column_end":120}},{"value":"/ into other event loops, like winit's.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":35572,"byte_end":35613,"line_start":1080,"line_end":1080,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":37056,"byte_end":37065,"line_start":1125,"line_end":1125,"column_start":12,"column_end":21},"name":"map_write","qualname":"<Buffer>::map_write","value":"fn (&self, start: BufferAddress, size: BufferAddress) -> impl Future<Output = Result<BufferWriteMapping, BufferAsyncErr>>","parent":null,"children":[],"decl_id":null,"docs":" Map the buffer for writing. The result is returned in a future.\n \n See the documentation of (map_read)[#method.map_read] for more information about\n how to run this future.\n","sig":null,"attributes":[{"value":"/ Map the buffer for writing. The result is returned in a future.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":36847,"byte_end":36914,"line_start":1121,"line_end":1121,"column_start":5,"column_end":72}},{"value":"/ ","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":36919,"byte_end":36923,"line_start":1122,"line_end":1122,"column_start":5,"column_end":9}},{"value":"/ See the documentation of (map_read)[#method.map_read] for more information about","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":36928,"byte_end":37012,"line_start":1123,"line_end":1123,"column_start":5,"column_end":89}},{"value":"/ how to run this future.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":37017,"byte_end":37044,"line_start":1124,"line_end":1124,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":38374,"byte_end":38379,"line_start":1166,"line_end":1166,"column_start":12,"column_end":17},"name":"unmap","qualname":"<Buffer>::unmap","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Flushes any pending write operations and unmaps the buffer from host memory.\n","sig":null,"attributes":[{"value":"/ Flushes any pending write operations and unmaps the buffer from host memory.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":38282,"byte_end":38362,"line_start":1165,"line_end":1165,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":38605,"byte_end":38616,"line_start":1179,"line_end":1179,"column_start":12,"column_end":23},"name":"create_view","qualname":"<Texture>::create_view","value":"fn (&self, desc: &TextureViewDescriptor) -> TextureView","parent":null,"children":[],"decl_id":null,"docs":" Creates a view of this texture.\n","sig":null,"attributes":[{"value":"/ Creates a view of this texture.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":38558,"byte_end":38593,"line_start":1178,"line_end":1178,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":38868,"byte_end":38887,"line_start":1187,"line_end":1187,"column_start":12,"column_end":31},"name":"create_default_view","qualname":"<Texture>::create_default_view","value":"fn (&self) -> TextureView","parent":null,"children":[],"decl_id":null,"docs":" Creates a default view of this whole texture.\n","sig":null,"attributes":[{"value":"/ Creates a default view of this whole texture.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":38807,"byte_end":38856,"line_start":1186,"line_end":1186,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":39458,"byte_end":39464,"line_start":1213,"line_end":1213,"column_start":12,"column_end":18},"name":"finish","qualname":"<CommandEncoder>::finish","value":"fn (self) -> CommandBuffer","parent":null,"children":[],"decl_id":null,"docs":" Finishes recording and returns a [`CommandBuffer`] that can be submitted for execution.\n","sig":null,"attributes":[{"value":"/ Finishes recording and returns a [`CommandBuffer`] that can be submitted for execution.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":39355,"byte_end":39446,"line_start":1212,"line_end":1212,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":39748,"byte_end":39765,"line_start":1222,"line_end":1222,"column_start":12,"column_end":29},"name":"begin_render_pass","qualname":"<CommandEncoder>::begin_render_pass","value":"fn <'a> (&'a mut self, desc: &RenderPassDescriptor<'a, '_>) -> RenderPass<'a>","parent":null,"children":[],"decl_id":null,"docs":" Begins recording of a render pass.","sig":null,"attributes":[{"value":"/ Begins recording of a render pass.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":39600,"byte_end":39638,"line_start":1219,"line_end":1219,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":39643,"byte_end":39646,"line_start":1220,"line_end":1220,"column_start":5,"column_end":8}},{"value":"/ This function returns a [`RenderPass`] object which records a single render pass.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":39651,"byte_end":39736,"line_start":1221,"line_end":1221,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":41488,"byte_end":41506,"line_start":1268,"line_end":1268,"column_start":12,"column_end":30},"name":"begin_compute_pass","qualname":"<CommandEncoder>::begin_compute_pass","value":"fn (&mut self) -> ComputePass","parent":null,"children":[],"decl_id":null,"docs":" Begins recording of a compute pass.","sig":null,"attributes":[{"value":"/ Begins recording of a compute pass.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":41337,"byte_end":41376,"line_start":1265,"line_end":1265,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":41381,"byte_end":41384,"line_start":1266,"line_end":1266,"column_start":5,"column_end":8}},{"value":"/ This function returns a [`ComputePass`] object which records a single compute pass.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":41389,"byte_end":41476,"line_start":1267,"line_end":1267,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":41774,"byte_end":41795,"line_start":1278,"line_end":1278,"column_start":12,"column_end":33},"name":"copy_buffer_to_buffer","qualname":"<CommandEncoder>::copy_buffer_to_buffer","value":"fn (&mut self, source: &Buffer, source_offset: BufferAddress, destination: &Buffer, destination_offset: BufferAddress, copy_size: BufferAddress) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Copy data from one buffer to another.\n","sig":null,"attributes":[{"value":"/ Copy data from one buffer to another.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":41721,"byte_end":41762,"line_start":1277,"line_end":1277,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":42280,"byte_end":42302,"line_start":1297,"line_end":1297,"column_start":12,"column_end":34},"name":"copy_buffer_to_texture","qualname":"<CommandEncoder>::copy_buffer_to_texture","value":"fn (&mut self, source: BufferCopyView, destination: TextureCopyView, copy_size: Extent3d) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Copy data from a buffer to a texture.\n","sig":null,"attributes":[{"value":"/ Copy data from a buffer to a texture.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":42227,"byte_end":42268,"line_start":1296,"line_end":1296,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":42682,"byte_end":42704,"line_start":1312,"line_end":1312,"column_start":12,"column_end":34},"name":"copy_texture_to_buffer","qualname":"<CommandEncoder>::copy_texture_to_buffer","value":"fn (&mut self, source: TextureCopyView, destination: BufferCopyView, copy_size: Extent3d) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Copy data from a texture to a buffer.\n","sig":null,"attributes":[{"value":"/ Copy data from a texture to a buffer.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":42629,"byte_end":42670,"line_start":1311,"line_end":1311,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":43085,"byte_end":43108,"line_start":1327,"line_end":1327,"column_start":12,"column_end":35},"name":"copy_texture_to_texture","qualname":"<CommandEncoder>::copy_texture_to_texture","value":"fn (&mut self, source: TextureCopyView, destination: TextureCopyView, copy_size: Extent3d) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Copy data from one texture to another.\n","sig":null,"attributes":[{"value":"/ Copy data from one texture to another.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":43031,"byte_end":43073,"line_start":1326,"line_end":1326,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":43474,"byte_end":43493,"line_start":1342,"line_end":1342,"column_start":12,"column_end":31},"name":"insert_debug_marker","qualname":"<CommandEncoder>::insert_debug_marker","value":"fn (&mut self, label: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inserts debug marker.\n","sig":null,"attributes":[{"value":"/ Inserts debug marker.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":43437,"byte_end":43462,"line_start":1341,"line_end":1341,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":43837,"byte_end":43853,"line_start":1354,"line_end":1354,"column_start":12,"column_end":28},"name":"push_debug_group","qualname":"<CommandEncoder>::push_debug_group","value":"fn (&mut self, label: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Start record commands and group it into debug marker group.\n","sig":null,"attributes":[{"value":"/ Start record commands and group it into debug marker group.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":43762,"byte_end":43825,"line_start":1353,"line_end":1353,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":44183,"byte_end":44198,"line_start":1366,"line_end":1366,"column_start":12,"column_end":27},"name":"pop_debug_group","qualname":"<CommandEncoder>::pop_debug_group","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stops command recording and creates debug group.\n","sig":null,"attributes":[{"value":"/ Stops command recording and creates debug group.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":44119,"byte_end":44171,"line_start":1365,"line_end":1365,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":44414,"byte_end":44428,"line_start":1375,"line_end":1375,"column_start":12,"column_end":26},"name":"set_bind_group","qualname":"<RenderPass>::set_bind_group","value":"fn (&mut self, index: u32, bind_group: &'a BindGroup, offsets: &[DynamicOffset]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the active bind group for a given bind group index.\n","sig":null,"attributes":[{"value":"/ Sets the active bind group for a given bind group index.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":44342,"byte_end":44402,"line_start":1374,"line_end":1374,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":44947,"byte_end":44959,"line_start":1395,"line_end":1395,"column_start":12,"column_end":24},"name":"set_pipeline","qualname":"<RenderPass>::set_pipeline","value":"fn (&mut self, pipeline: &'a RenderPipeline) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the active render pipeline.","sig":null,"attributes":[{"value":"/ Sets the active render pipeline.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":44812,"byte_end":44848,"line_start":1392,"line_end":1392,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":44853,"byte_end":44856,"line_start":1393,"line_end":1393,"column_start":5,"column_end":8}},{"value":"/ Subsequent draw calls will exhibit the behavior defined by `pipeline`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":44861,"byte_end":44935,"line_start":1394,"line_end":1394,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":45183,"byte_end":45198,"line_start":1404,"line_end":1404,"column_start":12,"column_end":27},"name":"set_blend_color","qualname":"<RenderPass>::set_blend_color","value":"fn (&mut self, color: Color) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":45678,"byte_end":45694,"line_start":1419,"line_end":1419,"column_start":12,"column_end":28},"name":"set_index_buffer","qualname":"<RenderPass>::set_index_buffer","value":"fn (&mut self, buffer: &'a Buffer, offset: BufferAddress, size: BufferAddress) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the active index buffer.","sig":null,"attributes":[{"value":"/ Sets the active index buffer.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":45397,"byte_end":45430,"line_start":1413,"line_end":1413,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":45435,"byte_end":45438,"line_start":1414,"line_end":1414,"column_start":5,"column_end":8}},{"value":"/ Subsequent calls to [`draw_indexed`](RenderPass::draw_indexed) on this [`RenderPass`] will","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":45443,"byte_end":45537,"line_start":1415,"line_end":1415,"column_start":5,"column_end":99}},{"value":"/ use `buffer` as the source index buffer.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":45542,"byte_end":45586,"line_start":1416,"line_end":1416,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":45591,"byte_end":45594,"line_start":1417,"line_end":1417,"column_start":5,"column_end":8}},{"value":"/ If `size == 0`, the remaining part of the buffer is considered.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":45599,"byte_end":45666,"line_start":1418,"line_end":1418,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":46695,"byte_end":46712,"line_start":1449,"line_end":1449,"column_start":12,"column_end":29},"name":"set_vertex_buffer","qualname":"<RenderPass>::set_vertex_buffer","value":"fn (&mut self, slot: u32, buffer: &'a Buffer, offset: BufferAddress, size: BufferAddress) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Assign a vertex buffer to a slot.","sig":null,"attributes":[{"value":"/ Assign a vertex buffer to a slot.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":46032,"byte_end":46069,"line_start":1435,"line_end":1435,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":46074,"byte_end":46077,"line_start":1436,"line_end":1436,"column_start":5,"column_end":8}},{"value":"/ Subsequent calls to [`draw`] and [`draw_indexed`] on this","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":46082,"byte_end":46143,"line_start":1437,"line_end":1437,"column_start":5,"column_end":66}},{"value":"/ [`RenderPass`] will use `buffer` as one of the source vertex buffers.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":46148,"byte_end":46221,"line_start":1438,"line_end":1438,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":46226,"byte_end":46229,"line_start":1439,"line_end":1439,"column_start":5,"column_end":8}},{"value":"/ The `slot` refers to the index of the matching descriptor in","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":46234,"byte_end":46298,"line_start":1440,"line_end":1440,"column_start":5,"column_end":69}},{"value":"/ [`RenderPipelineDescriptor::vertex_buffers`].","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":46303,"byte_end":46352,"line_start":1441,"line_end":1441,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":46357,"byte_end":46360,"line_start":1442,"line_end":1442,"column_start":5,"column_end":8}},{"value":"/ If `size == 0`, the remaining part of the buffer is considered.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":46365,"byte_end":46432,"line_start":1443,"line_end":1443,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":46437,"byte_end":46440,"line_start":1444,"line_end":1444,"column_start":5,"column_end":8}},{"value":"/ [`draw`]: #method.draw","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":46445,"byte_end":46471,"line_start":1445,"line_end":1445,"column_start":5,"column_end":31}},{"value":"/ [`draw_indexed`]: #method.draw_indexed","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":46476,"byte_end":46518,"line_start":1446,"line_end":1446,"column_start":5,"column_end":47}},{"value":"/ [`RenderPass`]: struct.RenderPass.html","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":46523,"byte_end":46565,"line_start":1447,"line_end":1447,"column_start":5,"column_end":47}},{"value":"/ [`RenderPipelineDescriptor::vertex_buffers`]: struct.RenderPipelineDescriptor.html#structfield.vertex_buffers","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":46570,"byte_end":46683,"line_start":1448,"line_end":1448,"column_start":5,"column_end":118}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":47228,"byte_end":47244,"line_start":1470,"line_end":1470,"column_start":12,"column_end":28},"name":"set_scissor_rect","qualname":"<RenderPass>::set_scissor_rect","value":"fn (&mut self, x: u32, y: u32, w: u32, h: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the scissor region.","sig":null,"attributes":[{"value":"/ Sets the scissor region.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":47092,"byte_end":47120,"line_start":1467,"line_end":1467,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":47125,"byte_end":47128,"line_start":1468,"line_end":1468,"column_start":5,"column_end":8}},{"value":"/ Subsequent draw calls will discard any fragments that fall outside this region.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":47133,"byte_end":47216,"line_start":1469,"line_end":1469,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":47585,"byte_end":47597,"line_start":1482,"line_end":1482,"column_start":12,"column_end":24},"name":"set_viewport","qualname":"<RenderPass>::set_viewport","value":"fn (&mut self, x: f32, y: f32, w: f32, h: f32, min_depth: f32, max_depth: f32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the viewport region.","sig":null,"attributes":[{"value":"/ Sets the viewport region.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":47466,"byte_end":47495,"line_start":1479,"line_end":1479,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":47500,"byte_end":47503,"line_start":1480,"line_end":1480,"column_start":5,"column_end":8}},{"value":"/ Subsequent draw calls will draw any fragments in this region.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":47508,"byte_end":47573,"line_start":1481,"line_end":1481,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":47999,"byte_end":48020,"line_start":1495,"line_end":1495,"column_start":12,"column_end":33},"name":"set_stencil_reference","qualname":"<RenderPass>::set_stencil_reference","value":"fn (&mut self, reference: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the stencil reference.","sig":null,"attributes":[{"value":"/ Sets the stencil reference.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":47885,"byte_end":47916,"line_start":1492,"line_end":1492,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":47921,"byte_end":47924,"line_start":1493,"line_end":1493,"column_start":5,"column_end":8}},{"value":"/ Subsequent stencil tests will test against this value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":47929,"byte_end":47987,"line_start":1494,"line_end":1494,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":48390,"byte_end":48394,"line_start":1507,"line_end":1507,"column_start":12,"column_end":16},"name":"draw","qualname":"<RenderPass>::draw","value":"fn (&mut self, vertices: Range<u32>, instances: Range<u32>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Draws primitives from the active vertex buffer(s).","sig":null,"attributes":[{"value":"/ Draws primitives from the active vertex buffer(s).","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":48230,"byte_end":48284,"line_start":1504,"line_end":1504,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":48289,"byte_end":48292,"line_start":1505,"line_end":1505,"column_start":5,"column_end":8}},{"value":"/ The active vertex buffers can be set with [`RenderPass::set_vertex_buffers`].","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":48297,"byte_end":48378,"line_start":1506,"line_end":1506,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":48787,"byte_end":48806,"line_start":1520,"line_end":1520,"column_start":12,"column_end":31},"name":"insert_debug_marker","qualname":"<RenderPass>::insert_debug_marker","value":"fn (&mut self, label: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inserts debug marker.\n","sig":null,"attributes":[{"value":"/ Inserts debug marker.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":48750,"byte_end":48775,"line_start":1519,"line_end":1519,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":49164,"byte_end":49180,"line_start":1532,"line_end":1532,"column_start":12,"column_end":28},"name":"push_debug_group","qualname":"<RenderPass>::push_debug_group","value":"fn (&mut self, label: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Start record commands and group it into debug marker group.\n","sig":null,"attributes":[{"value":"/ Start record commands and group it into debug marker group.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":49089,"byte_end":49152,"line_start":1531,"line_end":1531,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":49524,"byte_end":49539,"line_start":1544,"line_end":1544,"column_start":12,"column_end":27},"name":"pop_debug_group","qualname":"<RenderPass>::pop_debug_group","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stops command recording and creates debug group.\n","sig":null,"attributes":[{"value":"/ Stops command recording and creates debug group.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":49460,"byte_end":49512,"line_start":1543,"line_end":1543,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":49952,"byte_end":49964,"line_start":1554,"line_end":1554,"column_start":12,"column_end":24},"name":"draw_indexed","qualname":"<RenderPass>::draw_indexed","value":"fn (&mut self, indices: Range<u32>, base_vertex: i32, instances: Range<u32>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Draws indexed primitives using the active index buffer and the active vertex buffers.","sig":null,"attributes":[{"value":"/ Draws indexed primitives using the active index buffer and the active vertex buffers.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":49669,"byte_end":49758,"line_start":1550,"line_end":1550,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":49763,"byte_end":49766,"line_start":1551,"line_end":1551,"column_start":5,"column_end":8}},{"value":"/ The active index buffer can be set with [`RenderPass::set_index_buffer`], while the active","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":49771,"byte_end":49865,"line_start":1552,"line_end":1552,"column_start":5,"column_end":99}},{"value":"/ vertex buffers can be set with [`RenderPass::set_vertex_buffers`].","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":49870,"byte_end":49940,"line_start":1553,"line_end":1553,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":50578,"byte_end":50591,"line_start":1570,"line_end":1570,"column_start":12,"column_end":25},"name":"draw_indirect","qualname":"<RenderPass>::draw_indirect","value":"fn (&mut self, indirect_buffer: &'a Buffer, indirect_offset: BufferAddress) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Draws primitives from the active vertex buffer(s) based on the contents of the `indirect_buffer`.","sig":null,"attributes":[{"value":"/ Draws primitives from the active vertex buffer(s) based on the contents of the `indirect_buffer`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":50371,"byte_end":50472,"line_start":1567,"line_end":1567,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":50477,"byte_end":50480,"line_start":1568,"line_end":1568,"column_start":5,"column_end":8}},{"value":"/ The active vertex buffers can be set with [`RenderPass::set_vertex_buffers`].","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":50485,"byte_end":50566,"line_start":1569,"line_end":1569,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":51219,"byte_end":51240,"line_start":1585,"line_end":1585,"column_start":12,"column_end":33},"name":"draw_indexed_indirect","qualname":"<RenderPass>::draw_indexed_indirect","value":"fn (&mut self, indirect_buffer: &'a Buffer, indirect_offset: BufferAddress) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Draws indexed primitives using the active index buffer and the active vertex buffers,\n based on the contents of the `indirect_buffer`.","sig":null,"attributes":[{"value":"/ Draws indexed primitives using the active index buffer and the active vertex buffers,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":50880,"byte_end":50969,"line_start":1580,"line_end":1580,"column_start":5,"column_end":94}},{"value":"/ based on the contents of the `indirect_buffer`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":50974,"byte_end":51025,"line_start":1581,"line_end":1581,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":51030,"byte_end":51033,"line_start":1582,"line_end":1582,"column_start":5,"column_end":8}},{"value":"/ The active index buffer can be set with [`RenderPass::set_index_buffer`], while the active","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":51038,"byte_end":51132,"line_start":1583,"line_end":1583,"column_start":5,"column_end":99}},{"value":"/ vertex buffers can be set with [`RenderPass::set_vertex_buffers`].","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":51137,"byte_end":51207,"line_start":1584,"line_end":1584,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":51874,"byte_end":51888,"line_start":1612,"line_end":1612,"column_start":12,"column_end":26},"name":"set_bind_group","qualname":"<ComputePass>::set_bind_group","value":"fn (&mut self, index: u32, bind_group: &'a BindGroup, offsets: &[DynamicOffset]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the active bind group for a given bind group index.\n","sig":null,"attributes":[{"value":"/ Sets the active bind group for a given bind group index.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":51802,"byte_end":51862,"line_start":1611,"line_end":1611,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":52322,"byte_end":52334,"line_start":1630,"line_end":1630,"column_start":12,"column_end":24},"name":"set_pipeline","qualname":"<ComputePass>::set_pipeline","value":"fn (&mut self, pipeline: &'a ComputePipeline) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the active compute pipeline.\n","sig":null,"attributes":[{"value":"/ Sets the active compute pipeline.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":52273,"byte_end":52310,"line_start":1629,"line_end":1629,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":52590,"byte_end":52609,"line_start":1640,"line_end":1640,"column_start":12,"column_end":31},"name":"insert_debug_marker","qualname":"<ComputePass>::insert_debug_marker","value":"fn (&mut self, label: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inserts debug marker.\n","sig":null,"attributes":[{"value":"/ Inserts debug marker.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":52553,"byte_end":52578,"line_start":1639,"line_end":1639,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":52968,"byte_end":52984,"line_start":1652,"line_end":1652,"column_start":12,"column_end":28},"name":"push_debug_group","qualname":"<ComputePass>::push_debug_group","value":"fn (&mut self, label: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Start record commands and group it into debug marker group.\n","sig":null,"attributes":[{"value":"/ Start record commands and group it into debug marker group.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":52893,"byte_end":52956,"line_start":1651,"line_end":1651,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":53329,"byte_end":53344,"line_start":1664,"line_end":1664,"column_start":12,"column_end":27},"name":"pop_debug_group","qualname":"<ComputePass>::pop_debug_group","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stops command recording and creates debug group.\n","sig":null,"attributes":[{"value":"/ Stops command recording and creates debug group.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":53265,"byte_end":53317,"line_start":1663,"line_end":1663,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":53623,"byte_end":53631,"line_start":1673,"line_end":1673,"column_start":12,"column_end":20},"name":"dispatch","qualname":"<ComputePass>::dispatch","value":"fn (&mut self, x: u32, y: u32, z: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Dispatches compute work operations.","sig":null,"attributes":[{"value":"/ Dispatches compute work operations.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":53475,"byte_end":53514,"line_start":1670,"line_end":1670,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":53519,"byte_end":53522,"line_start":1671,"line_end":1671,"column_start":5,"column_end":8}},{"value":"/ `x`, `y` and `z` denote the number of work groups to dispatch in each dimension.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":53527,"byte_end":53611,"line_start":1672,"line_end":1672,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":53934,"byte_end":53951,"line_start":1683,"line_end":1683,"column_start":12,"column_end":29},"name":"dispatch_indirect","qualname":"<ComputePass>::dispatch_indirect","value":"fn (&mut self, indirect_buffer: &'a Buffer, indirect_offset: BufferAddress) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Dispatches compute work operations, based on the contents of the `indirect_buffer`.\n","sig":null,"attributes":[{"value":"/ Dispatches compute work operations, based on the contents of the `indirect_buffer`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":53835,"byte_end":53922,"line_start":1682,"line_end":1682,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":54542,"byte_end":54548,"line_start":1706,"line_end":1706,"column_start":12,"column_end":18},"name":"submit","qualname":"<Queue>::submit","value":"fn (&self, command_buffers: &[CommandBuffer]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Submits a series of finished command buffers for execution.\n","sig":null,"attributes":[{"value":"/ Submits a series of finished command buffers for execution.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":54467,"byte_end":54530,"line_start":1705,"line_end":1705,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":743},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":55240,"byte_end":55247,"line_start":1732,"line_end":1732,"column_start":12,"column_end":19},"name":"TimeOut","qualname":"::TimeOut","value":"","parent":null,"children":[],"decl_id":null,"docs":" The GPU timed out when attempting to acquire the next texture or if a\n previous output is still alive.\n","sig":null,"attributes":[{"value":"/ The GPU timed out when attempting to acquire the next texture or if a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":55095,"byte_end":55168,"line_start":1729,"line_end":1729,"column_start":1,"column_end":74}},{"value":"/ previous output is still alive.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":55169,"byte_end":55204,"line_start":1730,"line_end":1730,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":55516,"byte_end":55532,"line_start":1739,"line_end":1739,"column_start":12,"column_end":28},"name":"get_next_texture","qualname":"<SwapChain>::get_next_texture","value":"fn (&mut self) -> Result<SwapChainOutput, TimeOut>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next texture to be presented by the swapchain for drawing.","sig":null,"attributes":[{"value":"/ Returns the next texture to be presented by the swapchain for drawing.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":55271,"byte_end":55345,"line_start":1735,"line_end":1735,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":55350,"byte_end":55353,"line_start":1736,"line_end":1736,"column_start":5,"column_end":8}},{"value":"/ When the [`SwapChainOutput`] returned by this method is dropped, the swapchain will present","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":55358,"byte_end":55453,"line_start":1737,"line_end":1737,"column_start":5,"column_end":100}},{"value":"/ the texture to the associated [`Surface`].","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":55458,"byte_end":55504,"line_start":1738,"line_end":1738,"column_start":5,"column_end":51}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/backend/native_gpu_future.rs","byte_start":56887,"byte_end":56896,"line_start":31,"line_end":31,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/backend/native_gpu_future.rs","byte_start":57378,"byte_end":57397,"line_start":48,"line_end":48,"column_start":9,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":5145,"byte_end":5154,"line_start":194,"line_end":194,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":16137,"byte_end":16151,"line_start":541,"line_end":541,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":16906,"byte_end":16921,"line_start":568,"line_end":568,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":17384,"byte_end":17402,"line_start":586,"line_end":586,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":17627,"byte_end":17634,"line_start":594,"line_end":594,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":18132,"byte_end":18139,"line_start":610,"line_end":610,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":142},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":20298,"byte_end":20304,"line_start":670,"line_end":670,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":33833,"byte_end":33839,"line_start":1010,"line_end":1010,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":34248,"byte_end":34265,"line_start":1028,"line_end":1028,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":34290,"byte_end":34307,"line_start":1029,"line_end":1029,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":34317,"byte_end":34334,"line_start":1031,"line_end":1031,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":34494,"byte_end":34511,"line_start":1040,"line_end":1040,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":34722,"byte_end":34740,"line_start":1052,"line_end":1052,"column_start":22,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":34765,"byte_end":34783,"line_start":1053,"line_end":1053,"column_start":22,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":34793,"byte_end":34811,"line_start":1055,"line_end":1055,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":34981,"byte_end":34999,"line_start":1064,"line_end":1064,"column_start":15,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":35091,"byte_end":35097,"line_start":1072,"line_end":1072,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":38453,"byte_end":38459,"line_start":1171,"line_end":1171,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":38544,"byte_end":38551,"line_start":1177,"line_end":1177,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":39054,"byte_end":39061,"line_start":1195,"line_end":1195,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":39194,"byte_end":39205,"line_start":1203,"line_end":1203,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":39334,"byte_end":39348,"line_start":1211,"line_end":1211,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":44321,"byte_end":44331,"line_start":1373,"line_end":1373,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":51584,"byte_end":51594,"line_start":1600,"line_end":1600,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":51780,"byte_end":51791,"line_start":1610,"line_end":1610,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":54261,"byte_end":54272,"line_start":1694,"line_end":1694,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":54455,"byte_end":54460,"line_start":1704,"line_end":1704,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":54937,"byte_end":54952,"line_start":1721,"line_end":1721,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":55255,"byte_end":55264,"line_start":1734,"line_end":1734,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":55934,"byte_end":55944,"line_start":1753,"line_end":1753,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":271},{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/backend/native_gpu_future.rs","byte_start":56887,"byte_end":56896,"line_start":31,"line_end":31,"column_start":20,"column_end":29},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":22},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/backend/native_gpu_future.rs","byte_start":57378,"byte_end":57397,"line_start":48,"line_end":48,"column_start":9,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":31},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":5145,"byte_end":5154,"line_start":194,"line_end":194,"column_start":15,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":377},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":16137,"byte_end":16151,"line_start":541,"line_end":541,"column_start":6,"column_end":20},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":16906,"byte_end":16921,"line_start":568,"line_end":568,"column_start":10,"column_end":25},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":719},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":17384,"byte_end":17402,"line_start":586,"line_end":586,"column_start":6,"column_end":24},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":123},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":17627,"byte_end":17634,"line_start":594,"line_end":594,"column_start":6,"column_end":13},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":353},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":18132,"byte_end":18139,"line_start":610,"line_end":610,"column_start":6,"column_end":13},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":20298,"byte_end":20304,"line_start":670,"line_end":670,"column_start":6,"column_end":12},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":297},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":33833,"byte_end":33839,"line_start":1010,"line_end":1010,"column_start":15,"column_end":21},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":297},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":34248,"byte_end":34265,"line_start":1028,"line_end":1028,"column_start":22,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":174},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":34290,"byte_end":34307,"line_start":1029,"line_end":1029,"column_start":22,"column_end":39},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":174},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":34317,"byte_end":34334,"line_start":1031,"line_end":1031,"column_start":6,"column_end":23},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":174},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":34494,"byte_end":34511,"line_start":1040,"line_end":1040,"column_start":15,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":174},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":34722,"byte_end":34740,"line_start":1052,"line_end":1052,"column_start":22,"column_end":40},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":184},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":34765,"byte_end":34783,"line_start":1053,"line_end":1053,"column_start":22,"column_end":40},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":184},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":34793,"byte_end":34811,"line_start":1055,"line_end":1055,"column_start":6,"column_end":24},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":34981,"byte_end":34999,"line_start":1064,"line_end":1064,"column_start":15,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":184},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":35091,"byte_end":35097,"line_start":1072,"line_end":1072,"column_start":6,"column_end":12},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":38453,"byte_end":38459,"line_start":1171,"line_end":1171,"column_start":15,"column_end":21},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":318},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":38544,"byte_end":38551,"line_start":1177,"line_end":1177,"column_start":6,"column_end":13},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":39054,"byte_end":39061,"line_start":1195,"line_end":1195,"column_start":15,"column_end":22},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":327},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":39194,"byte_end":39205,"line_start":1203,"line_end":1203,"column_start":15,"column_end":26},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":336},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":39334,"byte_end":39348,"line_start":1211,"line_end":1211,"column_start":6,"column_end":20},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":44321,"byte_end":44331,"line_start":1373,"line_end":1373,"column_start":10,"column_end":20},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":51584,"byte_end":51594,"line_start":1600,"line_end":1600,"column_start":19,"column_end":29},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":51780,"byte_end":51791,"line_start":1610,"line_end":1610,"column_start":10,"column_end":21},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":437},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":54261,"byte_end":54272,"line_start":1694,"line_end":1694,"column_start":19,"column_end":30},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":437},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":54455,"byte_end":54460,"line_start":1704,"line_end":1704,"column_start":6,"column_end":11},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":444},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":54937,"byte_end":54952,"line_start":1721,"line_end":1721,"column_start":15,"column_end":30},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":702},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":55255,"byte_end":55264,"line_start":1734,"line_end":1734,"column_start":6,"column_end":15},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.5.2/src/lib.rs","byte_start":55934,"byte_end":55944,"line_start":1753,"line_end":1753,"column_start":6,"column_end":16},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":267},"to":{"krate":4294967295,"index":4294967295}}]}