{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2","program":"/home/dapx/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","approx","/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=11dabaedaa98902c","-C","extra-filename=-11dabaedaa98902c","--out-dir","/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps","-L","dependency=/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps","--extern","num_traits=/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps/libnum_traits-512b604bf456237b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/dapx/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps/libapprox-11dabaedaa98902c.rmeta"},"prelude":{"crate_id":{"name":"approx","disambiguator":[3974204333726389161,9801222716720129469]},"crate_root":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src","external_crates":[{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6528836112941390771,2028724122443642861]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14673858572786541001,1892137737928154225]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17117278319981904138,16406771668640906211]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11917984669602857069,6489053565454986112]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12362109612685904499,382626321872987168]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4151571022625212401,1888722734493896023]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4322023011642103678,14222697504055880771]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8420579222726968489,9136630199856205157]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[13745492306750544571,5475822973716876235]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14030493773096865675,2651053314204399788]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[8310449678941769819,14748581810882876583]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17983290995241619958,6056021938633518527]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2836549575564442446,8627689666430273126]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7274711288869898279,15671112109327640352]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","num":15,"id":{"name":"num_traits","disambiguator":[2136015123687830033,9735163811384062178]}}],"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":597,"byte_end":11440,"line_start":15,"line_end":384,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":9},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":6041,"byte_end":6050,"line_start":172,"line_end":172,"column_start":22,"column_end":31},"alias_span":null,"name":"AbsDiffEq","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":52},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":6073,"byte_end":6083,"line_start":173,"line_end":173,"column_start":22,"column_end":32},"alias_span":null,"name":"RelativeEq","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":87},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":6102,"byte_end":6108,"line_start":174,"line_end":174,"column_start":18,"column_end":24},"alias_span":null,"name":"UlpsEq","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":597,"byte_end":11440,"line_start":15,"line_end":384,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":46},{"krate":0,"index":82},{"krate":0,"index":117},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":138},{"krate":0,"index":142},{"krate":0,"index":148},{"krate":0,"index":153},{"krate":0,"index":157},{"krate":0,"index":164},{"krate":0,"index":169},{"krate":0,"index":173}],"decl_id":null,"docs":" A crate that provides facilities for testing the approximate equality of floating-point\n based types, using either relative difference, or units in the last place (ULPs)\n comparisons.","sig":null,"attributes":[{"value":"! A crate that provides facilities for testing the approximate equality of floating-point","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":597,"byte_end":688,"line_start":15,"line_end":15,"column_start":1,"column_end":92}},{"value":"! based types, using either relative difference, or units in the last place (ULPs)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":689,"byte_end":773,"line_start":16,"line_end":16,"column_start":1,"column_end":85}},{"value":"! comparisons.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":774,"byte_end":790,"line_start":17,"line_end":17,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":791,"byte_end":794,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! You can also use the `approx_{eq, ne}!` `assert_approx_{eq, ne}!` macros to test for equality","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":795,"byte_end":892,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"! using a more positional style.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":893,"byte_end":927,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":928,"byte_end":931,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":932,"byte_end":943,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"! #[macro_use]","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":944,"byte_end":960,"line_start":23,"line_end":23,"column_start":1,"column_end":17}},{"value":"! extern crate approx;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":961,"byte_end":985,"line_start":24,"line_end":24,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":986,"byte_end":989,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! use std::f64;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":990,"byte_end":1007,"line_start":26,"line_end":26,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":1008,"byte_end":1011,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! # fn main() {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":1012,"byte_end":1029,"line_start":28,"line_end":28,"column_start":1,"column_end":18}},{"value":"! abs_diff_eq!(1.0, 1.0);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":1030,"byte_end":1057,"line_start":29,"line_end":29,"column_start":1,"column_end":28}},{"value":"! abs_diff_eq!(1.0, 1.0, epsilon = f64::EPSILON);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":1058,"byte_end":1109,"line_start":30,"line_end":30,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":1110,"byte_end":1113,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! relative_eq!(1.0, 1.0);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":1114,"byte_end":1141,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"! relative_eq!(1.0, 1.0, epsilon = f64::EPSILON);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":1142,"byte_end":1193,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"! relative_eq!(1.0, 1.0, max_relative = 1.0);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":1194,"byte_end":1241,"line_start":34,"line_end":34,"column_start":1,"column_end":48}},{"value":"! relative_eq!(1.0, 1.0, epsilon = f64::EPSILON, max_relative = 1.0);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":1242,"byte_end":1313,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"! relative_eq!(1.0, 1.0, max_relative = 1.0, epsilon = f64::EPSILON);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":1314,"byte_end":1385,"line_start":36,"line_end":36,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":1386,"byte_end":1389,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! ulps_eq!(1.0, 1.0);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":1390,"byte_end":1413,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"! ulps_eq!(1.0, 1.0, epsilon = f64::EPSILON);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":1414,"byte_end":1461,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"! ulps_eq!(1.0, 1.0, max_ulps = 4);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":1462,"byte_end":1499,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"! ulps_eq!(1.0, 1.0, epsilon = f64::EPSILON, max_ulps = 4);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":1500,"byte_end":1561,"line_start":41,"line_end":41,"column_start":1,"column_end":62}},{"value":"! ulps_eq!(1.0, 1.0, max_ulps = 4, epsilon = f64::EPSILON);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":1562,"byte_end":1623,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"! # }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":1624,"byte_end":1631,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":1632,"byte_end":1639,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":1640,"byte_end":1643,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"! # Implementing approximate equality for custom types","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":1644,"byte_end":1700,"line_start":46,"line_end":46,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":1701,"byte_end":1704,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! The `ApproxEq` trait allows approximate equalities to be implemented on types, based on the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":1705,"byte_end":1800,"line_start":48,"line_end":48,"column_start":1,"column_end":96}},{"value":"! fundamental floating point implementations.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":1801,"byte_end":1848,"line_start":49,"line_end":49,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":1849,"byte_end":1852,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! For example, we might want to be able to do approximate assertions on a complex number type:","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":1853,"byte_end":1949,"line_start":51,"line_end":51,"column_start":1,"column_end":97}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":1950,"byte_end":1953,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":1954,"byte_end":1965,"line_start":53,"line_end":53,"column_start":1,"column_end":12}},{"value":"! #[macro_use]","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":1966,"byte_end":1982,"line_start":54,"line_end":54,"column_start":1,"column_end":17}},{"value":"! extern crate approx;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":1983,"byte_end":2007,"line_start":55,"line_end":55,"column_start":1,"column_end":25}},{"value":"! # use approx::{AbsDiffEq, RelativeEq, UlpsEq};","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":2008,"byte_end":2058,"line_start":56,"line_end":56,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":2059,"byte_end":2062,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"! #[derive(Debug, PartialEq)]","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":2063,"byte_end":2094,"line_start":58,"line_end":58,"column_start":1,"column_end":32}},{"value":"! struct Complex<T> {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":2095,"byte_end":2118,"line_start":59,"line_end":59,"column_start":1,"column_end":24}},{"value":"!     x: T,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":2119,"byte_end":2132,"line_start":60,"line_end":60,"column_start":1,"column_end":14}},{"value":"!     i: T,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":2133,"byte_end":2146,"line_start":61,"line_end":61,"column_start":1,"column_end":14}},{"value":"! }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":2147,"byte_end":2152,"line_start":62,"line_end":62,"column_start":1,"column_end":6}},{"value":"! # impl<T: AbsDiffEq> AbsDiffEq for Complex<T> where T::Epsilon: Copy {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":2153,"byte_end":2227,"line_start":63,"line_end":63,"column_start":1,"column_end":75}},{"value":"! #     type Epsilon = T::Epsilon;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":2228,"byte_end":2264,"line_start":64,"line_end":64,"column_start":1,"column_end":37}},{"value":"! #     fn default_epsilon() -> T::Epsilon { T::default_epsilon() }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":2265,"byte_end":2334,"line_start":65,"line_end":65,"column_start":1,"column_end":70}},{"value":"! #     fn abs_diff_eq(&self, other: &Self, epsilon: T::Epsilon) -> bool {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":2335,"byte_end":2411,"line_start":66,"line_end":66,"column_start":1,"column_end":77}},{"value":"! #         T::abs_diff_eq(&self.x, &other.x, epsilon) &&","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":2412,"byte_end":2471,"line_start":67,"line_end":67,"column_start":1,"column_end":60}},{"value":"! #         T::abs_diff_eq(&self.i, &other.i, epsilon)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":2472,"byte_end":2528,"line_start":68,"line_end":68,"column_start":1,"column_end":57}},{"value":"! #     }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":2529,"byte_end":2540,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"! # }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":2541,"byte_end":2548,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"! # impl<T: RelativeEq> RelativeEq for Complex<T> where T::Epsilon: Copy {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":2549,"byte_end":2625,"line_start":71,"line_end":71,"column_start":1,"column_end":77}},{"value":"! #     fn default_max_relative() -> T::Epsilon { T::default_max_relative() }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":2626,"byte_end":2705,"line_start":72,"line_end":72,"column_start":1,"column_end":80}},{"value":"! #     fn relative_eq(&self, other: &Self, epsilon: T::Epsilon, max_relative: T::Epsilon)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":2706,"byte_end":2798,"line_start":73,"line_end":73,"column_start":1,"column_end":93}},{"value":"! #                   -> bool {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":2799,"byte_end":2832,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"! #         T::relative_eq(&self.x, &other.x, epsilon, max_relative) &&","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":2833,"byte_end":2906,"line_start":75,"line_end":75,"column_start":1,"column_end":74}},{"value":"! #         T::relative_eq(&self.i, &other.i, epsilon, max_relative)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":2907,"byte_end":2977,"line_start":76,"line_end":76,"column_start":1,"column_end":71}},{"value":"! #     }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":2978,"byte_end":2989,"line_start":77,"line_end":77,"column_start":1,"column_end":12}},{"value":"! # }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":2990,"byte_end":2997,"line_start":78,"line_end":78,"column_start":1,"column_end":8}},{"value":"! # impl<T: UlpsEq> UlpsEq for Complex<T> where T::Epsilon: Copy {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":2998,"byte_end":3066,"line_start":79,"line_end":79,"column_start":1,"column_end":69}},{"value":"! #     fn default_max_ulps() -> u32 { T::default_max_ulps() }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":3067,"byte_end":3131,"line_start":80,"line_end":80,"column_start":1,"column_end":65}},{"value":"! #     fn ulps_eq(&self, other: &Self, epsilon: T::Epsilon, max_ulps: u32) -> bool {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":3132,"byte_end":3219,"line_start":81,"line_end":81,"column_start":1,"column_end":88}},{"value":"! #         T::ulps_eq(&self.x, &other.x, epsilon, max_ulps) &&","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":3220,"byte_end":3285,"line_start":82,"line_end":82,"column_start":1,"column_end":66}},{"value":"! #         T::ulps_eq(&self.i, &other.i, epsilon, max_ulps)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":3286,"byte_end":3348,"line_start":83,"line_end":83,"column_start":1,"column_end":63}},{"value":"! #     }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":3349,"byte_end":3360,"line_start":84,"line_end":84,"column_start":1,"column_end":12}},{"value":"! # }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":3361,"byte_end":3368,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":3369,"byte_end":3372,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"! # fn main() {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":3373,"byte_end":3390,"line_start":87,"line_end":87,"column_start":1,"column_end":18}},{"value":"! let x = Complex { x: 1.2, i: 2.3 };","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":3391,"byte_end":3430,"line_start":88,"line_end":88,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":3431,"byte_end":3434,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"! assert_relative_eq!(x, x);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":3435,"byte_end":3465,"line_start":90,"line_end":90,"column_start":1,"column_end":31}},{"value":"! assert_ulps_eq!(x, x, max_ulps = 4);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":3466,"byte_end":3506,"line_start":91,"line_end":91,"column_start":1,"column_end":41}},{"value":"! # }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":3507,"byte_end":3514,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":3515,"byte_end":3522,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":3523,"byte_end":3526,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! To do this we can implement `AbsDiffEq`, `RelativeEq` and `UlpsEq` generically in terms of a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":3527,"byte_end":3623,"line_start":95,"line_end":95,"column_start":1,"column_end":97}},{"value":"! type parameter that also implements `ApproxEq`, `RelativeEq` and `UlpsEq` respectively. This","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":3624,"byte_end":3720,"line_start":96,"line_end":96,"column_start":1,"column_end":97}},{"value":"! means that we can make comparisons for either `Complex<f32>` or `Complex<f64>`:","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":3721,"byte_end":3804,"line_start":97,"line_end":97,"column_start":1,"column_end":84}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":3805,"byte_end":3808,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":3809,"byte_end":3820,"line_start":99,"line_end":99,"column_start":1,"column_end":12}},{"value":"! # use approx::{AbsDiffEq, RelativeEq, UlpsEq};","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":3821,"byte_end":3871,"line_start":100,"line_end":100,"column_start":1,"column_end":51}},{"value":"! # #[derive(Debug, PartialEq)]","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":3872,"byte_end":3905,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"! # struct Complex<T> { x: T, i: T, }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":3906,"byte_end":3945,"line_start":102,"line_end":102,"column_start":1,"column_end":40}},{"value":"! #","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":3946,"byte_end":3951,"line_start":103,"line_end":103,"column_start":1,"column_end":6}},{"value":"! impl<T: AbsDiffEq> AbsDiffEq for Complex<T> where","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":3952,"byte_end":4005,"line_start":104,"line_end":104,"column_start":1,"column_end":54}},{"value":"!     T::Epsilon: Copy,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":4006,"byte_end":4031,"line_start":105,"line_end":105,"column_start":1,"column_end":26}},{"value":"! {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":4032,"byte_end":4037,"line_start":106,"line_end":106,"column_start":1,"column_end":6}},{"value":"!     type Epsilon = T::Epsilon;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":4038,"byte_end":4072,"line_start":107,"line_end":107,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":4073,"byte_end":4076,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"!     fn default_epsilon() -> T::Epsilon {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":4077,"byte_end":4121,"line_start":109,"line_end":109,"column_start":1,"column_end":45}},{"value":"!         T::default_epsilon()","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":4122,"byte_end":4154,"line_start":110,"line_end":110,"column_start":1,"column_end":33}},{"value":"!     }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":4155,"byte_end":4164,"line_start":111,"line_end":111,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":4165,"byte_end":4168,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"!     fn abs_diff_eq(&self, other: &Self, epsilon: T::Epsilon) -> bool {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":4169,"byte_end":4243,"line_start":113,"line_end":113,"column_start":1,"column_end":75}},{"value":"!         T::abs_diff_eq(&self.x, &other.x, epsilon) &&","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":4244,"byte_end":4301,"line_start":114,"line_end":114,"column_start":1,"column_end":58}},{"value":"!         T::abs_diff_eq(&self.i, &other.i, epsilon)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":4302,"byte_end":4356,"line_start":115,"line_end":115,"column_start":1,"column_end":55}},{"value":"!     }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":4357,"byte_end":4366,"line_start":116,"line_end":116,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":4367,"byte_end":4372,"line_start":117,"line_end":117,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":4373,"byte_end":4376,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"! impl<T: RelativeEq> RelativeEq for Complex<T> where","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":4377,"byte_end":4432,"line_start":119,"line_end":119,"column_start":1,"column_end":56}},{"value":"!     T::Epsilon: Copy,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":4433,"byte_end":4458,"line_start":120,"line_end":120,"column_start":1,"column_end":26}},{"value":"! {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":4459,"byte_end":4464,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"!     fn default_max_relative() -> T::Epsilon {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":4465,"byte_end":4514,"line_start":122,"line_end":122,"column_start":1,"column_end":50}},{"value":"!         T::default_max_relative()","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":4515,"byte_end":4552,"line_start":123,"line_end":123,"column_start":1,"column_end":38}},{"value":"!     }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":4553,"byte_end":4562,"line_start":124,"line_end":124,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":4563,"byte_end":4566,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"!     fn relative_eq(&self, other: &Self, epsilon: T::Epsilon, max_relative: T::Epsilon) -> bool {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":4567,"byte_end":4667,"line_start":126,"line_end":126,"column_start":1,"column_end":101}},{"value":"!         T::relative_eq(&self.x, &other.x, epsilon, max_relative) &&","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":4668,"byte_end":4739,"line_start":127,"line_end":127,"column_start":1,"column_end":72}},{"value":"!         T::relative_eq(&self.i, &other.i, epsilon, max_relative)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":4740,"byte_end":4808,"line_start":128,"line_end":128,"column_start":1,"column_end":69}},{"value":"!     }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":4809,"byte_end":4818,"line_start":129,"line_end":129,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":4819,"byte_end":4824,"line_start":130,"line_end":130,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":4825,"byte_end":4828,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"! impl<T: UlpsEq> UlpsEq for Complex<T> where","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":4829,"byte_end":4876,"line_start":132,"line_end":132,"column_start":1,"column_end":48}},{"value":"!     T::Epsilon: Copy,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":4877,"byte_end":4902,"line_start":133,"line_end":133,"column_start":1,"column_end":26}},{"value":"! {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":4903,"byte_end":4908,"line_start":134,"line_end":134,"column_start":1,"column_end":6}},{"value":"!     fn default_max_ulps() -> u32 {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":4909,"byte_end":4947,"line_start":135,"line_end":135,"column_start":1,"column_end":39}},{"value":"!         T::default_max_ulps()","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":4948,"byte_end":4981,"line_start":136,"line_end":136,"column_start":1,"column_end":34}},{"value":"!     }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":4982,"byte_end":4991,"line_start":137,"line_end":137,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":4992,"byte_end":4995,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"!     fn ulps_eq(&self, other: &Self, epsilon: T::Epsilon, max_ulps: u32) -> bool {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":4996,"byte_end":5081,"line_start":139,"line_end":139,"column_start":1,"column_end":86}},{"value":"!         T::ulps_eq(&self.x, &other.x, epsilon, max_ulps) &&","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":5082,"byte_end":5145,"line_start":140,"line_end":140,"column_start":1,"column_end":64}},{"value":"!         T::ulps_eq(&self.i, &other.i, epsilon, max_ulps)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":5146,"byte_end":5206,"line_start":141,"line_end":141,"column_start":1,"column_end":61}},{"value":"!     }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":5207,"byte_end":5216,"line_start":142,"line_end":142,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":5217,"byte_end":5222,"line_start":143,"line_end":143,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":5223,"byte_end":5230,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":5231,"byte_end":5234,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"! # References","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":5235,"byte_end":5251,"line_start":146,"line_end":146,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":5252,"byte_end":5255,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"! Floating point is hard! Thanks goes to these links for helping to make things a _little_","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":5256,"byte_end":5348,"line_start":148,"line_end":148,"column_start":1,"column_end":93}},{"value":"! easier to understand:","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":5349,"byte_end":5374,"line_start":149,"line_end":149,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":5375,"byte_end":5378,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"! - [Comparing Floating Point Numbers, 2012 Edition]","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":5379,"byte_end":5433,"line_start":151,"line_end":151,"column_start":1,"column_end":55}},{"value":"!   (https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":5434,"byte_end":5533,"line_start":152,"line_end":152,"column_start":1,"column_end":100}},{"value":"! - [The Floating Point Guide - Comparison](http://floating-point-gui.de/errors/comparison/)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":5534,"byte_end":5628,"line_start":153,"line_end":153,"column_start":1,"column_end":95}},{"value":"! - [What Every Computer Scientist Should Know About Floating-Point Arithmetic]","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":5629,"byte_end":5710,"line_start":154,"line_end":154,"column_start":1,"column_end":82}},{"value":"!   (https://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":5711,"byte_end":5782,"line_start":155,"line_end":155,"column_start":1,"column_end":72}}]},{"kind":"Trait","id":{"krate":0,"index":9},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/abs_diff_eq.rs","byte_start":11676,"byte_end":11685,"line_start":8,"line_end":8,"column_start":11,"column_end":20},"name":"AbsDiffEq","qualname":"::abs_diff_eq::AbsDiffEq","value":"AbsDiffEq<Rhs = Self>: PartialEq<Rhs>","parent":null,"children":[{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14}],"decl_id":null,"docs":" Equality that is defined using the absolute difference of two numbers.\n","sig":null,"attributes":[{"value":"/ Equality that is defined using the absolute difference of two numbers.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/abs_diff_eq.rs","byte_start":11591,"byte_end":11665,"line_start":7,"line_end":7,"column_start":1,"column_end":75}}]},{"kind":"Type","id":{"krate":0,"index":11},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/abs_diff_eq.rs","byte_start":11798,"byte_end":11805,"line_start":13,"line_end":13,"column_start":10,"column_end":17},"name":"Epsilon","qualname":"::abs_diff_eq::AbsDiffEq::Epsilon","value":"type Epsilon;","parent":{"krate":0,"index":9},"children":[],"decl_id":null,"docs":" Used for specifying relative comparisons.\n","sig":null,"attributes":[{"value":"/ Used for specifying relative comparisons.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/abs_diff_eq.rs","byte_start":11743,"byte_end":11788,"line_start":12,"line_end":12,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/abs_diff_eq.rs","byte_start":12031,"byte_end":12046,"line_start":19,"line_end":19,"column_start":8,"column_end":23},"name":"default_epsilon","qualname":"::abs_diff_eq::AbsDiffEq::default_epsilon","value":"fn () -> Self::Epsilon","parent":{"krate":0,"index":9},"children":[],"decl_id":null,"docs":" The default tolerance to use when testing values that are close together.","sig":null,"attributes":[{"value":"/ The default tolerance to use when testing values that are close together.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/abs_diff_eq.rs","byte_start":11812,"byte_end":11889,"line_start":15,"line_end":15,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/abs_diff_eq.rs","byte_start":11894,"byte_end":11897,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ This is used when no `epsilon` value is supplied to the `abs_diff_eq!`, `relative_eq!`, or","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/abs_diff_eq.rs","byte_start":11902,"byte_end":11996,"line_start":17,"line_end":17,"column_start":5,"column_end":99}},{"value":"/ `ulps_eq!` macros.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/abs_diff_eq.rs","byte_start":12001,"byte_end":12023,"line_start":18,"line_end":18,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":13},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/abs_diff_eq.rs","byte_start":12197,"byte_end":12208,"line_start":23,"line_end":23,"column_start":8,"column_end":19},"name":"abs_diff_eq","qualname":"::abs_diff_eq::AbsDiffEq::abs_diff_eq","value":"fn (&self, other: &Rhs, epsilon: Self::Epsilon) -> bool","parent":{"krate":0,"index":9},"children":[],"decl_id":null,"docs":" A test for equality that uses the absolute difference to compute the approximate\n equality of two numbers.\n","sig":null,"attributes":[{"value":"/ A test for equality that uses the absolute difference to compute the approximate","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/abs_diff_eq.rs","byte_start":12072,"byte_end":12156,"line_start":21,"line_end":21,"column_start":5,"column_end":89}},{"value":"/ equality of two numbers.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/abs_diff_eq.rs","byte_start":12161,"byte_end":12189,"line_start":22,"line_end":22,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/abs_diff_eq.rs","byte_start":12318,"byte_end":12329,"line_start":26,"line_end":26,"column_start":8,"column_end":19},"name":"abs_diff_ne","qualname":"::abs_diff_eq::AbsDiffEq::abs_diff_ne","value":"fn (&self, other: &Rhs, epsilon: Self::Epsilon) -> bool","parent":{"krate":0,"index":9},"children":[],"decl_id":null,"docs":" The inverse of `ApproxEq::abs_diff_eq`.\n","sig":null,"attributes":[{"value":"/ The inverse of `ApproxEq::abs_diff_eq`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/abs_diff_eq.rs","byte_start":12267,"byte_end":12310,"line_start":25,"line_end":25,"column_start":5,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":52},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/relative_eq.rs","byte_start":16839,"byte_end":16849,"line_start":11,"line_end":11,"column_start":11,"column_end":21},"name":"RelativeEq","qualname":"::relative_eq::RelativeEq","value":"RelativeEq<Rhs = Self>: AbsDiffEq<Rhs>","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56}],"decl_id":null,"docs":" Equality comparisons between two numbers using both the absolute difference and\n relative based comparisons.\n","sig":null,"attributes":[{"value":"/ Equality comparisons between two numbers using both the absolute difference and","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/relative_eq.rs","byte_start":16713,"byte_end":16796,"line_start":9,"line_end":9,"column_start":1,"column_end":84}},{"value":"/ relative based comparisons.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/relative_eq.rs","byte_start":16797,"byte_end":16828,"line_start":10,"line_end":10,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/relative_eq.rs","byte_start":17086,"byte_end":17106,"line_start":18,"line_end":18,"column_start":8,"column_end":28},"name":"default_max_relative","qualname":"::relative_eq::RelativeEq::default_max_relative","value":"fn () -> Self::Epsilon","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" The default relative tolerance for testing values that are far-apart.","sig":null,"attributes":[{"value":"/ The default relative tolerance for testing values that are far-apart.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/relative_eq.rs","byte_start":16907,"byte_end":16980,"line_start":15,"line_end":15,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/relative_eq.rs","byte_start":16985,"byte_end":16988,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ This is used when no `max_relative` value is supplied to the `relative_eq` macro.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/relative_eq.rs","byte_start":16993,"byte_end":17078,"line_start":17,"line_end":17,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/relative_eq.rs","byte_start":17224,"byte_end":17235,"line_start":21,"line_end":21,"column_start":8,"column_end":19},"name":"relative_eq","qualname":"::relative_eq::RelativeEq::relative_eq","value":"fn (&self, other: &Rhs, epsilon: Self::Epsilon, max_relative: Self::Epsilon) -> bool","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" A test for equality that uses a relative comparison if the values are far apart.\n","sig":null,"attributes":[{"value":"/ A test for equality that uses a relative comparison if the values are far apart.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/relative_eq.rs","byte_start":17132,"byte_end":17216,"line_start":20,"line_end":20,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/relative_eq.rs","byte_start":17413,"byte_end":17424,"line_start":29,"line_end":29,"column_start":8,"column_end":19},"name":"relative_ne","qualname":"::relative_eq::RelativeEq::relative_ne","value":"fn (&self, other: &Rhs, epsilon: Self::Epsilon, max_relative: Self::Epsilon) -> bool","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" The inverse of `ApproxEq::relative_eq`.\n","sig":null,"attributes":[{"value":"/ The inverse of `ApproxEq::relative_eq`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/relative_eq.rs","byte_start":17362,"byte_end":17405,"line_start":28,"line_end":28,"column_start":5,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":87},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/ulps_eq.rs","byte_start":22405,"byte_end":22411,"line_start":11,"line_end":11,"column_start":11,"column_end":17},"name":"UlpsEq","qualname":"::ulps_eq::UlpsEq","value":"UlpsEq<Rhs = Self>: AbsDiffEq<Rhs>","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91}],"decl_id":null,"docs":" Equality comparisons between two numbers using both the absolute difference and ULPs\n (Units in Last Place) based comparisons.\n","sig":null,"attributes":[{"value":"/ Equality comparisons between two numbers using both the absolute difference and ULPs","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/ulps_eq.rs","byte_start":22261,"byte_end":22349,"line_start":9,"line_end":9,"column_start":1,"column_end":89}},{"value":"/ (Units in Last Place) based comparisons.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/ulps_eq.rs","byte_start":22350,"byte_end":22394,"line_start":10,"line_end":10,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/ulps_eq.rs","byte_start":22639,"byte_end":22655,"line_start":18,"line_end":18,"column_start":8,"column_end":24},"name":"default_max_ulps","qualname":"::ulps_eq::UlpsEq::default_max_ulps","value":"fn () -> u32","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" The default ULPs to tolerate when testing values that are far-apart.","sig":null,"attributes":[{"value":"/ The default ULPs to tolerate when testing values that are far-apart.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/ulps_eq.rs","byte_start":22469,"byte_end":22541,"line_start":15,"line_end":15,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/ulps_eq.rs","byte_start":22546,"byte_end":22549,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ This is used when no `max_ulps` value is supplied to the `ulps_eq` macro.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/ulps_eq.rs","byte_start":22554,"byte_end":22631,"line_start":17,"line_end":17,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/ulps_eq.rs","byte_start":22771,"byte_end":22778,"line_start":21,"line_end":21,"column_start":8,"column_end":15},"name":"ulps_eq","qualname":"::ulps_eq::UlpsEq::ulps_eq","value":"fn (&self, other: &Rhs, epsilon: Self::Epsilon, max_ulps: u32) -> bool","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" A test for equality that uses units in the last place (ULP) if the values are far apart.\n","sig":null,"attributes":[{"value":"/ A test for equality that uses units in the last place (ULP) if the values are far apart.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/ulps_eq.rs","byte_start":22671,"byte_end":22763,"line_start":20,"line_end":20,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/ulps_eq.rs","byte_start":22899,"byte_end":22906,"line_start":24,"line_end":24,"column_start":8,"column_end":15},"name":"ulps_ne","qualname":"::ulps_eq::UlpsEq::ulps_ne","value":"fn (&self, other: &Rhs, epsilon: Self::Epsilon, max_ulps: u32) -> bool","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" The inverse of `ApproxEq::ulps_eq`.\n","sig":null,"attributes":[{"value":"/ The inverse of `ApproxEq::ulps_eq`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/ulps_eq.rs","byte_start":22852,"byte_end":22891,"line_start":23,"line_end":23,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":134},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":6549,"byte_end":6556,"line_start":191,"line_end":191,"column_start":12,"column_end":19},"name":"AbsDiff","qualname":"::AbsDiff","value":"AbsDiff { epsilon }","parent":null,"children":[{"krate":0,"index":137}],"decl_id":null,"docs":" The requisite parameters for testing for approximate equality using a\n absolute difference based comparison.","sig":null,"attributes":[{"value":"/ The requisite parameters for testing for approximate equality using a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":6111,"byte_end":6184,"line_start":176,"line_end":176,"column_start":1,"column_end":74}},{"value":"/ absolute difference based comparison.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":6185,"byte_end":6226,"line_start":177,"line_end":177,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":6227,"byte_end":6230,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ This is not normally used directly, rather via the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":6231,"byte_end":6285,"line_start":179,"line_end":179,"column_start":1,"column_end":55}},{"value":"/ `assert_abs_diff_{eq|ne}!` and `abs_diff_{eq|ne}!` macros.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":6286,"byte_end":6348,"line_start":180,"line_end":180,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":6349,"byte_end":6352,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":6353,"byte_end":6366,"line_start":182,"line_end":182,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":6367,"byte_end":6370,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":6371,"byte_end":6382,"line_start":184,"line_end":184,"column_start":1,"column_end":12}},{"value":"/ use std::f64;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":6383,"byte_end":6400,"line_start":185,"line_end":185,"column_start":1,"column_end":18}},{"value":"/ use approx::AbsDiff;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":6401,"byte_end":6425,"line_start":186,"line_end":186,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":6426,"byte_end":6429,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ AbsDiff::default().eq(&1.0, &1.0);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":6430,"byte_end":6468,"line_start":188,"line_end":188,"column_start":1,"column_end":39}},{"value":"/ AbsDiff::default().epsilon(f64::EPSILON).eq(&1.0, &1.0);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":6469,"byte_end":6529,"line_start":189,"line_end":189,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":6530,"byte_end":6537,"line_start":190,"line_end":190,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":137},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":6702,"byte_end":6709,"line_start":197,"line_end":197,"column_start":9,"column_end":16},"name":"epsilon","qualname":"::AbsDiff::epsilon","value":"<A as abs_diff_eq::AbsDiffEq<B>>::Epsilon","parent":{"krate":0,"index":134},"children":[],"decl_id":null,"docs":" The tolerance to use when testing values that are close together.\n","sig":null,"attributes":[{"value":"/ The tolerance to use when testing values that are close together.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":6624,"byte_end":6693,"line_start":196,"line_end":196,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":7107,"byte_end":7114,"line_start":220,"line_end":220,"column_start":12,"column_end":19},"name":"epsilon","qualname":"<AbsDiff<A, B>>::epsilon","value":"fn (self, epsilon: A::Epsilon) -> AbsDiff<A, B>","parent":null,"children":[],"decl_id":null,"docs":" Replace the epsilon value with the one specified.\n","sig":null,"attributes":[{"value":"/ Replace the epsilon value with the one specified.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":7028,"byte_end":7081,"line_start":218,"line_end":218,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":7086,"byte_end":7095,"line_start":219,"line_end":219,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":7268,"byte_end":7270,"line_start":226,"line_end":226,"column_start":12,"column_end":14},"name":"eq","qualname":"<AbsDiff<A, B>>::eq","value":"fn (self, lhs: &A, rhs: &B) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Peform the equality comparison\n","sig":null,"attributes":[{"value":"/ Peform the equality comparison","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":7208,"byte_end":7242,"line_start":224,"line_end":224,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":7247,"byte_end":7256,"line_start":225,"line_end":225,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":7425,"byte_end":7427,"line_start":232,"line_end":232,"column_start":12,"column_end":14},"name":"ne","qualname":"<AbsDiff<A, B>>::ne","value":"fn (self, lhs: &A, rhs: &B) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Peform the inequality comparison\n","sig":null,"attributes":[{"value":"/ Peform the inequality comparison","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":7363,"byte_end":7399,"line_start":230,"line_end":230,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":7404,"byte_end":7413,"line_start":231,"line_end":231,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":148},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":8166,"byte_end":8174,"line_start":255,"line_end":255,"column_start":12,"column_end":20},"name":"Relative","qualname":"::Relative","value":"Relative { epsilon, max_relative }","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152}],"decl_id":null,"docs":" The requisite parameters for testing for approximate equality using a\n relative based comparison.","sig":null,"attributes":[{"value":"/ The requisite parameters for testing for approximate equality using a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":7518,"byte_end":7591,"line_start":237,"line_end":237,"column_start":1,"column_end":74}},{"value":"/ relative based comparison.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":7592,"byte_end":7622,"line_start":238,"line_end":238,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":7623,"byte_end":7626,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ This is not normally used directly, rather via the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":7627,"byte_end":7681,"line_start":240,"line_end":240,"column_start":1,"column_end":55}},{"value":"/ `assert_relative_{eq|ne}!` and `relative_{eq|ne}!` macros.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":7682,"byte_end":7744,"line_start":241,"line_end":241,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":7745,"byte_end":7748,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":7749,"byte_end":7762,"line_start":243,"line_end":243,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":7763,"byte_end":7766,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":7767,"byte_end":7778,"line_start":245,"line_end":245,"column_start":1,"column_end":12}},{"value":"/ use std::f64;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":7779,"byte_end":7796,"line_start":246,"line_end":246,"column_start":1,"column_end":18}},{"value":"/ use approx::Relative;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":7797,"byte_end":7822,"line_start":247,"line_end":247,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":7823,"byte_end":7826,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ Relative::default().eq(&1.0, &1.0);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":7827,"byte_end":7866,"line_start":249,"line_end":249,"column_start":1,"column_end":40}},{"value":"/ Relative::default().epsilon(f64::EPSILON).eq(&1.0, &1.0);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":7867,"byte_end":7928,"line_start":250,"line_end":250,"column_start":1,"column_end":62}},{"value":"/ Relative::default().max_relative(1.0).eq(&1.0, &1.0);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":7929,"byte_end":7986,"line_start":251,"line_end":251,"column_start":1,"column_end":58}},{"value":"/ Relative::default().epsilon(f64::EPSILON).max_relative(1.0).eq(&1.0, &1.0);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":7987,"byte_end":8066,"line_start":252,"line_end":252,"column_start":1,"column_end":80}},{"value":"/ Relative::default().max_relative(1.0).epsilon(f64::EPSILON).eq(&1.0, &1.0);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":8067,"byte_end":8146,"line_start":253,"line_end":253,"column_start":1,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":8147,"byte_end":8154,"line_start":254,"line_end":254,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":151},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":8321,"byte_end":8328,"line_start":261,"line_end":261,"column_start":9,"column_end":16},"name":"epsilon","qualname":"::Relative::epsilon","value":"<A as abs_diff_eq::AbsDiffEq<B>>::Epsilon","parent":{"krate":0,"index":148},"children":[],"decl_id":null,"docs":" The tolerance to use when testing values that are close together.\n","sig":null,"attributes":[{"value":"/ The tolerance to use when testing values that are close together.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":8243,"byte_end":8312,"line_start":260,"line_end":260,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":152},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":8420,"byte_end":8432,"line_start":263,"line_end":263,"column_start":9,"column_end":21},"name":"max_relative","qualname":"::Relative::max_relative","value":"<A as abs_diff_eq::AbsDiffEq<B>>::Epsilon","parent":{"krate":0,"index":148},"children":[],"decl_id":null,"docs":" The relative tolerance for testing values that are far-apart.\n","sig":null,"attributes":[{"value":"/ The relative tolerance for testing values that are far-apart.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":8346,"byte_end":8411,"line_start":262,"line_end":262,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":8889,"byte_end":8896,"line_start":287,"line_end":287,"column_start":12,"column_end":19},"name":"epsilon","qualname":"<Relative<A, B>>::epsilon","value":"fn (self, epsilon: A::Epsilon) -> Relative<A, B>","parent":null,"children":[],"decl_id":null,"docs":" Replace the epsilon value with the one specified.\n","sig":null,"attributes":[{"value":"/ Replace the epsilon value with the one specified.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":8810,"byte_end":8863,"line_start":285,"line_end":285,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":8868,"byte_end":8877,"line_start":286,"line_end":286,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":9080,"byte_end":9092,"line_start":293,"line_end":293,"column_start":12,"column_end":24},"name":"max_relative","qualname":"<Relative<A, B>>::max_relative","value":"fn (self, max_relative: A::Epsilon) -> Relative<A, B>","parent":null,"children":[],"decl_id":null,"docs":" Replace the maximum relative value with the one specified.\n","sig":null,"attributes":[{"value":"/ Replace the maximum relative value with the one specified.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":8992,"byte_end":9054,"line_start":291,"line_end":291,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":9059,"byte_end":9068,"line_start":292,"line_end":292,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":9290,"byte_end":9292,"line_start":302,"line_end":302,"column_start":12,"column_end":14},"name":"eq","qualname":"<Relative<A, B>>::eq","value":"fn (self, lhs: &A, rhs: &B) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Peform the equality comparison\n","sig":null,"attributes":[{"value":"/ Peform the equality comparison","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":9230,"byte_end":9264,"line_start":300,"line_end":300,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":9269,"byte_end":9278,"line_start":301,"line_end":301,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":9466,"byte_end":9468,"line_start":308,"line_end":308,"column_start":12,"column_end":14},"name":"ne","qualname":"<Relative<A, B>>::ne","value":"fn (self, lhs: &A, rhs: &B) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Peform the inequality comparison\n","sig":null,"attributes":[{"value":"/ Peform the inequality comparison","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":9404,"byte_end":9440,"line_start":306,"line_end":306,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":9445,"byte_end":9454,"line_start":307,"line_end":307,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":164},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":10173,"byte_end":10177,"line_start":331,"line_end":331,"column_start":12,"column_end":16},"name":"Ulps","qualname":"::Ulps","value":"Ulps { epsilon, max_ulps }","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168}],"decl_id":null,"docs":" The requisite parameters for testing for approximate equality using an ULPs\n based comparison.","sig":null,"attributes":[{"value":"/ The requisite parameters for testing for approximate equality using an ULPs","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":9578,"byte_end":9657,"line_start":313,"line_end":313,"column_start":1,"column_end":80}},{"value":"/ based comparison.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":9658,"byte_end":9679,"line_start":314,"line_end":314,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":9680,"byte_end":9683,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ This is not normally used directly, rather via the `assert_ulps_{eq|ne}!`","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":9684,"byte_end":9761,"line_start":316,"line_end":316,"column_start":1,"column_end":78}},{"value":"/ and `ulps_{eq|ne}!` macros.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":9762,"byte_end":9793,"line_start":317,"line_end":317,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":9794,"byte_end":9797,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":9798,"byte_end":9811,"line_start":319,"line_end":319,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":9812,"byte_end":9815,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":9816,"byte_end":9827,"line_start":321,"line_end":321,"column_start":1,"column_end":12}},{"value":"/ use std::f64;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":9828,"byte_end":9845,"line_start":322,"line_end":322,"column_start":1,"column_end":18}},{"value":"/ use approx::Ulps;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":9846,"byte_end":9867,"line_start":323,"line_end":323,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":9868,"byte_end":9871,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ Ulps::default().eq(&1.0, &1.0);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":9872,"byte_end":9907,"line_start":325,"line_end":325,"column_start":1,"column_end":36}},{"value":"/ Ulps::default().epsilon(f64::EPSILON).eq(&1.0, &1.0);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":9908,"byte_end":9965,"line_start":326,"line_end":326,"column_start":1,"column_end":58}},{"value":"/ Ulps::default().max_ulps(4).eq(&1.0, &1.0);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":9966,"byte_end":10013,"line_start":327,"line_end":327,"column_start":1,"column_end":48}},{"value":"/ Ulps::default().epsilon(f64::EPSILON).max_ulps(4).eq(&1.0, &1.0);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":10014,"byte_end":10083,"line_start":328,"line_end":328,"column_start":1,"column_end":70}},{"value":"/ Ulps::default().max_ulps(4).epsilon(f64::EPSILON).eq(&1.0, &1.0);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":10084,"byte_end":10153,"line_start":329,"line_end":329,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":10154,"byte_end":10161,"line_start":330,"line_end":330,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":167},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":10320,"byte_end":10327,"line_start":337,"line_end":337,"column_start":9,"column_end":16},"name":"epsilon","qualname":"::Ulps::epsilon","value":"<A as abs_diff_eq::AbsDiffEq<B>>::Epsilon","parent":{"krate":0,"index":164},"children":[],"decl_id":null,"docs":" The tolerance to use when testing values that are close together.\n","sig":null,"attributes":[{"value":"/ The tolerance to use when testing values that are close together.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":10242,"byte_end":10311,"line_start":336,"line_end":336,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":168},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":10418,"byte_end":10426,"line_start":339,"line_end":339,"column_start":9,"column_end":17},"name":"max_ulps","qualname":"::Ulps::max_ulps","value":"u32","parent":{"krate":0,"index":164},"children":[],"decl_id":null,"docs":" The ULPs to tolerate when testing values that are far-apart.\n","sig":null,"attributes":[{"value":"/ The ULPs to tolerate when testing values that are far-apart.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":10345,"byte_end":10409,"line_start":338,"line_end":338,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":10844,"byte_end":10851,"line_start":363,"line_end":363,"column_start":12,"column_end":19},"name":"epsilon","qualname":"<Ulps<A, B>>::epsilon","value":"fn (self, epsilon: A::Epsilon) -> Ulps<A, B>","parent":null,"children":[],"decl_id":null,"docs":" Replace the epsilon value with the one specified.\n","sig":null,"attributes":[{"value":"/ Replace the epsilon value with the one specified.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":10765,"byte_end":10818,"line_start":361,"line_end":361,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":10823,"byte_end":10832,"line_start":362,"line_end":362,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":11019,"byte_end":11027,"line_start":369,"line_end":369,"column_start":12,"column_end":20},"name":"max_ulps","qualname":"<Ulps<A, B>>::max_ulps","value":"fn (self, max_ulps: u32) -> Ulps<A, B>","parent":null,"children":[],"decl_id":null,"docs":" Replace the max ulps value with the one specified.\n","sig":null,"attributes":[{"value":"/ Replace the max ulps value with the one specified.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":10939,"byte_end":10993,"line_start":367,"line_end":367,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":10998,"byte_end":11007,"line_start":368,"line_end":368,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":11170,"byte_end":11172,"line_start":375,"line_end":375,"column_start":12,"column_end":14},"name":"eq","qualname":"<Ulps<A, B>>::eq","value":"fn (self, lhs: &A, rhs: &B) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Peform the equality comparison\n","sig":null,"attributes":[{"value":"/ Peform the equality comparison","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":11110,"byte_end":11144,"line_start":373,"line_end":373,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":11149,"byte_end":11158,"line_start":374,"line_end":374,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":11338,"byte_end":11340,"line_start":381,"line_end":381,"column_start":12,"column_end":14},"name":"ne","qualname":"<Ulps<A, B>>::ne","value":"fn (self, lhs: &A, rhs: &B) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Peform the inequality comparison\n","sig":null,"attributes":[{"value":"/ Peform the inequality comparison","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":11276,"byte_end":11312,"line_start":379,"line_end":379,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":11317,"byte_end":11326,"line_start":380,"line_end":380,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/abs_diff_eq.rs","byte_start":15002,"byte_end":15006,"line_start":121,"line_end":121,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/abs_diff_eq.rs","byte_start":15345,"byte_end":15352,"line_start":135,"line_end":135,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/relative_eq.rs","byte_start":20305,"byte_end":20309,"line_start":124,"line_end":124,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/relative_eq.rs","byte_start":20707,"byte_end":20714,"line_start":141,"line_end":141,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/ulps_eq.rs","byte_start":25254,"byte_end":25258,"line_start":96,"line_end":96,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/ulps_eq.rs","byte_start":25571,"byte_end":25578,"line_start":108,"line_end":108,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":6749,"byte_end":6756,"line_start":200,"line_end":200,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":6957,"byte_end":6964,"line_start":213,"line_end":213,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":8472,"byte_end":8480,"line_start":266,"line_end":266,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":8737,"byte_end":8745,"line_start":280,"line_end":280,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":10459,"byte_end":10463,"line_start":342,"line_end":342,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":10700,"byte_end":10704,"line_start":356,"line_end":356,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/abs_diff_eq.rs","byte_start":11699,"byte_end":11708,"line_start":8,"line_end":8,"column_start":34,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":1619},"to":{"krate":0,"index":9}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/abs_diff_eq.rs","byte_start":15002,"byte_end":15006,"line_start":121,"line_end":121,"column_start":47,"column_end":51},"kind":{"Impl":{"id":0}},"from":{"krate":2,"index":2757},"to":{"krate":0,"index":9}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/abs_diff_eq.rs","byte_start":15345,"byte_end":15352,"line_start":135,"line_end":135,"column_start":49,"column_end":56},"kind":{"Impl":{"id":1}},"from":{"krate":2,"index":2814},"to":{"krate":0,"index":9}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/relative_eq.rs","byte_start":16863,"byte_end":16872,"line_start":11,"line_end":11,"column_start":35,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":9},"to":{"krate":0,"index":52}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/relative_eq.rs","byte_start":20305,"byte_end":20309,"line_start":124,"line_end":124,"column_start":49,"column_end":53},"kind":{"Impl":{"id":2}},"from":{"krate":2,"index":2757},"to":{"krate":0,"index":52}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/relative_eq.rs","byte_start":20707,"byte_end":20714,"line_start":141,"line_end":141,"column_start":51,"column_end":58},"kind":{"Impl":{"id":3}},"from":{"krate":2,"index":2814},"to":{"krate":0,"index":52}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/ulps_eq.rs","byte_start":22425,"byte_end":22434,"line_start":11,"line_end":11,"column_start":31,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":9},"to":{"krate":0,"index":87}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/ulps_eq.rs","byte_start":25254,"byte_end":25258,"line_start":96,"line_end":96,"column_start":41,"column_end":45},"kind":{"Impl":{"id":4}},"from":{"krate":2,"index":2757},"to":{"krate":0,"index":87}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/ulps_eq.rs","byte_start":25571,"byte_end":25578,"line_start":108,"line_end":108,"column_start":43,"column_end":50},"kind":{"Impl":{"id":5}},"from":{"krate":2,"index":2814},"to":{"krate":0,"index":87}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":6749,"byte_end":6756,"line_start":200,"line_end":200,"column_start":24,"column_end":31},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":134},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":6957,"byte_end":6964,"line_start":213,"line_end":213,"column_start":12,"column_end":19},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":134},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":8472,"byte_end":8480,"line_start":266,"line_end":266,"column_start":24,"column_end":32},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":148},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":8737,"byte_end":8745,"line_start":280,"line_end":280,"column_start":12,"column_end":20},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":148},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":10459,"byte_end":10463,"line_start":342,"line_end":342,"column_start":24,"column_end":28},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":10700,"byte_end":10704,"line_start":356,"line_end":356,"column_start":12,"column_end":16},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":164},"to":{"krate":4294967295,"index":4294967295}}]}