{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20","program":"/home/dapx/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","jpeg_decoder","/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"rayon\"","-C","metadata=e111aa6ca67cd7b7","-C","extra-filename=-e111aa6ca67cd7b7","--out-dir","/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps","-L","dependency=/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps","--extern","byteorder=/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps/libbyteorder-253ed1b76243e9db.rmeta","--extern","rayon=/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps/librayon-264f9378c3ce48c6.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/dapx/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps/libjpeg_decoder-e111aa6ca67cd7b7.rmeta"},"prelude":{"crate_id":{"name":"jpeg_decoder","disambiguator":[13405776218821339638,1614572785726824545]},"crate_root":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src","external_crates":[{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6528836112941390771,2028724122443642861]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14673858572786541001,1892137737928154225]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17117278319981904138,16406771668640906211]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11917984669602857069,6489053565454986112]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12362109612685904499,382626321872987168]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4151571022625212401,1888722734493896023]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4322023011642103678,14222697504055880771]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8420579222726968489,9136630199856205157]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[13745492306750544571,5475822973716876235]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14030493773096865675,2651053314204399788]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[8310449678941769819,14748581810882876583]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17983290995241619958,6056021938633518527]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2836549575564442446,8627689666430273126]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7274711288869898279,15671112109327640352]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","num":15,"id":{"name":"byteorder","disambiguator":[10719404080946289605,17148540255389135738]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","num":16,"id":{"name":"rayon","disambiguator":[8837301931256387038,276227745869652756]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","num":17,"id":{"name":"either","disambiguator":[8884923402393253072,6032429501630248164]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","num":18,"id":{"name":"rayon_core","disambiguator":[3112109727074155044,3534036274552798731]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","num":19,"id":{"name":"crossbeam_channel","disambiguator":[15693235806395740041,13675018967709397917]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","num":20,"id":{"name":"crossbeam_utils","disambiguator":[12815700305172623123,14563506393251252287]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","num":21,"id":{"name":"cfg_if","disambiguator":[905820604123660737,9080961431952796619]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","num":22,"id":{"name":"lazy_static","disambiguator":[9660684555614800310,8568331244489293542]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","num":23,"id":{"name":"maybe_uninit","disambiguator":[9925295721960399709,5075810066591430732]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","num":24,"id":{"name":"crossbeam_deque","disambiguator":[5235303285713816219,1168591414518111885]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","num":25,"id":{"name":"crossbeam_epoch","disambiguator":[17163470530562775512,8709529870593392442]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","num":26,"id":{"name":"memoffset","disambiguator":[2892690869131483658,14795605606618073579]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","num":27,"id":{"name":"scopeguard","disambiguator":[5081943333480440636,9076196664652206448]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","num":28,"id":{"name":"num_cpus","disambiguator":[5911647018467507976,7042850928943217931]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","num":29,"id":{"name":"libc","disambiguator":[7997064065336242500,8511025302220419458]}}],"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","byte_start":0,"byte_end":1170,"line_start":1,"line_end":46,"column_start":1,"column_end":12}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":54},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","byte_start":994,"byte_end":1001,"line_start":36,"line_end":36,"column_start":19,"column_end":26},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":421},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","byte_start":1003,"byte_end":1012,"line_start":36,"line_end":36,"column_start":28,"column_end":37},"alias_span":null,"name":"ImageInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":406},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","byte_start":1014,"byte_end":1025,"line_start":36,"line_end":36,"column_start":39,"column_end":50},"alias_span":null,"name":"PixelFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":456},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","byte_start":1044,"byte_end":1049,"line_start":37,"line_end":37,"column_start":17,"column_end":22},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":435},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","byte_start":1051,"byte_end":1069,"line_start":37,"line_end":37,"column_start":24,"column_end":42},"alias_span":null,"name":"UnsupportedFeature","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","byte_start":0,"byte_end":1170,"line_start":1,"line_end":46,"column_start":1,"column_end":12},"name":"","qualname":"::","value":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":119},{"krate":0,"index":131},{"krate":0,"index":186},{"krate":0,"index":233},{"krate":0,"index":239},{"krate":0,"index":291},{"krate":0,"index":335}],"decl_id":null,"docs":" This crate contains a JPEG decoder.","sig":null,"attributes":[{"value":"! This crate contains a JPEG decoder.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","byte_start":0,"byte_end":39,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","byte_start":40,"byte_end":43,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","byte_start":44,"byte_end":58,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","byte_start":59,"byte_end":62,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","byte_start":63,"byte_end":70,"line_start":5,"line_end":5,"column_start":1,"column_end":8}},{"value":"! use jpeg_decoder::Decoder;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","byte_start":71,"byte_end":101,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"! use std::fs::File;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","byte_start":102,"byte_end":124,"line_start":7,"line_end":7,"column_start":1,"column_end":23}},{"value":"! use std::io::BufReader;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","byte_start":125,"byte_end":152,"line_start":8,"line_end":8,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","byte_start":153,"byte_end":156,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! let file = File::open(\"tests/reftest/images/extraneous-data.jpg\").expect(\"failed to open file\");","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","byte_start":157,"byte_end":257,"line_start":10,"line_end":10,"column_start":1,"column_end":101}},{"value":"! let mut decoder = Decoder::new(BufReader::new(file));","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","byte_start":258,"byte_end":315,"line_start":11,"line_end":11,"column_start":1,"column_end":58}},{"value":"! let pixels = decoder.decode().expect(\"failed to decode image\");","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","byte_start":316,"byte_end":383,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"! let metadata = decoder.info().unwrap();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","byte_start":384,"byte_end":427,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"! ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","byte_start":428,"byte_end":435,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","byte_start":436,"byte_end":439,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! Get metadata from a file without decoding it:","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","byte_start":440,"byte_end":489,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","byte_start":490,"byte_end":493,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","byte_start":494,"byte_end":501,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"! use jpeg_decoder::Decoder;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","byte_start":502,"byte_end":532,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"! use std::fs::File;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","byte_start":533,"byte_end":555,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"! use std::io::BufReader;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","byte_start":556,"byte_end":583,"line_start":21,"line_end":21,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","byte_start":584,"byte_end":587,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! let file = File::open(\"tests/reftest/images/extraneous-data.jpg\").expect(\"failed to open file\");","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","byte_start":588,"byte_end":688,"line_start":23,"line_end":23,"column_start":1,"column_end":101}},{"value":"! let mut decoder = Decoder::new(BufReader::new(file));","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","byte_start":689,"byte_end":746,"line_start":24,"line_end":24,"column_start":1,"column_end":58}},{"value":"! decoder.read_info().expect(\"failed to read metadata\");","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","byte_start":747,"byte_end":805,"line_start":25,"line_end":25,"column_start":1,"column_end":59}},{"value":"! let metadata = decoder.info().unwrap();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","byte_start":806,"byte_end":849,"line_start":26,"line_end":26,"column_start":1,"column_end":44}},{"value":"! ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","byte_start":850,"byte_end":857,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"deny(missing_docs)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","byte_start":859,"byte_end":881,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"forbid(unsafe_code)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/lib.rs","byte_start":882,"byte_end":905,"line_start":30,"line_end":30,"column_start":1,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":407},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":2263,"byte_end":2265,"line_start":32,"line_end":32,"column_start":5,"column_end":7},"name":"L8","qualname":"::decoder::PixelFormat::L8","value":"PixelFormat::L8","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" Luminance (grayscale), 8 bits\n","sig":null,"attributes":[{"value":"/ Luminance (grayscale), 8 bits","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":2225,"byte_end":2258,"line_start":31,"line_end":31,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":409},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":2303,"byte_end":2308,"line_start":34,"line_end":34,"column_start":5,"column_end":10},"name":"RGB24","qualname":"::decoder::PixelFormat::RGB24","value":"PixelFormat::RGB24","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" RGB, 8 bits per channel\n","sig":null,"attributes":[{"value":"/ RGB, 8 bits per channel","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":2271,"byte_end":2298,"line_start":33,"line_end":33,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":411},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":2347,"byte_end":2353,"line_start":36,"line_end":36,"column_start":5,"column_end":11},"name":"CMYK32","qualname":"::decoder::PixelFormat::CMYK32","value":"PixelFormat::CMYK32","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" CMYK, 8 bits per channel\n","sig":null,"attributes":[{"value":"/ CMYK, 8 bits per channel","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":2314,"byte_end":2342,"line_start":35,"line_end":35,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":406},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":2207,"byte_end":2218,"line_start":30,"line_end":30,"column_start":10,"column_end":21},"name":"PixelFormat","qualname":"::decoder::PixelFormat","value":"PixelFormat::{L8, RGB24, CMYK32}","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":409},{"krate":0,"index":411}],"decl_id":null,"docs":" An enumeration over combinations of color spaces and bit depths a pixel can have.\n","sig":null,"attributes":[{"value":"/ An enumeration over combinations of color spaces and bit depths a pixel can have.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":2071,"byte_end":2156,"line_start":28,"line_end":28,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":2453,"byte_end":2464,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"name":"pixel_bytes","qualname":"<PixelFormat>::pixel_bytes","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Determine the size in bytes of each pixel in this format\n","sig":null,"attributes":[{"value":"/ Determine the size in bytes of each pixel in this format","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":2381,"byte_end":2441,"line_start":40,"line_end":40,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":421},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":2721,"byte_end":2730,"line_start":52,"line_end":52,"column_start":12,"column_end":21},"name":"ImageInfo","qualname":"::decoder::ImageInfo","value":"ImageInfo { width, height, pixel_format }","parent":null,"children":[{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424}],"decl_id":null,"docs":" Represents metadata of an image.\n","sig":null,"attributes":[{"value":"/ Represents metadata of an image.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":2632,"byte_end":2668,"line_start":50,"line_end":50,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":422},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":2784,"byte_end":2789,"line_start":54,"line_end":54,"column_start":9,"column_end":14},"name":"width","qualname":"::decoder::ImageInfo::width","value":"u16","parent":{"krate":0,"index":421},"children":[],"decl_id":null,"docs":" The width of the image, in pixels.\n","sig":null,"attributes":[{"value":"/ The width of the image, in pixels.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":2737,"byte_end":2775,"line_start":53,"line_end":53,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":423},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":2848,"byte_end":2854,"line_start":56,"line_end":56,"column_start":9,"column_end":15},"name":"height","qualname":"::decoder::ImageInfo::height","value":"u16","parent":{"krate":0,"index":421},"children":[],"decl_id":null,"docs":" The height of the image, in pixels.\n","sig":null,"attributes":[{"value":"/ The height of the image, in pixels.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":2800,"byte_end":2839,"line_start":55,"line_end":55,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":424},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":2908,"byte_end":2920,"line_start":58,"line_end":58,"column_start":9,"column_end":21},"name":"pixel_format","qualname":"::decoder::ImageInfo::pixel_format","value":"decoder::PixelFormat","parent":{"krate":0,"index":421},"children":[],"decl_id":null,"docs":" The pixel format of the image.\n","sig":null,"attributes":[{"value":"/ The pixel format of the image.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":2865,"byte_end":2899,"line_start":57,"line_end":57,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":54},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":2966,"byte_end":2973,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::decoder::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68}],"decl_id":null,"docs":" JPEG decoder\n","sig":null,"attributes":[{"value":"/ JPEG decoder","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":2938,"byte_end":2954,"line_start":61,"line_end":61,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":3581,"byte_end":3584,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder<R>>::new","value":"fn (reader: R) -> Decoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Decoder` using the reader `reader`.\n","sig":null,"attributes":[{"value":"/ Creates a new `Decoder` using the reader `reader`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":3515,"byte_end":3569,"line_start":82,"line_end":82,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":4277,"byte_end":4281,"line_start":103,"line_end":103,"column_start":12,"column_end":16},"name":"info","qualname":"<Decoder<R>>::info","value":"fn (&self) -> Option<ImageInfo>","parent":null,"children":[],"decl_id":null,"docs":" Returns metadata about the image.","sig":null,"attributes":[{"value":"/ Returns metadata about the image.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":4104,"byte_end":4141,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":4146,"byte_end":4149,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ The returned value will be `None` until a call to either `read_info` or `decode` has","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":4154,"byte_end":4242,"line_start":101,"line_end":101,"column_start":5,"column_end":93}},{"value":"/ returned `Ok`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":4247,"byte_end":4265,"line_start":102,"line_end":102,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":5053,"byte_end":5062,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"read_info","qualname":"<Decoder<R>>::read_info","value":"fn (&mut self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to read metadata from the image without decoding it.","sig":null,"attributes":[{"value":"/ Tries to read metadata from the image without decoding it.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":4894,"byte_end":4956,"line_start":123,"line_end":123,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":4961,"byte_end":4964,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ If successful, the metadata can be obtained using the `info` method.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":4969,"byte_end":5041,"line_start":125,"line_end":125,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":5652,"byte_end":5657,"line_start":139,"line_end":139,"column_start":12,"column_end":17},"name":"scale","qualname":"<Decoder<R>>::scale","value":"fn (&mut self, requested_width: u16, requested_height: u16) -> Result<(u16, u16)>","parent":null,"children":[],"decl_id":null,"docs":" Configure the decoder to scale the image during decoding.\n \n This efficiently scales the image by the smallest supported scale\n factor that produces an image larger than or equal to the requested\n size in at least one axis. The currently implemented scale factors\n are 1/8, 1/4, 1/2 and 1.\n \n To generate a thumbnail of an exact size, pass the desired size and\n then scale to the final size using a traditional resampling algorithm.\n","sig":null,"attributes":[{"value":"/ Configure the decoder to scale the image during decoding.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":5148,"byte_end":5209,"line_start":130,"line_end":130,"column_start":5,"column_end":66}},{"value":"/ ","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":5214,"byte_end":5218,"line_start":131,"line_end":131,"column_start":5,"column_end":9}},{"value":"/ This efficiently scales the image by the smallest supported scale","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":5223,"byte_end":5292,"line_start":132,"line_end":132,"column_start":5,"column_end":74}},{"value":"/ factor that produces an image larger than or equal to the requested","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":5297,"byte_end":5368,"line_start":133,"line_end":133,"column_start":5,"column_end":76}},{"value":"/ size in at least one axis. The currently implemented scale factors","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":5373,"byte_end":5443,"line_start":134,"line_end":134,"column_start":5,"column_end":75}},{"value":"/ are 1/8, 1/4, 1/2 and 1.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":5448,"byte_end":5476,"line_start":135,"line_end":135,"column_start":5,"column_end":33}},{"value":"/ ","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":5481,"byte_end":5485,"line_start":136,"line_end":136,"column_start":5,"column_end":9}},{"value":"/ To generate a thumbnail of an exact size, pass the desired size and","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":5490,"byte_end":5561,"line_start":137,"line_end":137,"column_start":5,"column_end":76}},{"value":"/ then scale to the final size using a traditional resampling algorithm.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":5566,"byte_end":5640,"line_start":138,"line_end":138,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":6149,"byte_end":6155,"line_start":148,"line_end":148,"column_start":12,"column_end":18},"name":"decode","qualname":"<Decoder<R>>::decode","value":"fn (&mut self) -> Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Decodes the image and returns the decoded pixels if successful.\n","sig":null,"attributes":[{"value":"/ Decodes the image and returns the decoded pixels if successful.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":6070,"byte_end":6137,"line_start":147,"line_end":147,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":436},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/error.rs","byte_start":42561,"byte_end":42573,"line_start":13,"line_end":13,"column_start":5,"column_end":17},"name":"Hierarchical","qualname":"::error::UnsupportedFeature::Hierarchical","value":"UnsupportedFeature::Hierarchical","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" Hierarchical JPEG.\n","sig":null,"attributes":[{"value":"/ Hierarchical JPEG.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/error.rs","byte_start":42534,"byte_end":42556,"line_start":12,"line_end":12,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":438},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/error.rs","byte_start":42602,"byte_end":42610,"line_start":15,"line_end":15,"column_start":5,"column_end":13},"name":"Lossless","qualname":"::error::UnsupportedFeature::Lossless","value":"UnsupportedFeature::Lossless","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" Lossless JPEG.\n","sig":null,"attributes":[{"value":"/ Lossless JPEG.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/error.rs","byte_start":42579,"byte_end":42597,"line_start":14,"line_end":14,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":440},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/error.rs","byte_start":42688,"byte_end":42711,"line_start":17,"line_end":17,"column_start":5,"column_end":28},"name":"ArithmeticEntropyCoding","qualname":"::error::UnsupportedFeature::ArithmeticEntropyCoding","value":"UnsupportedFeature::ArithmeticEntropyCoding","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" JPEG using arithmetic entropy coding instead of Huffman coding.\n","sig":null,"attributes":[{"value":"/ JPEG using arithmetic entropy coding instead of Huffman coding.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/error.rs","byte_start":42616,"byte_end":42683,"line_start":16,"line_end":16,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":442},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/error.rs","byte_start":42806,"byte_end":42821,"line_start":19,"line_end":19,"column_start":5,"column_end":20},"name":"SamplePrecision","qualname":"::error::UnsupportedFeature::SamplePrecision","value":"UnsupportedFeature::SamplePrecision(u8)","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" Sample precision in bits. 8 bit sample precision is what is currently supported.\n","sig":null,"attributes":[{"value":"/ Sample precision in bits. 8 bit sample precision is what is currently supported.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/error.rs","byte_start":42717,"byte_end":42801,"line_start":18,"line_end":18,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":445},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/error.rs","byte_start":42920,"byte_end":42934,"line_start":21,"line_end":21,"column_start":5,"column_end":19},"name":"ComponentCount","qualname":"::error::UnsupportedFeature::ComponentCount","value":"UnsupportedFeature::ComponentCount(u8)","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" Number of components in an image. 1, 3 and 4 components are currently supported.\n","sig":null,"attributes":[{"value":"/ Number of components in an image. 1, 3 and 4 components are currently supported.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/error.rs","byte_start":42831,"byte_end":42915,"line_start":20,"line_end":20,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":448},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/error.rs","byte_start":43136,"byte_end":43139,"line_start":24,"line_end":24,"column_start":5,"column_end":8},"name":"DNL","qualname":"::error::UnsupportedFeature::DNL","value":"UnsupportedFeature::DNL","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" An image can specify a zero height in the frame header and use the DNL (Define Number of\n Lines) marker at the end of the first scan to define the number of lines in the frame.\n","sig":null,"attributes":[{"value":"/ An image can specify a zero height in the frame header and use the DNL (Define Number of","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/error.rs","byte_start":42944,"byte_end":43036,"line_start":22,"line_end":22,"column_start":5,"column_end":97}},{"value":"/ Lines) marker at the end of the first scan to define the number of lines in the frame.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/error.rs","byte_start":43041,"byte_end":43131,"line_start":23,"line_end":23,"column_start":5,"column_end":95}}]},{"kind":"TupleVariant","id":{"krate":0,"index":450},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/error.rs","byte_start":43172,"byte_end":43188,"line_start":26,"line_end":26,"column_start":5,"column_end":21},"name":"SubsamplingRatio","qualname":"::error::UnsupportedFeature::SubsamplingRatio","value":"UnsupportedFeature::SubsamplingRatio","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" Subsampling ratio.\n","sig":null,"attributes":[{"value":"/ Subsampling ratio.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/error.rs","byte_start":43145,"byte_end":43167,"line_start":25,"line_end":25,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":452},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/error.rs","byte_start":43255,"byte_end":43281,"line_start":28,"line_end":28,"column_start":5,"column_end":31},"name":"NonIntegerSubsamplingRatio","qualname":"::error::UnsupportedFeature::NonIntegerSubsamplingRatio","value":"UnsupportedFeature::NonIntegerSubsamplingRatio","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" A subsampling ratio not representable as an integer.\n","sig":null,"attributes":[{"value":"/ A subsampling ratio not representable as an integer.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/error.rs","byte_start":43194,"byte_end":43250,"line_start":27,"line_end":27,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":435},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/error.rs","byte_start":42509,"byte_end":42527,"line_start":11,"line_end":11,"column_start":10,"column_end":28},"name":"UnsupportedFeature","qualname":"::error::UnsupportedFeature","value":"UnsupportedFeature::{Hierarchical, Lossless, ArithmeticEntropyCoding, SamplePrecision, ComponentCount, DNL, SubsamplingRatio, NonIntegerSubsamplingRatio}","parent":null,"children":[{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":440},{"krate":0,"index":442},{"krate":0,"index":445},{"krate":0,"index":448},{"krate":0,"index":450},{"krate":0,"index":452}],"decl_id":null,"docs":" An enumeration over JPEG features (currently) unsupported by this library.","sig":null,"attributes":[{"value":"/ An enumeration over JPEG features (currently) unsupported by this library.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/error.rs","byte_start":42311,"byte_end":42389,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/error.rs","byte_start":42390,"byte_end":42393,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Support for features listed here may be included in future versions of this library.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/error.rs","byte_start":42394,"byte_end":42482,"line_start":9,"line_end":9,"column_start":1,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":457},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/error.rs","byte_start":43490,"byte_end":43496,"line_start":36,"line_end":36,"column_start":5,"column_end":11},"name":"Format","qualname":"::error::Error::Format","value":"Error::Format(String)","parent":{"krate":0,"index":456},"children":[],"decl_id":null,"docs":" The image is not formatted properly. The string contains detailed information about the\n error.\n","sig":null,"attributes":[{"value":"/ The image is not formatted properly. The string contains detailed information about the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/error.rs","byte_start":43379,"byte_end":43470,"line_start":34,"line_end":34,"column_start":5,"column_end":96}},{"value":"/ error.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/error.rs","byte_start":43475,"byte_end":43485,"line_start":35,"line_end":35,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":460},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/error.rs","byte_start":43599,"byte_end":43610,"line_start":38,"line_end":38,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::error::Error::Unsupported","value":"Error::Unsupported(UnsupportedFeature)","parent":{"krate":0,"index":456},"children":[],"decl_id":null,"docs":" The image makes use of a JPEG feature not (currently) supported by this library.\n","sig":null,"attributes":[{"value":"/ The image makes use of a JPEG feature not (currently) supported by this library.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/error.rs","byte_start":43510,"byte_end":43594,"line_start":37,"line_end":37,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":463},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/error.rs","byte_start":43692,"byte_end":43694,"line_start":40,"line_end":40,"column_start":5,"column_end":7},"name":"Io","qualname":"::error::Error::Io","value":"Error::Io(IoError)","parent":{"krate":0,"index":456},"children":[],"decl_id":null,"docs":" An I/O error occurred while decoding the image.\n","sig":null,"attributes":[{"value":"/ An I/O error occurred while decoding the image.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/error.rs","byte_start":43636,"byte_end":43687,"line_start":39,"line_end":39,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":466},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/error.rs","byte_start":43770,"byte_end":43778,"line_start":42,"line_end":42,"column_start":5,"column_end":13},"name":"Internal","qualname":"::error::Error::Internal","value":"Error::Internal(Box<dyn StdError + Send + Sync + 'static>)","parent":{"krate":0,"index":456},"children":[],"decl_id":null,"docs":" An internal error occurred while decoding the image.\n","sig":null,"attributes":[{"value":"/ An internal error occurred while decoding the image.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/error.rs","byte_start":43709,"byte_end":43765,"line_start":41,"line_end":41,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":456},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/error.rs","byte_start":43367,"byte_end":43372,"line_start":33,"line_end":33,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"Error::{Format, Unsupported, Io, Internal}","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":460},{"krate":0,"index":463},{"krate":0,"index":466}],"decl_id":null,"docs":" Errors that can occur while decoding a JPEG image.\n","sig":null,"attributes":[{"value":"/ Errors that can occur while decoding a JPEG image.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/error.rs","byte_start":43286,"byte_end":43340,"line_start":31,"line_end":31,"column_start":1,"column_end":55}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":2363,"byte_end":2374,"line_start":39,"line_end":39,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":3498,"byte_end":3505,"line_start":81,"line_end":81,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":88},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/error.rs","byte_start":43908,"byte_end":43913,"line_start":45,"line_end":45,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/error.rs","byte_start":44329,"byte_end":44334,"line_start":56,"line_end":56,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/error.rs","byte_start":44583,"byte_end":44588,"line_start":66,"line_end":66,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/huffman.rs","byte_start":44941,"byte_end":44955,"line_start":17,"line_end":17,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":147},{"krate":0,"index":149},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/huffman.rs","byte_start":49700,"byte_end":49712,"line_start":187,"line_end":187,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/marker.rs","byte_start":75479,"byte_end":75485,"line_start":56,"line_end":56,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":235},{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/parser.rs","byte_start":79811,"byte_end":79820,"line_start":85,"line_end":85,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/upsampler.rs","byte_start":99112,"byte_end":99121,"line_start":16,"line_end":16,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/upsampler.rs","byte_start":103144,"byte_end":103157,"line_start":120,"line_end":120,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/upsampler.rs","byte_start":103615,"byte_end":103628,"line_start":137,"line_end":137,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/upsampler.rs","byte_start":104692,"byte_end":104705,"line_start":168,"line_end":168,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/upsampler.rs","byte_start":105583,"byte_end":105596,"line_start":191,"line_end":191,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/upsampler.rs","byte_start":106990,"byte_end":107006,"line_start":230,"line_end":230,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/worker/threaded.rs","byte_start":108731,"byte_end":108745,"line_start":17,"line_end":17,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/worker/immediate.rs","byte_start":110593,"byte_end":110608,"line_start":16,"line_end":16,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/worker/immediate.rs","byte_start":112660,"byte_end":112675,"line_start":60,"line_end":60,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":2363,"byte_end":2374,"line_start":39,"line_end":39,"column_start":6,"column_end":17},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":406},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/decoder.rs","byte_start":3498,"byte_end":3505,"line_start":81,"line_end":81,"column_start":15,"column_end":22},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":54},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/error.rs","byte_start":43908,"byte_end":43913,"line_start":45,"line_end":45,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":456},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/error.rs","byte_start":44329,"byte_end":44334,"line_start":56,"line_end":56,"column_start":19,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":456},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/error.rs","byte_start":44583,"byte_end":44588,"line_start":66,"line_end":66,"column_start":24,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":456},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/huffman.rs","byte_start":44941,"byte_end":44955,"line_start":17,"line_end":17,"column_start":6,"column_end":20},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/huffman.rs","byte_start":49700,"byte_end":49712,"line_start":187,"line_end":187,"column_start":6,"column_end":18},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/marker.rs","byte_start":75479,"byte_end":75485,"line_start":56,"line_end":56,"column_start":6,"column_end":12},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/parser.rs","byte_start":79811,"byte_end":79820,"line_start":85,"line_end":85,"column_start":6,"column_end":15},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":580},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/upsampler.rs","byte_start":99112,"byte_end":99121,"line_start":16,"line_end":16,"column_start":6,"column_end":15},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":297},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/upsampler.rs","byte_start":103144,"byte_end":103157,"line_start":120,"line_end":120,"column_start":19,"column_end":32},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":311},"to":{"krate":0,"index":323}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/upsampler.rs","byte_start":103615,"byte_end":103628,"line_start":137,"line_end":137,"column_start":19,"column_end":32},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":313},"to":{"krate":0,"index":323}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/upsampler.rs","byte_start":104692,"byte_end":104705,"line_start":168,"line_end":168,"column_start":19,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":315},"to":{"krate":0,"index":323}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/upsampler.rs","byte_start":105583,"byte_end":105596,"line_start":191,"line_end":191,"column_start":19,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":317},"to":{"krate":0,"index":323}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/upsampler.rs","byte_start":106990,"byte_end":107006,"line_start":230,"line_end":230,"column_start":19,"column_end":35},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":319},"to":{"krate":0,"index":323}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/worker/threaded.rs","byte_start":108731,"byte_end":108745,"line_start":17,"line_end":17,"column_start":17,"column_end":31},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":356},"to":{"krate":0,"index":401}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/worker/immediate.rs","byte_start":110593,"byte_end":110608,"line_start":16,"line_end":16,"column_start":6,"column_end":21},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/worker/immediate.rs","byte_start":112660,"byte_end":112675,"line_start":60,"line_end":60,"column_start":17,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":374},"to":{"krate":0,"index":401}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/jpeg-decoder-0.1.20/src/worker/mod.rs","byte_start":108165,"byte_end":108170,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":1888},"to":{"krate":0,"index":401}}]}