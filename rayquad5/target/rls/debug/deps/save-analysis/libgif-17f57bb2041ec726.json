{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1","program":"/home/dapx/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","gif","--edition=2018","/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"raii_no_panic\"","--cfg","feature=\"std\"","-C","metadata=17f57bb2041ec726","-C","extra-filename=-17f57bb2041ec726","--out-dir","/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps","-L","dependency=/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps","--extern","color_quant=/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps/libcolor_quant-64e96e2238dc506c.rmeta","--extern","weezl=/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps/libweezl-5f5f77e6aff94d89.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/dapx/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps/libgif-17f57bb2041ec726.rmeta"},"prelude":{"crate_id":{"name":"gif","disambiguator":[7578843965550989681,7630950596916290575]},"crate_root":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src","external_crates":[{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6528836112941390771,2028724122443642861]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14673858572786541001,1892137737928154225]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17117278319981904138,16406771668640906211]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11917984669602857069,6489053565454986112]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12362109612685904499,382626321872987168]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4151571022625212401,1888722734493896023]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4322023011642103678,14222697504055880771]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8420579222726968489,9136630199856205157]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[13745492306750544571,5475822973716876235]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14030493773096865675,2651053314204399788]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[8310449678941769819,14748581810882876583]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17983290995241619958,6056021938633518527]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2836549575564442446,8627689666430273126]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7274711288869898279,15671112109327640352]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","num":15,"id":{"name":"color_quant","disambiguator":[3826272445679226980,17242466669529815838]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","num":16,"id":{"name":"weezl","disambiguator":[10162027269754317538,7804571251057661068]}}],"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":0,"byte_end":4700,"line_start":1,"line_end":151,"column_start":1,"column_end":46}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":355},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":3507,"byte_end":3519,"line_start":117,"line_end":117,"column_start":25,"column_end":37},"alias_span":null,"name":"AnyExtension","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":334},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":3521,"byte_end":3526,"line_start":117,"line_end":117,"column_start":39,"column_end":44},"alias_span":null,"name":"Block","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":373},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":3528,"byte_end":3537,"line_start":117,"line_end":117,"column_start":46,"column_end":55},"alias_span":null,"name":"Extension","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":310},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":3539,"byte_end":3553,"line_start":117,"line_end":117,"column_start":57,"column_end":71},"alias_span":null,"name":"DisposalMethod","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":397},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":3555,"byte_end":3560,"line_start":117,"line_end":117,"column_start":73,"column_end":78},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":93},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":3588,"byte_end":3604,"line_start":119,"line_end":119,"column_start":25,"column_end":41},"alias_span":null,"name":"StreamingDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":439},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":3606,"byte_end":3613,"line_start":119,"line_end":119,"column_start":43,"column_end":50},"alias_span":null,"name":"Decoded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":420},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":3615,"byte_end":3628,"line_start":119,"line_end":119,"column_start":52,"column_end":65},"alias_span":null,"name":"DecodingError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":416},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":3630,"byte_end":3649,"line_start":119,"line_end":119,"column_start":67,"column_end":86},"alias_span":null,"name":"DecodingFormatError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":553},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":3722,"byte_end":3733,"line_start":121,"line_end":121,"column_start":25,"column_end":36},"alias_span":null,"name":"ColorOutput","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":568},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":3735,"byte_end":3746,"line_start":121,"line_end":121,"column_start":38,"column_end":49},"alias_span":null,"name":"MemoryLimit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":429},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":3748,"byte_end":3758,"line_start":121,"line_end":121,"column_start":51,"column_end":61},"alias_span":null,"name":"Extensions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":575},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":3785,"byte_end":3798,"line_start":122,"line_end":122,"column_start":25,"column_end":38},"alias_span":null,"name":"DecodeOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":154},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":3800,"byte_end":3807,"line_start":122,"line_end":122,"column_start":40,"column_end":47},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":264},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":3836,"byte_end":3843,"line_start":124,"line_end":124,"column_start":26,"column_end":33},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":233},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":3845,"byte_end":3858,"line_start":124,"line_end":124,"column_start":35,"column_end":48},"alias_span":null,"name":"ExtensionData","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":227},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":3860,"byte_end":3866,"line_start":124,"line_end":124,"column_start":50,"column_end":56},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":594},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":3868,"byte_end":3881,"line_start":124,"line_end":124,"column_start":58,"column_end":71},"alias_span":null,"name":"EncodingError","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":0,"byte_end":4700,"line_start":1,"line_end":151,"column_start":1,"column_end":46},"name":"","qualname":"::","value":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":20},{"krate":0,"index":45},{"krate":0,"index":195},{"krate":0,"index":286},{"krate":0,"index":292},{"krate":0,"index":297},{"krate":0,"index":301},{"krate":0,"index":304},{"krate":0,"index":309},{"krate":0,"index":603}],"decl_id":null,"docs":" # GIF en- and decoding library [![Build Status](https://travis-ci.org/image-rs/image-gif.svg?branch=master)](https://travis-ci.org/image-rs/image-gif)\n \n GIF en- and decoder written in Rust ([API Documentation](https://docs.rs/gif)).\n \n # GIF encoding and decoding library\n \n This library provides all functions necessary to de- and encode GIF files.\n \n ## High level interface\n \n The high level interface consists of the two types\n [`Encoder`](struct.Encoder.html) and [`Decoder`](struct.Decoder.html).\n \n ### Decoding GIF files\n \n ```rust\n // Open the file\n use std::fs::File;\n let mut decoder = gif::DecodeOptions::new();\n // Configure the decoder such that it will expand the image to RGBA.\n decoder.set_color_output(gif::ColorOutput::RGBA);\n // Read the file header\n let file = File::open(\"tests/samples/sample_1.gif\").unwrap();\n let mut decoder = decoder.read_info(file).unwrap();\n while let Some(frame) = decoder.read_next_frame().unwrap() {\n     // Process every frame\n }\n ```\n \n \n \n ### Encoding GIF files","sig":null,"attributes":[{"value":"! # GIF en- and decoding library [![Build Status](https://travis-ci.org/image-rs/image-gif.svg?branch=master)](https://travis-ci.org/image-rs/image-gif)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":0,"byte_end":154,"line_start":1,"line_end":1,"column_start":1,"column_end":155}},{"value":"! ","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":155,"byte_end":159,"line_start":2,"line_end":2,"column_start":1,"column_end":5}},{"value":"! GIF en- and decoder written in Rust ([API Documentation](https://docs.rs/gif)).","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":160,"byte_end":243,"line_start":3,"line_end":3,"column_start":1,"column_end":84}},{"value":"! ","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":244,"byte_end":248,"line_start":4,"line_end":4,"column_start":1,"column_end":5}},{"value":"! # GIF encoding and decoding library","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":249,"byte_end":288,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"! ","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":289,"byte_end":293,"line_start":6,"line_end":6,"column_start":1,"column_end":5}},{"value":"! This library provides all functions necessary to de- and encode GIF files.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":294,"byte_end":372,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"! ","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":373,"byte_end":377,"line_start":8,"line_end":8,"column_start":1,"column_end":5}},{"value":"! ## High level interface","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":378,"byte_end":405,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"! ","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":406,"byte_end":410,"line_start":10,"line_end":10,"column_start":1,"column_end":5}},{"value":"! The high level interface consists of the two types","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":411,"byte_end":465,"line_start":11,"line_end":11,"column_start":1,"column_end":55}},{"value":"! [`Encoder`](struct.Encoder.html) and [`Decoder`](struct.Decoder.html).","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":466,"byte_end":540,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"! ","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":541,"byte_end":545,"line_start":13,"line_end":13,"column_start":1,"column_end":5}},{"value":"! ### Decoding GIF files","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":546,"byte_end":572,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"! ","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":573,"byte_end":577,"line_start":15,"line_end":15,"column_start":1,"column_end":5}},{"value":"! ```rust","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":578,"byte_end":589,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"! // Open the file","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":590,"byte_end":610,"line_start":17,"line_end":17,"column_start":1,"column_end":21}},{"value":"! use std::fs::File;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":611,"byte_end":633,"line_start":18,"line_end":18,"column_start":1,"column_end":23}},{"value":"! let mut decoder = gif::DecodeOptions::new();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":634,"byte_end":682,"line_start":19,"line_end":19,"column_start":1,"column_end":49}},{"value":"! // Configure the decoder such that it will expand the image to RGBA.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":683,"byte_end":755,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"! decoder.set_color_output(gif::ColorOutput::RGBA);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":756,"byte_end":809,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"! // Read the file header","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":810,"byte_end":837,"line_start":22,"line_end":22,"column_start":1,"column_end":28}},{"value":"! let file = File::open(\"tests/samples/sample_1.gif\").unwrap();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":838,"byte_end":903,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"! let mut decoder = decoder.read_info(file).unwrap();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":904,"byte_end":959,"line_start":24,"line_end":24,"column_start":1,"column_end":56}},{"value":"! while let Some(frame) = decoder.read_next_frame().unwrap() {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":960,"byte_end":1024,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"!     // Process every frame","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":1025,"byte_end":1055,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"! }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":1056,"byte_end":1061,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":1062,"byte_end":1069,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"! ","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":1070,"byte_end":1074,"line_start":29,"line_end":29,"column_start":1,"column_end":5}},{"value":"! ","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":1075,"byte_end":1079,"line_start":30,"line_end":30,"column_start":1,"column_end":5}},{"value":"! ","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":1080,"byte_end":1084,"line_start":31,"line_end":31,"column_start":1,"column_end":5}},{"value":"! ### Encoding GIF files","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":1085,"byte_end":1111,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":1112,"byte_end":1115,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"! The encoder can be used so save simple computer generated images:","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":1116,"byte_end":1185,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"! ","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":1186,"byte_end":1190,"line_start":35,"line_end":35,"column_start":1,"column_end":5}},{"value":"! ```rust","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":1191,"byte_end":1202,"line_start":36,"line_end":36,"column_start":1,"column_end":12}},{"value":"! use gif::{Frame, Encoder, Repeat};","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":1203,"byte_end":1241,"line_start":37,"line_end":37,"column_start":1,"column_end":39}},{"value":"! use std::fs::File;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":1242,"byte_end":1264,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"! use std::borrow::Cow;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":1265,"byte_end":1290,"line_start":39,"line_end":39,"column_start":1,"column_end":26}},{"value":"! ","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":1291,"byte_end":1295,"line_start":40,"line_end":40,"column_start":1,"column_end":5}},{"value":"! let color_map = &[0xFF, 0xFF, 0xFF, 0, 0, 0];","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":1296,"byte_end":1345,"line_start":41,"line_end":41,"column_start":1,"column_end":50}},{"value":"! let (width, height) = (6, 6);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":1346,"byte_end":1379,"line_start":42,"line_end":42,"column_start":1,"column_end":34}},{"value":"! let mut beacon_states = [[","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":1380,"byte_end":1410,"line_start":43,"line_end":43,"column_start":1,"column_end":31}},{"value":"!     0, 0, 0, 0, 0, 0,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":1411,"byte_end":1436,"line_start":44,"line_end":44,"column_start":1,"column_end":26}},{"value":"!     0, 1, 1, 0, 0, 0,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":1437,"byte_end":1462,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"!     0, 1, 1, 0, 0, 0,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":1463,"byte_end":1488,"line_start":46,"line_end":46,"column_start":1,"column_end":26}},{"value":"!     0, 0, 0, 1, 1, 0,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":1489,"byte_end":1514,"line_start":47,"line_end":47,"column_start":1,"column_end":26}},{"value":"!     0, 0, 0, 1, 1, 0,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":1515,"byte_end":1540,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"!     0, 0, 0, 0, 0, 0,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":1541,"byte_end":1566,"line_start":49,"line_end":49,"column_start":1,"column_end":26}},{"value":"! ], [","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":1567,"byte_end":1575,"line_start":50,"line_end":50,"column_start":1,"column_end":9}},{"value":"!     0, 0, 0, 0, 0, 0,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":1576,"byte_end":1601,"line_start":51,"line_end":51,"column_start":1,"column_end":26}},{"value":"!     0, 1, 1, 0, 0, 0,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":1602,"byte_end":1627,"line_start":52,"line_end":52,"column_start":1,"column_end":26}},{"value":"!     0, 1, 0, 0, 0, 0,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":1628,"byte_end":1653,"line_start":53,"line_end":53,"column_start":1,"column_end":26}},{"value":"!     0, 0, 0, 0, 1, 0,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":1654,"byte_end":1679,"line_start":54,"line_end":54,"column_start":1,"column_end":26}},{"value":"!     0, 0, 0, 1, 1, 0,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":1680,"byte_end":1705,"line_start":55,"line_end":55,"column_start":1,"column_end":26}},{"value":"!     0, 0, 0, 0, 0, 0,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":1706,"byte_end":1731,"line_start":56,"line_end":56,"column_start":1,"column_end":26}},{"value":"! ]];","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":1732,"byte_end":1739,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"! let mut image = File::create(\"tests/samples/beacon.gif\").unwrap();;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":1740,"byte_end":1811,"line_start":58,"line_end":58,"column_start":1,"column_end":72}},{"value":"! let mut encoder = Encoder::new(&mut image, width, height, color_map).unwrap();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":1812,"byte_end":1894,"line_start":59,"line_end":59,"column_start":1,"column_end":83}},{"value":"! encoder.set_repeat(Repeat::Infinite).unwrap();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":1895,"byte_end":1945,"line_start":60,"line_end":60,"column_start":1,"column_end":51}},{"value":"! for state in &beacon_states {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":1946,"byte_end":1979,"line_start":61,"line_end":61,"column_start":1,"column_end":34}},{"value":"!     let mut frame = Frame::default();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":1980,"byte_end":2021,"line_start":62,"line_end":62,"column_start":1,"column_end":42}},{"value":"!     frame.width = width;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":2022,"byte_end":2050,"line_start":63,"line_end":63,"column_start":1,"column_end":29}},{"value":"!     frame.height = height;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":2051,"byte_end":2081,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"!     frame.buffer = Cow::Borrowed(&*state);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":2082,"byte_end":2128,"line_start":65,"line_end":65,"column_start":1,"column_end":47}},{"value":"!     encoder.write_frame(&frame).unwrap();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":2129,"byte_end":2174,"line_start":66,"line_end":66,"column_start":1,"column_end":46}},{"value":"! }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":2175,"byte_end":2180,"line_start":67,"line_end":67,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":2181,"byte_end":2188,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":2189,"byte_end":2192,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! [`Frame::from_*`](struct.Frame.html) can be used to convert a true color image to a paletted","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":2193,"byte_end":2289,"line_start":70,"line_end":70,"column_start":1,"column_end":97}},{"value":"! image with a maximum of 256 colors:","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":2290,"byte_end":2329,"line_start":71,"line_end":71,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":2330,"byte_end":2333,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":2334,"byte_end":2345,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"! use std::fs::File;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":2346,"byte_end":2368,"line_start":74,"line_end":74,"column_start":1,"column_end":23}},{"value":"! ","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":2369,"byte_end":2373,"line_start":75,"line_end":75,"column_start":1,"column_end":5}},{"value":"! // Get pixel data from some source","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":2374,"byte_end":2412,"line_start":76,"line_end":76,"column_start":1,"column_end":39}},{"value":"! let mut pixels: Vec<u8> = vec![0; 30_000];","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":2413,"byte_end":2459,"line_start":77,"line_end":77,"column_start":1,"column_end":47}},{"value":"! // Create frame from data","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":2460,"byte_end":2489,"line_start":78,"line_end":78,"column_start":1,"column_end":30}},{"value":"! let frame = gif::Frame::from_rgb(100, 100, &mut *pixels);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":2490,"byte_end":2551,"line_start":79,"line_end":79,"column_start":1,"column_end":62}},{"value":"! // Create encoder","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":2552,"byte_end":2573,"line_start":80,"line_end":80,"column_start":1,"column_end":22}},{"value":"! let mut image = File::create(\"target/indexed_color.gif\").unwrap();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":2574,"byte_end":2644,"line_start":81,"line_end":81,"column_start":1,"column_end":71}},{"value":"! let mut encoder = gif::Encoder::new(&mut image, frame.width, frame.height, &[]).unwrap();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":2645,"byte_end":2738,"line_start":82,"line_end":82,"column_start":1,"column_end":94}},{"value":"! // Write frame to file","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":2739,"byte_end":2765,"line_start":83,"line_end":83,"column_start":1,"column_end":27}},{"value":"! encoder.write_frame(&frame).unwrap();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":2766,"byte_end":2807,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"! ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":2808,"byte_end":2815,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"deny(missing_docs)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":3384,"byte_end":3406,"line_start":109,"line_end":109,"column_start":1,"column_end":23}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/lib.rs","byte_start":3407,"byte_end":3431,"line_start":110,"line_end":110,"column_start":1,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":311},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":6148,"byte_end":6151,"line_start":11,"line_end":11,"column_start":5,"column_end":8},"name":"Any","qualname":"::common::DisposalMethod::Any","value":"DisposalMethod::Any","parent":{"krate":0,"index":310},"children":[],"decl_id":null,"docs":" StreamingDecoder is not required to take any action.\n","sig":null,"attributes":[{"value":"/ StreamingDecoder is not required to take any action.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":6087,"byte_end":6143,"line_start":10,"line_end":10,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":314},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":6185,"byte_end":6189,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"Keep","qualname":"::common::DisposalMethod::Keep","value":"DisposalMethod::Keep","parent":{"krate":0,"index":310},"children":[],"decl_id":null,"docs":" Do not dispose.\n","sig":null,"attributes":[{"value":"/ Do not dispose.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":6161,"byte_end":6180,"line_start":12,"line_end":12,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":317},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":6236,"byte_end":6246,"line_start":15,"line_end":15,"column_start":5,"column_end":15},"name":"Background","qualname":"::common::DisposalMethod::Background","value":"DisposalMethod::Background","parent":{"krate":0,"index":310},"children":[],"decl_id":null,"docs":" Restore to background color.\n","sig":null,"attributes":[{"value":"/ Restore to background color.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":6199,"byte_end":6231,"line_start":14,"line_end":14,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":320},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":6285,"byte_end":6293,"line_start":17,"line_end":17,"column_start":5,"column_end":13},"name":"Previous","qualname":"::common::DisposalMethod::Previous","value":"DisposalMethod::Previous","parent":{"krate":0,"index":310},"children":[],"decl_id":null,"docs":" Restore to previous.\n","sig":null,"attributes":[{"value":"/ Restore to previous.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":6256,"byte_end":6280,"line_start":16,"line_end":16,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":310},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":6066,"byte_end":6080,"line_start":9,"line_end":9,"column_start":10,"column_end":24},"name":"DisposalMethod","qualname":"::common::DisposalMethod","value":"DisposalMethod::{Any, Keep, Background, Previous}","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":314},{"krate":0,"index":317},{"krate":0,"index":320}],"decl_id":null,"docs":" Disposal method\n","sig":null,"attributes":[{"value":"/ Disposal method","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":5980,"byte_end":5999,"line_start":6,"line_end":6,"column_start":1,"column_end":20}},{"value":"repr(u8)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":6045,"byte_end":6056,"line_start":8,"line_end":8,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":6375,"byte_end":6382,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<DisposalMethod>::from_u8","value":"fn (n: u8) -> Option<DisposalMethod>","parent":null,"children":[],"decl_id":null,"docs":" Converts `u8` to `Option<Self>`\n","sig":null,"attributes":[{"value":"/ Converts `u8` to `Option<Self>`","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":6328,"byte_end":6363,"line_start":21,"line_end":21,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":335},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":7387,"byte_end":7392,"line_start":47,"line_end":47,"column_start":5,"column_end":10},"name":"Image","qualname":"::common::Block::Image","value":"Block::Image","parent":{"krate":0,"index":334},"children":[],"decl_id":null,"docs":" Image block.\n","sig":null,"attributes":[{"value":"/ Image block.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":7366,"byte_end":7382,"line_start":46,"line_end":46,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":338},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":7430,"byte_end":7439,"line_start":49,"line_end":49,"column_start":5,"column_end":14},"name":"Extension","qualname":"::common::Block::Extension","value":"Block::Extension","parent":{"krate":0,"index":334},"children":[],"decl_id":null,"docs":" Extension block.\n","sig":null,"attributes":[{"value":"/ Extension block.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":7405,"byte_end":7425,"line_start":48,"line_end":48,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":341},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":7475,"byte_end":7482,"line_start":51,"line_end":51,"column_start":5,"column_end":12},"name":"Trailer","qualname":"::common::Block::Trailer","value":"Block::Trailer","parent":{"krate":0,"index":334},"children":[],"decl_id":null,"docs":" Image trailer.\n","sig":null,"attributes":[{"value":"/ Image trailer.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":7452,"byte_end":7470,"line_start":50,"line_end":50,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":334},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":7354,"byte_end":7359,"line_start":45,"line_end":45,"column_start":10,"column_end":15},"name":"Block","qualname":"::common::Block","value":"Block::{Image, Extension, Trailer}","parent":null,"children":[{"krate":0,"index":335},{"krate":0,"index":338},{"krate":0,"index":341}],"decl_id":null,"docs":" Known GIF block labels.","sig":null,"attributes":[{"value":"/ Known GIF block labels.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":6666,"byte_end":6693,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":6694,"byte_end":6697,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Note that the block uniquely specifies the layout of bytes that follow and how they are","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":6698,"byte_end":6789,"line_start":35,"line_end":35,"column_start":1,"column_end":92}},{"value":"/ framed. For example, the header always has a fixed length but is followed by a variable amount","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":6790,"byte_end":6888,"line_start":36,"line_end":36,"column_start":1,"column_end":99}},{"value":"/ of additional data. An image descriptor may be followed by a local color table depending on","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":6889,"byte_end":6984,"line_start":37,"line_end":37,"column_start":1,"column_end":96}},{"value":"/ information read in it. Therefore, it doesn't make sense to continue parsing after encountering","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":6985,"byte_end":7084,"line_start":38,"line_end":38,"column_start":1,"column_end":100}},{"value":"/ an unknown block as the semantics of following bytes are unclear.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":7085,"byte_end":7154,"line_start":39,"line_end":39,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":7155,"byte_end":7158,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ The extension block provides a common framing for an arbitrary amount of application specific","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":7159,"byte_end":7256,"line_start":41,"line_end":41,"column_start":1,"column_end":98}},{"value":"/ data which may be ignored.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":7257,"byte_end":7287,"line_start":42,"line_end":42,"column_start":1,"column_end":31}},{"value":"repr(u8)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":7333,"byte_end":7344,"line_start":44,"line_end":44,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":7558,"byte_end":7565,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<Block>::from_u8","value":"fn (n: u8) -> Option<Block>","parent":null,"children":[],"decl_id":null,"docs":" Converts `u8` to `Option<Self>`\n","sig":null,"attributes":[{"value":"/ Converts `u8` to `Option<Self>`","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":7511,"byte_end":7546,"line_start":55,"line_end":55,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":355},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":8337,"byte_end":8349,"line_start":75,"line_end":75,"column_start":12,"column_end":24},"name":"AnyExtension","qualname":"::common::AnyExtension","value":"","parent":null,"children":[],"decl_id":null,"docs":" A newtype wrapper around an arbitrary extension ID.","sig":null,"attributes":[{"value":"/ A newtype wrapper around an arbitrary extension ID.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":7777,"byte_end":7832,"line_start":66,"line_end":66,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":7833,"byte_end":7836,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ An extension is some amount of byte data organized in sub-blocks so that one can skip over it","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":7837,"byte_end":7934,"line_start":68,"line_end":68,"column_start":1,"column_end":98}},{"value":"/ without knowing the semantics. Though technically you likely want to use a `Application`","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":7935,"byte_end":8027,"line_start":69,"line_end":69,"column_start":1,"column_end":93}},{"value":"/ extension, the library tries to stay flexible here.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":8028,"byte_end":8083,"line_start":70,"line_end":70,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":8084,"byte_end":8087,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ This allows us to customize the set of impls compared to a raw `u8`. It also clarifies the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":8088,"byte_end":8182,"line_start":72,"line_end":72,"column_start":1,"column_end":95}},{"value":"/ intent and gives some inherent methods for interoperability with known extension types.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":8183,"byte_end":8274,"line_start":73,"line_end":73,"column_start":1,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":374},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":9046,"byte_end":9050,"line_start":91,"line_end":91,"column_start":5,"column_end":9},"name":"Text","qualname":"::common::Extension::Text","value":"Extension::Text","parent":{"krate":0,"index":373},"children":[],"decl_id":null,"docs":" Plain Text extension.","sig":null,"attributes":[{"value":"/ Plain Text extension.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":8616,"byte_end":8641,"line_start":84,"line_end":84,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":8646,"byte_end":8649,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This instructs the decoder to render a text as characters in a grid of cells, in a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":8654,"byte_end":8740,"line_start":86,"line_end":86,"column_start":5,"column_end":91}},{"value":"/ mono-spaced font of its choosing. This is seldom actually implemented and ignored by","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":8745,"byte_end":8833,"line_start":87,"line_end":87,"column_start":5,"column_end":93}},{"value":"/ ImageMagick. The color is always taken from the global table which further complicates any","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":8838,"byte_end":8932,"line_start":88,"line_end":88,"column_start":5,"column_end":99}},{"value":"/ use. No real information on the frame sequencing of this block is available in the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":8937,"byte_end":9023,"line_start":89,"line_end":89,"column_start":5,"column_end":91}},{"value":"/ standard.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":9028,"byte_end":9041,"line_start":90,"line_end":90,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":377},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":9090,"byte_end":9097,"line_start":93,"line_end":93,"column_start":5,"column_end":12},"name":"Control","qualname":"::common::Extension::Control","value":"Extension::Control","parent":{"krate":0,"index":373},"children":[],"decl_id":null,"docs":" Control extension.\n","sig":null,"attributes":[{"value":"/ Control extension.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":9063,"byte_end":9085,"line_start":92,"line_end":92,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":380},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":9137,"byte_end":9144,"line_start":95,"line_end":95,"column_start":5,"column_end":12},"name":"Comment","qualname":"::common::Extension::Comment","value":"Extension::Comment","parent":{"krate":0,"index":373},"children":[],"decl_id":null,"docs":" Comment extension.\n","sig":null,"attributes":[{"value":"/ Comment extension.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":9110,"byte_end":9132,"line_start":94,"line_end":94,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":383},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":9408,"byte_end":9419,"line_start":101,"line_end":101,"column_start":5,"column_end":16},"name":"Application","qualname":"::common::Extension::Application","value":"Extension::Application","parent":{"krate":0,"index":373},"children":[],"decl_id":null,"docs":" Application extension.","sig":null,"attributes":[{"value":"/ Application extension.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":9157,"byte_end":9183,"line_start":96,"line_end":96,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":9188,"byte_end":9191,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ See [ImageMagick] for an idea of commonly recognized extensions.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":9196,"byte_end":9264,"line_start":98,"line_end":98,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":9269,"byte_end":9272,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ [ImageMagick]: https://github.com/ImageMagick/ImageMagick/blob/b0b58c6303195928060f55f9c3ca8233ab7f7733/coders/gif.c#L1128","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":9277,"byte_end":9403,"line_start":100,"line_end":100,"column_start":5,"column_end":131}}]},{"kind":"Enum","id":{"krate":0,"index":373},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":8600,"byte_end":8609,"line_start":83,"line_end":83,"column_start":10,"column_end":19},"name":"Extension","qualname":"::common::Extension","value":"Extension::{Text, Control, Comment, Application}","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":383}],"decl_id":null,"docs":" Known GIF extension labels.","sig":null,"attributes":[{"value":"/ Known GIF extension labels.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":8360,"byte_end":8391,"line_start":77,"line_end":77,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":8392,"byte_end":8395,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ These are extensions which may be interpreted by the library and to which a specification with","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":8396,"byte_end":8494,"line_start":79,"line_end":79,"column_start":1,"column_end":99}},{"value":"/ the internal data layout is known.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":8495,"byte_end":8533,"line_start":80,"line_end":80,"column_start":1,"column_end":39}},{"value":"repr(u8)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":8579,"byte_end":8590,"line_start":82,"line_end":82,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":9509,"byte_end":9519,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"into_known","qualname":"<AnyExtension>::into_known","value":"fn (self) -> Option<Extension>","parent":null,"children":[],"decl_id":null,"docs":" Decode the label as a known extension.\n","sig":null,"attributes":[{"value":"/ Decode the label as a known extension.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":9455,"byte_end":9497,"line_start":105,"line_end":105,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":9795,"byte_end":9802,"line_start":119,"line_end":119,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<Extension>::from_u8","value":"fn (n: u8) -> Option<Extension>","parent":null,"children":[],"decl_id":null,"docs":" Converts `u8` to a `Extension` if it is known.\n","sig":null,"attributes":[{"value":"/ Converts `u8` to a `Extension` if it is known.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":9733,"byte_end":9783,"line_start":118,"line_end":118,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":397},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":10128,"byte_end":10133,"line_start":132,"line_end":132,"column_start":12,"column_end":17},"name":"Frame","qualname":"::common::Frame","value":"Frame { delay, dispose, transparent, needs_user_input, top, left, width, height, interlaced, palette, buffer }","parent":null,"children":[{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409}],"decl_id":null,"docs":" A GIF frame\n","sig":null,"attributes":[{"value":"/ A GIF frame","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":10077,"byte_end":10092,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":399},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":10188,"byte_end":10193,"line_start":134,"line_end":134,"column_start":9,"column_end":14},"name":"delay","qualname":"::common::Frame::delay","value":"u16","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" Frame delay in units of 10 ms.\n","sig":null,"attributes":[{"value":"/ Frame delay in units of 10 ms.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":10144,"byte_end":10179,"line_start":133,"line_end":133,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":400},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":10233,"byte_end":10240,"line_start":136,"line_end":136,"column_start":9,"column_end":16},"name":"dispose","qualname":"::common::Frame::dispose","value":"common::DisposalMethod","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" Disposal method.\n","sig":null,"attributes":[{"value":"/ Disposal method.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":10204,"byte_end":10224,"line_start":135,"line_end":135,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":401},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":10308,"byte_end":10319,"line_start":138,"line_end":138,"column_start":9,"column_end":20},"name":"transparent","qualname":"::common::Frame::transparent","value":"std::option::Option<u8>","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" Transparent index (if available).\n","sig":null,"attributes":[{"value":"/ Transparent index (if available).","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":10262,"byte_end":10299,"line_start":137,"line_end":137,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":402},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":10401,"byte_end":10417,"line_start":140,"line_end":140,"column_start":9,"column_end":25},"name":"needs_user_input","qualname":"::common::Frame::needs_user_input","value":"bool","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" True if the frame needs user input to be displayed.\n","sig":null,"attributes":[{"value":"/ True if the frame needs user input to be displayed.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":10337,"byte_end":10392,"line_start":139,"line_end":139,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":403},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":10483,"byte_end":10486,"line_start":142,"line_end":142,"column_start":9,"column_end":12},"name":"top","qualname":"::common::Frame::top","value":"u16","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" Offset from the top border of the canvas.\n","sig":null,"attributes":[{"value":"/ Offset from the top border of the canvas.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":10429,"byte_end":10474,"line_start":141,"line_end":141,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":404},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":10552,"byte_end":10556,"line_start":144,"line_end":144,"column_start":9,"column_end":13},"name":"left","qualname":"::common::Frame::left","value":"u16","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" Offset from the left border of the canvas.\n","sig":null,"attributes":[{"value":"/ Offset from the left border of the canvas.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":10497,"byte_end":10543,"line_start":143,"line_end":143,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":405},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":10599,"byte_end":10604,"line_start":146,"line_end":146,"column_start":9,"column_end":14},"name":"width","qualname":"::common::Frame::width","value":"u16","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" Width of the frame.\n","sig":null,"attributes":[{"value":"/ Width of the frame.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":10567,"byte_end":10590,"line_start":145,"line_end":145,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":406},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":10648,"byte_end":10654,"line_start":148,"line_end":148,"column_start":9,"column_end":15},"name":"height","qualname":"::common::Frame::height","value":"u16","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" Height of the frame.\n","sig":null,"attributes":[{"value":"/ Height of the frame.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":10615,"byte_end":10639,"line_start":147,"line_end":147,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":407},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":10710,"byte_end":10720,"line_start":150,"line_end":150,"column_start":9,"column_end":19},"name":"interlaced","qualname":"::common::Frame::interlaced","value":"bool","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" True if the image is interlaced.\n","sig":null,"attributes":[{"value":"/ True if the image is interlaced.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":10665,"byte_end":10701,"line_start":149,"line_end":149,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":408},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":10784,"byte_end":10791,"line_start":152,"line_end":152,"column_start":9,"column_end":16},"name":"palette","qualname":"::common::Frame::palette","value":"std::option::Option<std::vec::Vec<u8>>","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" Frame local color palette if available.\n","sig":null,"attributes":[{"value":"/ Frame local color palette if available.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":10732,"byte_end":10775,"line_start":151,"line_end":151,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":409},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":10912,"byte_end":10918,"line_start":155,"line_end":155,"column_start":9,"column_end":15},"name":"buffer","qualname":"::common::Frame::buffer","value":"std::borrow::Cow<'a, [u8]>","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" Buffer containing the image data.\n Only indices unless configured differently.\n","sig":null,"attributes":[{"value":"/ Buffer containing the image data.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":10814,"byte_end":10851,"line_start":153,"line_end":153,"column_start":5,"column_end":42}},{"value":"/ Only indices unless configured differently.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":10856,"byte_end":10903,"line_start":154,"line_end":154,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":11593,"byte_end":11602,"line_start":182,"line_end":182,"column_start":12,"column_end":21},"name":"from_rgba","qualname":"<Frame>::from_rgba","value":"fn (width: u16, height: u16, pixels: &mut [u8]) -> Frame<'static>","parent":null,"children":[],"decl_id":null,"docs":" Creates a frame from pixels in RGBA format.\n *Note: This method is not optimized for speed.*","sig":null,"attributes":[{"value":"/ Creates a frame from pixels in RGBA format.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":11379,"byte_end":11426,"line_start":177,"line_end":177,"column_start":5,"column_end":52}},{"value":"/ *Note: This method is not optimized for speed.*","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":11431,"byte_end":11482,"line_start":178,"line_end":178,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":11487,"byte_end":11490,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Panics:","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":11495,"byte_end":11508,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/ *   If the length of pixels does not equal `width * height * 4`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":11513,"byte_end":11581,"line_start":181,"line_end":181,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":12135,"byte_end":12150,"line_start":194,"line_end":194,"column_start":12,"column_end":27},"name":"from_rgba_speed","qualname":"<Frame>::from_rgba_speed","value":"fn (width: u16, height: u16, pixels: &mut [u8], speed: i32) -> Frame<'static>","parent":null,"children":[],"decl_id":null,"docs":" Creates a frame from pixels in RGBA format.\n `speed` is a value in the range [1, 30].\n The higher the value the faster it runs at the cost of image quality.\n A `speed` of 10 is a good compromise between speed and quality.","sig":null,"attributes":[{"value":"/ Creates a frame from pixels in RGBA format.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":11735,"byte_end":11782,"line_start":186,"line_end":186,"column_start":5,"column_end":52}},{"value":"/ `speed` is a value in the range [1, 30].","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":11787,"byte_end":11831,"line_start":187,"line_end":187,"column_start":5,"column_end":49}},{"value":"/ The higher the value the faster it runs at the cost of image quality.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":11836,"byte_end":11909,"line_start":188,"line_end":188,"column_start":5,"column_end":78}},{"value":"/ A `speed` of 10 is a good compromise between speed and quality.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":11914,"byte_end":11981,"line_start":189,"line_end":189,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":11986,"byte_end":11989,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Panics:","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":11994,"byte_end":12007,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/ *   If the length of pixels does not equal `width * height * 4`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":12012,"byte_end":12080,"line_start":192,"line_end":192,"column_start":5,"column_end":73}},{"value":"/ *   If `speed < 1` or `speed > 30`","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":12085,"byte_end":12123,"line_start":193,"line_end":193,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":13422,"byte_end":13441,"line_start":225,"line_end":225,"column_start":12,"column_end":31},"name":"from_palette_pixels","qualname":"<Frame>::from_palette_pixels","value":"fn (width: u16, height: u16, pixels: &[u8], palette: &[u8], transparent: Option<u8>) -> Frame<'static>","parent":null,"children":[],"decl_id":null,"docs":" Creates a frame from a palette and indexed pixels.","sig":null,"attributes":[{"value":"/ Creates a frame from a palette and indexed pixels.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":13211,"byte_end":13265,"line_start":220,"line_end":220,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":13270,"byte_end":13273,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Panics:","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":13278,"byte_end":13291,"line_start":222,"line_end":222,"column_start":5,"column_end":18}},{"value":"/ *   If the length of pixels does not equal `width * height`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":13296,"byte_end":13360,"line_start":223,"line_end":223,"column_start":5,"column_end":69}},{"value":"/ *   If the length of palette > `256 * 3`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":13365,"byte_end":13410,"line_start":224,"line_end":224,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":14228,"byte_end":14247,"line_start":245,"line_end":245,"column_start":12,"column_end":31},"name":"from_indexed_pixels","qualname":"<Frame>::from_indexed_pixels","value":"fn (width: u16, height: u16, pixels: &[u8], transparent: Option<u8>) -> Frame<'static>","parent":null,"children":[],"decl_id":null,"docs":" Creates a frame from indexed pixels in the global palette.","sig":null,"attributes":[{"value":"/ Creates a frame from indexed pixels in the global palette.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":14059,"byte_end":14121,"line_start":241,"line_end":241,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":14126,"byte_end":14129,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ # Panics:","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":14134,"byte_end":14147,"line_start":243,"line_end":243,"column_start":5,"column_end":18}},{"value":"/ *   If the length of pixels does not equal `width * height`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":14152,"byte_end":14216,"line_start":244,"line_end":244,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":14954,"byte_end":14962,"line_start":265,"line_end":265,"column_start":12,"column_end":20},"name":"from_rgb","qualname":"<Frame>::from_rgb","value":"fn (width: u16, height: u16, pixels: &[u8]) -> Frame<'static>","parent":null,"children":[],"decl_id":null,"docs":" Creates a frame from pixels in RGB format.\n *Note: This method is not optimized for speed.*","sig":null,"attributes":[{"value":"/ Creates a frame from pixels in RGB format.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":14741,"byte_end":14787,"line_start":260,"line_end":260,"column_start":5,"column_end":51}},{"value":"/ *Note: This method is not optimized for speed.*","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":14792,"byte_end":14843,"line_start":261,"line_end":261,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":14848,"byte_end":14851,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # Panics:","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":14856,"byte_end":14869,"line_start":263,"line_end":263,"column_start":5,"column_end":18}},{"value":"/ *   If the length of pixels does not equal `width * height * 3`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":14874,"byte_end":14942,"line_start":264,"line_end":264,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":15489,"byte_end":15503,"line_start":277,"line_end":277,"column_start":12,"column_end":26},"name":"from_rgb_speed","qualname":"<Frame>::from_rgb_speed","value":"fn (width: u16, height: u16, pixels: &[u8], speed: i32) -> Frame<'static>","parent":null,"children":[],"decl_id":null,"docs":" Creates a frame from pixels in RGB format.\n `speed` is a value in the range [1, 30].\n The higher the value the faster it runs at the cost of image quality.\n A `speed` of 10 is a good compromise between speed and quality.","sig":null,"attributes":[{"value":"/ Creates a frame from pixels in RGB format.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":15090,"byte_end":15136,"line_start":269,"line_end":269,"column_start":5,"column_end":51}},{"value":"/ `speed` is a value in the range [1, 30].","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":15141,"byte_end":15185,"line_start":270,"line_end":270,"column_start":5,"column_end":49}},{"value":"/ The higher the value the faster it runs at the cost of image quality.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":15190,"byte_end":15263,"line_start":271,"line_end":271,"column_start":5,"column_end":78}},{"value":"/ A `speed` of 10 is a good compromise between speed and quality.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":15268,"byte_end":15335,"line_start":272,"line_end":272,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":15340,"byte_end":15343,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Panics:","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":15348,"byte_end":15361,"line_start":274,"line_end":274,"column_start":5,"column_end":18}},{"value":"/ *   If the length of pixels does not equal `width * height * 3`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":15366,"byte_end":15434,"line_start":275,"line_end":275,"column_start":5,"column_end":73}},{"value":"/ *   If `speed < 1` or `speed > 30`","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":15439,"byte_end":15477,"line_start":276,"line_end":276,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":416},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":32969,"byte_end":32988,"line_start":18,"line_end":18,"column_start":12,"column_end":31},"name":"DecodingFormatError","qualname":"::reader::decoder::DecodingFormatError","value":"DecodingFormatError {  }","parent":null,"children":[{"krate":0,"index":417}],"decl_id":null,"docs":" An error returned in the case of the image not being formatted properly.\n","sig":null,"attributes":[{"value":"/ An error returned in the case of the image not being formatted properly.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":32864,"byte_end":32940,"line_start":16,"line_end":16,"column_start":1,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":421},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":33701,"byte_end":33707,"line_start":48,"line_end":48,"column_start":5,"column_end":11},"name":"Format","qualname":"::reader::decoder::DecodingError::Format","value":"DecodingError::Format(DecodingFormatError)","parent":{"krate":0,"index":420},"children":[],"decl_id":null,"docs":" Returned if the image is found to be malformed.\n","sig":null,"attributes":[{"value":"/ Returned if the image is found to be malformed.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":33645,"byte_end":33696,"line_start":47,"line_end":47,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":424},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":33766,"byte_end":33768,"line_start":50,"line_end":50,"column_start":5,"column_end":7},"name":"Io","qualname":"::reader::decoder::DecodingError::Io","value":"DecodingError::Io(io::Error)","parent":{"krate":0,"index":420},"children":[],"decl_id":null,"docs":" Wraps `std::io::Error`.\n","sig":null,"attributes":[{"value":"/ Wraps `std::io::Error`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":33734,"byte_end":33761,"line_start":49,"line_end":49,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":420},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":33625,"byte_end":33638,"line_start":46,"line_end":46,"column_start":10,"column_end":23},"name":"DecodingError","qualname":"::reader::decoder::DecodingError","value":"DecodingError::{Format, Io}","parent":null,"children":[{"krate":0,"index":421},{"krate":0,"index":424}],"decl_id":null,"docs":" Decoding error.\n","sig":null,"attributes":[{"value":"/ Decoding error.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":33596,"byte_end":33615,"line_start":45,"line_end":45,"column_start":1,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":430},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":34894,"byte_end":34898,"line_start":96,"line_end":96,"column_start":5,"column_end":9},"name":"Save","qualname":"::reader::decoder::Extensions::Save","value":"Extensions::Save","parent":{"krate":0,"index":429},"children":[],"decl_id":null,"docs":" Saves all extention data\n","sig":null,"attributes":[{"value":"/ Saves all extention data","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":34861,"byte_end":34889,"line_start":95,"line_end":95,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":432},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":34995,"byte_end":34999,"line_start":99,"line_end":99,"column_start":5,"column_end":9},"name":"Skip","qualname":"::reader::decoder::Extensions::Skip","value":"Extensions::Skip","parent":{"krate":0,"index":429},"children":[],"decl_id":null,"docs":" Skips the data of unknown extensions\n and extracts the data from known ones\n","sig":null,"attributes":[{"value":"/ Skips the data of unknown extensions","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":34904,"byte_end":34944,"line_start":97,"line_end":97,"column_start":5,"column_end":45}},{"value":"/ and extracts the data from known ones","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":34949,"byte_end":34990,"line_start":98,"line_end":98,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":429},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":34844,"byte_end":34854,"line_start":94,"line_end":94,"column_start":10,"column_end":20},"name":"Extensions","qualname":"::reader::decoder::Extensions","value":"Extensions::{Save, Skip}","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":432}],"decl_id":null,"docs":" Configures how extensions should be handled\n","sig":null,"attributes":[{"value":"/ Configures how extensions should be handled","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":34759,"byte_end":34806,"line_start":92,"line_end":92,"column_start":1,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":441},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":35128,"byte_end":35135,"line_start":106,"line_end":106,"column_start":5,"column_end":12},"name":"Nothing","qualname":"::reader::decoder::Decoded::Nothing","value":"Decoded::Nothing","parent":{"krate":0,"index":439},"children":[],"decl_id":null,"docs":" Decoded nothing.\n","sig":null,"attributes":[{"value":"/ Decoded nothing.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":35103,"byte_end":35123,"line_start":105,"line_end":105,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":443},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":35165,"byte_end":35178,"line_start":108,"line_end":108,"column_start":5,"column_end":18},"name":"GlobalPalette","qualname":"::reader::decoder::Decoded::GlobalPalette","value":"Decoded::GlobalPalette(Vec<u8>)","parent":{"krate":0,"index":439},"children":[],"decl_id":null,"docs":" Global palette.\n","sig":null,"attributes":[{"value":"/ Global palette.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":35141,"byte_end":35160,"line_start":107,"line_end":107,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":446},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":35254,"byte_end":35269,"line_start":110,"line_end":110,"column_start":5,"column_end":20},"name":"BackgroundColor","qualname":"::reader::decoder::Decoded::BackgroundColor","value":"Decoded::BackgroundColor(u8)","parent":{"krate":0,"index":439},"children":[],"decl_id":null,"docs":" Index of the background color in the global palette.\n","sig":null,"attributes":[{"value":"/ Index of the background color in the global palette.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":35193,"byte_end":35249,"line_start":109,"line_end":109,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":449},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":35314,"byte_end":35321,"line_start":112,"line_end":112,"column_start":5,"column_end":12},"name":"Trailer","qualname":"::reader::decoder::Decoded::Trailer","value":"Decoded::Trailer","parent":{"krate":0,"index":439},"children":[],"decl_id":null,"docs":" Decoded the image trailer.\n","sig":null,"attributes":[{"value":"/ Decoded the image trailer.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":35279,"byte_end":35309,"line_start":111,"line_end":111,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":451},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":35357,"byte_end":35367,"line_start":114,"line_end":114,"column_start":5,"column_end":15},"name":"BlockStart","qualname":"::reader::decoder::Decoded::BlockStart","value":"Decoded::BlockStart(Block)","parent":{"krate":0,"index":439},"children":[],"decl_id":null,"docs":" The start of a block.\n","sig":null,"attributes":[{"value":"/ The start of a block.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":35327,"byte_end":35352,"line_start":113,"line_end":113,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":454},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":35599,"byte_end":35615,"line_start":119,"line_end":119,"column_start":5,"column_end":21},"name":"SubBlockFinished","qualname":"::reader::decoder::Decoded::SubBlockFinished","value":"Decoded::SubBlockFinished(AnyExtension, &'a [u8])","parent":{"krate":0,"index":439},"children":[],"decl_id":null,"docs":" Decoded a sub-block. More sub-block are available.","sig":null,"attributes":[{"value":"/ Decoded a sub-block. More sub-block are available.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":35380,"byte_end":35434,"line_start":115,"line_end":115,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":35439,"byte_end":35442,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ Indicates the label of the extension which might be unknown. A label of `0` is used when","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":35447,"byte_end":35539,"line_start":117,"line_end":117,"column_start":5,"column_end":97}},{"value":"/ the sub block does not belong to an extension.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":35544,"byte_end":35594,"line_start":118,"line_end":118,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":458},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":35862,"byte_end":35875,"line_start":124,"line_end":124,"column_start":5,"column_end":18},"name":"BlockFinished","qualname":"::reader::decoder::Decoded::BlockFinished","value":"Decoded::BlockFinished(AnyExtension, &'a [u8])","parent":{"krate":0,"index":439},"children":[],"decl_id":null,"docs":" Decoded the last (or only) sub-block of a block.","sig":null,"attributes":[{"value":"/ Decoded the last (or only) sub-block of a block.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":35645,"byte_end":35697,"line_start":120,"line_end":120,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":35702,"byte_end":35705,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Indicates the label of the extension which might be unknown. A label of `0` is used when","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":35710,"byte_end":35802,"line_start":122,"line_end":122,"column_start":5,"column_end":97}},{"value":"/ the sub block does not belong to an extension.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":35807,"byte_end":35857,"line_start":123,"line_end":123,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":462},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":36034,"byte_end":36039,"line_start":128,"line_end":128,"column_start":5,"column_end":10},"name":"Frame","qualname":"::reader::decoder::Decoded::Frame","value":"Decoded::Frame(&'a Frame<'static>)","parent":{"krate":0,"index":439},"children":[],"decl_id":null,"docs":" Decoded all information of the next frame.","sig":null,"attributes":[{"value":"/ Decoded all information of the next frame.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":35905,"byte_end":35951,"line_start":125,"line_end":125,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":35956,"byte_end":35959,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ The returned frame does **not** contain any owned image data.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":35964,"byte_end":36029,"line_start":127,"line_end":127,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":465},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":36113,"byte_end":36117,"line_start":130,"line_end":130,"column_start":5,"column_end":9},"name":"Data","qualname":"::reader::decoder::Decoded::Data","value":"Decoded::Data(&'a [u8])","parent":{"krate":0,"index":439},"children":[],"decl_id":null,"docs":" Decoded some data of the current frame.\n","sig":null,"attributes":[{"value":"/ Decoded some data of the current frame.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":36065,"byte_end":36108,"line_start":129,"line_end":129,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":468},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":36183,"byte_end":36190,"line_start":132,"line_end":132,"column_start":5,"column_end":12},"name":"DataEnd","qualname":"::reader::decoder::Decoded::DataEnd","value":"Decoded::DataEnd","parent":{"krate":0,"index":439},"children":[],"decl_id":null,"docs":" No more data available the current frame.\n","sig":null,"attributes":[{"value":"/ No more data available the current frame.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":36133,"byte_end":36178,"line_start":131,"line_end":131,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":439},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":35085,"byte_end":35092,"line_start":104,"line_end":104,"column_start":10,"column_end":17},"name":"Decoded","qualname":"::reader::decoder::Decoded","value":"Decoded::{Nothing, GlobalPalette, BackgroundColor, Trailer, BlockStart, SubBlockFinished, BlockFinished, Frame, Data, DataEnd}","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":443},{"krate":0,"index":446},{"krate":0,"index":449},{"krate":0,"index":451},{"krate":0,"index":454},{"krate":0,"index":458},{"krate":0,"index":462},{"krate":0,"index":465},{"krate":0,"index":468}],"decl_id":null,"docs":" Indicates whether a certain object has been decoded\n","sig":null,"attributes":[{"value":"/ Indicates whether a certain object has been decoded","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":35003,"byte_end":35058,"line_start":102,"line_end":102,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":93},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":37359,"byte_end":37375,"line_start":189,"line_end":189,"column_start":12,"column_end":28},"name":"StreamingDecoder","qualname":"::reader::decoder::StreamingDecoder","value":"StreamingDecoder {  }","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":105},{"krate":0,"index":106}],"decl_id":null,"docs":" GIF decoder which supports streaming\n","sig":null,"attributes":[{"value":"/ GIF decoder which supports streaming","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":37307,"byte_end":37347,"line_start":188,"line_end":188,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":37847,"byte_end":37850,"line_start":208,"line_end":208,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamingDecoder>::new","value":"fn () -> StreamingDecoder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new streaming decoder\n","sig":null,"attributes":[{"value":"/ Creates a new streaming decoder","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":37800,"byte_end":37835,"line_start":207,"line_end":207,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":38745,"byte_end":38751,"line_start":234,"line_end":234,"column_start":12,"column_end":18},"name":"update","qualname":"<StreamingDecoder>::update","value":"fn <'a> (&'a mut self, mut buf: &[u8]) -> Result<(usize, Decoded<'a>), DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Updates the internal state of the decoder. ","sig":null,"attributes":[{"value":"/ Updates the internal state of the decoder. ","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":38572,"byte_end":38619,"line_start":230,"line_end":230,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":38624,"byte_end":38627,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes consumed from the input buffer ","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":38632,"byte_end":38695,"line_start":232,"line_end":232,"column_start":5,"column_end":68}},{"value":"/ and the last decoding result.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":38700,"byte_end":38733,"line_start":233,"line_end":233,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":40537,"byte_end":40545,"line_start":274,"line_end":274,"column_start":12,"column_end":20},"name":"last_ext","qualname":"<StreamingDecoder>::last_ext","value":"fn (&self) -> (AnyExtension, &[u8], bool)","parent":null,"children":[],"decl_id":null,"docs":" Returns the data of the last extension that has been decoded.\n","sig":null,"attributes":[{"value":"/ Returns the data of the last extension that has been decoded.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":40460,"byte_end":40525,"line_start":273,"line_end":273,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":40722,"byte_end":40739,"line_start":280,"line_end":280,"column_start":12,"column_end":29},"name":"current_frame_mut","qualname":"<StreamingDecoder>::current_frame_mut","value":"fn <'a> (&'a mut self) -> &'a mut Frame<'static>","parent":null,"children":[],"decl_id":null,"docs":" Current frame info as a mutable ref.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":40648,"byte_end":40665,"line_start":278,"line_end":278,"column_start":5,"column_end":22}},{"value":"/ Current frame info as a mutable ref.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":40670,"byte_end":40710,"line_start":279,"line_end":279,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":40906,"byte_end":40919,"line_start":286,"line_end":286,"column_start":12,"column_end":25},"name":"current_frame","qualname":"<StreamingDecoder>::current_frame","value":"fn <'a> (&'a self) -> &'a Frame<'static>","parent":null,"children":[],"decl_id":null,"docs":" Current frame info as a ref.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":40840,"byte_end":40857,"line_start":284,"line_end":284,"column_start":5,"column_end":22}},{"value":"/ Current frame info as a ref.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":40862,"byte_end":40894,"line_start":285,"line_end":285,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":41042,"byte_end":41047,"line_start":291,"line_end":291,"column_start":12,"column_end":17},"name":"width","qualname":"<StreamingDecoder>::width","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Width of the image\n","sig":null,"attributes":[{"value":"/ Width of the image","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":41008,"byte_end":41030,"line_start":290,"line_end":290,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":41129,"byte_end":41135,"line_start":296,"line_end":296,"column_start":12,"column_end":18},"name":"height","qualname":"<StreamingDecoder>::height","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Height of the image\n","sig":null,"attributes":[{"value":"/ Height of the image","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":41094,"byte_end":41117,"line_start":295,"line_end":295,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":41249,"byte_end":41263,"line_start":301,"line_end":301,"column_start":12,"column_end":26},"name":"set_extensions","qualname":"<StreamingDecoder>::set_extensions","value":"fn (&mut self, extensions: Extensions) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Configure whether extensions are saved or skipped.\n","sig":null,"attributes":[{"value":"/ Configure whether extensions are saved or skipped.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":41183,"byte_end":41237,"line_start":300,"line_end":300,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":554},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":16816,"byte_end":16820,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"name":"RGBA","qualname":"::reader::ColorOutput::RGBA","value":"ColorOutput::RGBA","parent":{"krate":0,"index":553},"children":[],"decl_id":null,"docs":" The decoder expands the image data to 32bit RGBA.\n This affects:","sig":null,"attributes":[{"value":"/ The decoder expands the image data to 32bit RGBA.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":16558,"byte_end":16611,"line_start":21,"line_end":21,"column_start":5,"column_end":58}},{"value":"/ This affects:","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":16616,"byte_end":16633,"line_start":22,"line_end":22,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":16638,"byte_end":16641,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/  - The buffer buffer of the `Frame` returned by `Decoder::read_next_frame`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":16646,"byte_end":16725,"line_start":24,"line_end":24,"column_start":5,"column_end":84}},{"value":"/  - `Decoder::fill_buffer`, `Decoder::buffer_size` and `Decoder::line_length`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":16730,"byte_end":16811,"line_start":25,"line_end":25,"column_start":5,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":557},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":16880,"byte_end":16887,"line_start":28,"line_end":28,"column_start":5,"column_end":12},"name":"Indexed","qualname":"::reader::ColorOutput::Indexed","value":"ColorOutput::Indexed","parent":{"krate":0,"index":553},"children":[],"decl_id":null,"docs":" The decoder returns the raw indexed data.\n","sig":null,"attributes":[{"value":"/ The decoder returns the raw indexed data.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":16830,"byte_end":16875,"line_start":27,"line_end":27,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":553},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":16540,"byte_end":16551,"line_start":20,"line_end":20,"column_start":10,"column_end":21},"name":"ColorOutput","qualname":"::reader::ColorOutput","value":"ColorOutput::{RGBA, Indexed}","parent":null,"children":[{"krate":0,"index":554},{"krate":0,"index":557}],"decl_id":null,"docs":" Output mode for the image data\n","sig":null,"attributes":[{"value":"/ Output mode for the image data","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":16443,"byte_end":16477,"line_start":17,"line_end":17,"column_start":1,"column_end":35}},{"value":"repr(u8)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":16519,"byte_end":16530,"line_start":19,"line_end":19,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":568},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":17026,"byte_end":17037,"line_start":34,"line_end":34,"column_start":12,"column_end":23},"name":"MemoryLimit","qualname":"::reader::MemoryLimit","value":"","parent":null,"children":[],"decl_id":null,"docs":" Memory limit in bytes. `MemoryLimit::Some(0)` means\n that there is no memory limit set.\n","sig":null,"attributes":[{"value":"/ Memory limit in bytes. `MemoryLimit::Some(0)` means","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":16920,"byte_end":16975,"line_start":32,"line_end":32,"column_start":1,"column_end":56}},{"value":"/ that there is no memory limit set.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":16976,"byte_end":17014,"line_start":33,"line_end":33,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":575},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":17598,"byte_end":17611,"line_start":55,"line_end":55,"column_start":12,"column_end":25},"name":"DecodeOptions","qualname":"::reader::DecodeOptions","value":"DecodeOptions {  }","parent":null,"children":[{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578}],"decl_id":null,"docs":" Options for opening a GIF decoder.\n","sig":null,"attributes":[{"value":"/ Options for opening a GIF decoder.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":17524,"byte_end":17562,"line_start":53,"line_end":53,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":17784,"byte_end":17787,"line_start":63,"line_end":63,"column_start":12,"column_end":15},"name":"new","qualname":"<DecodeOptions>::new","value":"fn () -> DecodeOptions","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder builder\n","sig":null,"attributes":[{"value":"/ Creates a new decoder builder","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":17739,"byte_end":17772,"line_start":62,"line_end":62,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":18058,"byte_end":18074,"line_start":72,"line_end":72,"column_start":12,"column_end":28},"name":"set_color_output","qualname":"<DecodeOptions>::set_color_output","value":"fn (&mut self, color: ColorOutput) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Configure how color data is decoded.\n","sig":null,"attributes":[{"value":"/ Configure how color data is decoded.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":18006,"byte_end":18046,"line_start":71,"line_end":71,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":18208,"byte_end":18224,"line_start":77,"line_end":77,"column_start":12,"column_end":28},"name":"set_memory_limit","qualname":"<DecodeOptions>::set_memory_limit","value":"fn (&mut self, limit: MemoryLimit) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Configure a memory limit for decoding.\n","sig":null,"attributes":[{"value":"/ Configure a memory limit for decoding.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":18154,"byte_end":18196,"line_start":76,"line_end":76,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":18871,"byte_end":18894,"line_start":91,"line_end":91,"column_start":12,"column_end":35},"name":"check_frame_consistency","qualname":"<DecodeOptions>::check_frame_consistency","value":"fn (&mut self, check: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Configure if frames must be within the screen descriptor.","sig":null,"attributes":[{"value":"/ Configure if frames must be within the screen descriptor.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":18304,"byte_end":18365,"line_start":81,"line_end":81,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":18370,"byte_end":18373,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ The default is `false`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":18378,"byte_end":18405,"line_start":83,"line_end":83,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":18410,"byte_end":18413,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ When turned on, all frame descriptors being read must fit within the screen descriptor or","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":18418,"byte_end":18511,"line_start":85,"line_end":85,"column_start":5,"column_end":98}},{"value":"/ otherwise an error is returned and the stream left in an unspecified state.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":18516,"byte_end":18595,"line_start":86,"line_end":86,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":18600,"byte_end":18603,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ When turned off, frames may be arbitrarily larger or offset in relation to the screen. Many","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":18608,"byte_end":18703,"line_start":88,"line_end":88,"column_start":5,"column_end":100}},{"value":"/ other decoder libraries handle this in highly divergent ways. This moves all checks to the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":18708,"byte_end":18802,"line_start":89,"line_end":89,"column_start":5,"column_end":99}},{"value":"/ caller, for example to emulate a specific style.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":18807,"byte_end":18859,"line_start":90,"line_end":90,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":19154,"byte_end":19163,"line_start":98,"line_end":98,"column_start":12,"column_end":21},"name":"read_info","qualname":"<DecodeOptions>::read_info","value":"fn <R> (self, r: R) -> Result<Decoder<R>, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Reads the logical screen descriptor including the global color palette","sig":null,"attributes":[{"value":"/ Reads the logical screen descriptor including the global color palette","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":18978,"byte_end":19052,"line_start":95,"line_end":95,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":19057,"byte_end":19060,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Returns a `Decoder`. All decoder configuration has to be done beforehand.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":19065,"byte_end":19142,"line_start":97,"line_end":97,"column_start":5,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":154},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":20373,"byte_end":20380,"line_start":139,"line_end":139,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::reader::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162}],"decl_id":null,"docs":" GIF decoder\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":20326,"byte_end":20345,"line_start":137,"line_end":137,"column_start":1,"column_end":20}},{"value":"/ GIF decoder","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":20346,"byte_end":20361,"line_start":138,"line_end":138,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":20702,"byte_end":20705,"line_start":151,"line_end":151,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder<R>>::new","value":"fn (reader: R) -> Result<Self, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder with default options.\n","sig":null,"attributes":[{"value":"/ Create a new decoder with default options.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":20644,"byte_end":20690,"line_start":150,"line_end":150,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":20876,"byte_end":20881,"line_start":156,"line_end":156,"column_start":12,"column_end":17},"name":"build","qualname":"<Decoder<R>>::build","value":"fn () -> DecodeOptions","parent":null,"children":[],"decl_id":null,"docs":" Return a builder that allows configuring limits etc.\n","sig":null,"attributes":[{"value":"/ Return a builder that allows configuring limits etc.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":20808,"byte_end":20864,"line_start":155,"line_end":155,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":22722,"byte_end":22737,"line_start":210,"line_end":210,"column_start":12,"column_end":27},"name":"next_frame_info","qualname":"<Decoder<R>>::next_frame_info","value":"fn (&mut self) -> Result<Option<&Frame<'static>>, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next frame info\n","sig":null,"attributes":[{"value":"/ Returns the next frame info","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":22679,"byte_end":22710,"line_start":209,"line_end":209,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":23586,"byte_end":23601,"line_start":234,"line_end":234,"column_start":12,"column_end":27},"name":"read_next_frame","qualname":"<Decoder<R>>::read_next_frame","value":"fn (&mut self) -> Result<Option<&Frame<'static>>, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Reads the next frame from the image.","sig":null,"attributes":[{"value":"/ Reads the next frame from the image.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":23437,"byte_end":23477,"line_start":230,"line_end":230,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":23482,"byte_end":23485,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Do not call `Self::next_frame_info` beforehand.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":23490,"byte_end":23541,"line_start":232,"line_end":232,"column_start":5,"column_end":56}},{"value":"/ Deinterlaces the result.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":23546,"byte_end":23574,"line_start":233,"line_end":233,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":24744,"byte_end":24760,"line_start":263,"line_end":263,"column_start":12,"column_end":28},"name":"read_into_buffer","qualname":"<Decoder<R>>::read_into_buffer","value":"fn (&mut self, buf: &mut [u8]) -> Result<(), DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Reads the data of the current frame into a pre-allocated buffer.","sig":null,"attributes":[{"value":"/ Reads the data of the current frame into a pre-allocated buffer.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":24494,"byte_end":24562,"line_start":258,"line_end":258,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":24567,"byte_end":24570,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ `Self::next_frame_info` needs to be called beforehand.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":24575,"byte_end":24633,"line_start":260,"line_end":260,"column_start":5,"column_end":63}},{"value":"/ The length of `buf` must be at least `Self::buffer_size`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":24638,"byte_end":24699,"line_start":261,"line_end":261,"column_start":5,"column_end":66}},{"value":"/ Deinterlaces the result.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":24704,"byte_end":24732,"line_start":262,"line_end":262,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":25782,"byte_end":25793,"line_start":286,"line_end":286,"column_start":12,"column_end":23},"name":"fill_buffer","qualname":"<Decoder<R>>::fill_buffer","value":"fn (&mut self, mut buf: &mut [u8]) -> Result<bool, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Reads data of the current frame into a pre-allocated buffer until the buffer has been\n filled completely.","sig":null,"attributes":[{"value":"/ Reads data of the current frame into a pre-allocated buffer until the buffer has been","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":25455,"byte_end":25544,"line_start":281,"line_end":281,"column_start":5,"column_end":94}},{"value":"/ filled completely.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":25549,"byte_end":25571,"line_start":282,"line_end":282,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":25576,"byte_end":25579,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ `Self::next_frame_info` needs to be called beforehand. Returns `true` if the supplied","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":25584,"byte_end":25673,"line_start":284,"line_end":284,"column_start":5,"column_end":94}},{"value":"/ buffer could be filled completely. Should not be called after `false` had been returned.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":25678,"byte_end":25770,"line_start":285,"line_end":285,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":28677,"byte_end":28688,"line_start":352,"line_end":352,"column_start":12,"column_end":23},"name":"buffer_size","qualname":"<Decoder<R>>::buffer_size","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Output buffer size\n","sig":null,"attributes":[{"value":"/ Output buffer size","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":28643,"byte_end":28665,"line_start":351,"line_end":351,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":28834,"byte_end":28845,"line_start":357,"line_end":357,"column_start":12,"column_end":23},"name":"line_length","qualname":"<Decoder<R>>::line_length","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Line length of the current frame\n","sig":null,"attributes":[{"value":"/ Line length of the current frame","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":28786,"byte_end":28822,"line_start":356,"line_end":356,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":29161,"byte_end":29168,"line_start":366,"line_end":366,"column_start":12,"column_end":19},"name":"palette","qualname":"<Decoder<R>>::palette","value":"fn (&self) -> Result<&[u8], DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Returns the color palette relevant for the current (next) frame\n","sig":null,"attributes":[{"value":"/ Returns the color palette relevant for the current (next) frame","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":29082,"byte_end":29149,"line_start":365,"line_end":365,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":29551,"byte_end":29565,"line_start":377,"line_end":377,"column_start":12,"column_end":26},"name":"global_palette","qualname":"<Decoder<R>>::global_palette","value":"fn (&self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" The global color palette\n","sig":null,"attributes":[{"value":"/ The global color palette","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":29511,"byte_end":29539,"line_start":376,"line_end":376,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":29688,"byte_end":29693,"line_start":382,"line_end":382,"column_start":12,"column_end":17},"name":"width","qualname":"<Decoder<R>>::width","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Width of the image\n","sig":null,"attributes":[{"value":"/ Width of the image","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":29654,"byte_end":29676,"line_start":381,"line_end":381,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":29793,"byte_end":29799,"line_start":387,"line_end":387,"column_start":12,"column_end":18},"name":"height","qualname":"<Decoder<R>>::height","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Height of the image\n","sig":null,"attributes":[{"value":"/ Height of the image","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":29758,"byte_end":29781,"line_start":386,"line_end":386,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":29932,"byte_end":29940,"line_start":392,"line_end":392,"column_start":12,"column_end":20},"name":"bg_color","qualname":"<Decoder<R>>::bg_color","value":"fn (&self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Index of the background color in the global palette\n","sig":null,"attributes":[{"value":"/ Index of the background color in the global palette","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":29865,"byte_end":29920,"line_start":391,"line_end":391,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":590},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":57206,"byte_end":57225,"line_start":23,"line_end":23,"column_start":12,"column_end":31},"name":"EncodingFormatError","qualname":"::encoder::EncodingFormatError","value":"EncodingFormatError {  }","parent":null,"children":[{"krate":0,"index":591}],"decl_id":null,"docs":" The image has incorrect properties, making it impossible to encode as a gif.\n","sig":null,"attributes":[{"value":"/ The image has incorrect properties, making it impossible to encode as a gif.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":57097,"byte_end":57177,"line_start":21,"line_end":21,"column_start":1,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":595},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":57944,"byte_end":57950,"line_start":47,"line_end":47,"column_start":5,"column_end":11},"name":"Format","qualname":"::encoder::EncodingError::Format","value":"EncodingError::Format(EncodingFormatError)","parent":{"krate":0,"index":594},"children":[],"decl_id":null,"docs":" Returned if the to image is not encodable as a gif.\n","sig":null,"attributes":[{"value":"/ Returned if the to image is not encodable as a gif.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":57884,"byte_end":57939,"line_start":46,"line_end":46,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":598},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":58009,"byte_end":58011,"line_start":49,"line_end":49,"column_start":5,"column_end":7},"name":"Io","qualname":"::encoder::EncodingError::Io","value":"EncodingError::Io(io::Error)","parent":{"krate":0,"index":594},"children":[],"decl_id":null,"docs":" Wraps `std::io::Error`.\n","sig":null,"attributes":[{"value":"/ Wraps `std::io::Error`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":57977,"byte_end":58004,"line_start":48,"line_end":48,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":594},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":57864,"byte_end":57877,"line_start":45,"line_end":45,"column_start":10,"column_end":23},"name":"EncodingError","qualname":"::encoder::EncodingError","value":"EncodingError::{Format, Io}","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":598}],"decl_id":null,"docs":" Encoding error.\n","sig":null,"attributes":[{"value":"/ Encoding error.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":57835,"byte_end":57854,"line_start":44,"line_end":44,"column_start":1,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":228},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":59010,"byte_end":59016,"line_start":92,"line_end":92,"column_start":5,"column_end":11},"name":"Finite","qualname":"::encoder::Repeat::Finite","value":"Repeat::Finite(u16)","parent":{"krate":0,"index":227},"children":[],"decl_id":null,"docs":" Finite number of repetitions\n","sig":null,"attributes":[{"value":"/ Finite number of repetitions","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":58973,"byte_end":59005,"line_start":91,"line_end":91,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":231},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":59066,"byte_end":59074,"line_start":94,"line_end":94,"column_start":5,"column_end":13},"name":"Infinite","qualname":"::encoder::Repeat::Infinite","value":"Repeat::Infinite","parent":{"krate":0,"index":227},"children":[],"decl_id":null,"docs":" Infinite number of repetitions\n","sig":null,"attributes":[{"value":"/ Infinite number of repetitions","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":59027,"byte_end":59061,"line_start":93,"line_end":93,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":227},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":58960,"byte_end":58966,"line_start":90,"line_end":90,"column_start":10,"column_end":16},"name":"Repeat","qualname":"::encoder::Repeat","value":"Repeat::{Finite, Infinite}","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":231}],"decl_id":null,"docs":" Number of repetitions\n","sig":null,"attributes":[{"value":"/ Number of repetitions","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":58925,"byte_end":58950,"line_start":89,"line_end":89,"column_start":1,"column_end":26}}]},{"kind":"StructVariant","id":{"krate":0,"index":234},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":59205,"byte_end":59212,"line_start":100,"line_end":100,"column_start":5,"column_end":12},"name":"Control","qualname":"::encoder::ExtensionData::Control","value":"ExtensionData::Control { flags, delay, trns }","parent":{"krate":0,"index":233},"children":[],"decl_id":null,"docs":" Control extension. Use `ExtensionData::new_control_ext` to construct.\n","sig":null,"attributes":[{"value":"/ Control extension. Use `ExtensionData::new_control_ext` to construct.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":59127,"byte_end":59200,"line_start":99,"line_end":99,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":238},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":59396,"byte_end":59407,"line_start":109,"line_end":109,"column_start":5,"column_end":16},"name":"Repetitions","qualname":"::encoder::ExtensionData::Repetitions","value":"ExtensionData::Repetitions(Repeat)","parent":{"krate":0,"index":233},"children":[],"decl_id":null,"docs":" Sets the number of repetitions\n","sig":null,"attributes":[{"value":"/ Sets the number of repetitions","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":59357,"byte_end":59391,"line_start":108,"line_end":108,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":233},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":59107,"byte_end":59120,"line_start":98,"line_end":98,"column_start":10,"column_end":23},"name":"ExtensionData","qualname":"::encoder::ExtensionData","value":"ExtensionData::{Control, Repetitions}","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":238}],"decl_id":null,"docs":" Extension data.\n","sig":null,"attributes":[{"value":"/ Extension data.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":59078,"byte_end":59097,"line_start":97,"line_end":97,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":59552,"byte_end":59567,"line_start":116,"line_end":116,"column_start":12,"column_end":27},"name":"new_control_ext","qualname":"<ExtensionData>::new_control_ext","value":"fn (delay: u16, dispose: DisposalMethod, needs_user_input: bool, trns: Option<u8>) -> ExtensionData","parent":null,"children":[],"decl_id":null,"docs":" Constructor for control extension data.","sig":null,"attributes":[{"value":"/ Constructor for control extension data.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":59444,"byte_end":59487,"line_start":113,"line_end":113,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":59492,"byte_end":59495,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ `delay` is given in units of 10 ms.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":59500,"byte_end":59540,"line_start":115,"line_end":115,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":264},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":61696,"byte_end":61703,"line_start":197,"line_end":197,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::encoder::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269}],"decl_id":null,"docs":" GIF encoder.\n","sig":null,"attributes":[{"value":"/ GIF encoder.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":61668,"byte_end":61684,"line_start":196,"line_end":196,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":62028,"byte_end":62031,"line_start":209,"line_end":209,"column_start":12,"column_end":15},"name":"new","qualname":"<Encoder<W>>::new","value":"fn (w: W, width: u16, height: u16, global_palette: &[u8]) -> Result<Self, EncodingError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder.","sig":null,"attributes":[{"value":"/ Creates a new encoder.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":61819,"byte_end":61845,"line_start":205,"line_end":205,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":61850,"byte_end":61853,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ `global_palette` gives the global color palette in the format `[r, g, b, ...]`,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":61858,"byte_end":61941,"line_start":207,"line_end":207,"column_start":5,"column_end":88}},{"value":"/ if no global palette shall be used an empty slice may be supplied.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":61946,"byte_end":62016,"line_start":208,"line_end":208,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":62374,"byte_end":62384,"line_start":219,"line_end":219,"column_start":12,"column_end":22},"name":"set_repeat","qualname":"<Encoder<W>>::set_repeat","value":"fn (&mut self, repeat: Repeat) -> Result<(), EncodingError>","parent":null,"children":[],"decl_id":null,"docs":" Write an extension block that signals a repeat behaviour.\n","sig":null,"attributes":[{"value":"/ Write an extension block that signals a repeat behaviour.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":62301,"byte_end":62362,"line_start":218,"line_end":218,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":62567,"byte_end":62587,"line_start":224,"line_end":224,"column_start":12,"column_end":32},"name":"write_global_palette","qualname":"<Encoder<W>>::write_global_palette","value":"fn (mut self, palette: &[u8]) -> Result<Self, EncodingError>","parent":null,"children":[],"decl_id":null,"docs":" Writes the global color palette.\n","sig":null,"attributes":[{"value":"/ Writes the global color palette.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":62519,"byte_end":62555,"line_start":223,"line_end":223,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":63449,"byte_end":63460,"line_start":245,"line_end":245,"column_start":12,"column_end":23},"name":"write_frame","qualname":"<Encoder<W>>::write_frame","value":"fn (&mut self, frame: &Frame) -> Result<(), EncodingError>","parent":null,"children":[],"decl_id":null,"docs":" Writes a frame to the image.","sig":null,"attributes":[{"value":"/ Writes a frame to the image.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":63323,"byte_end":63355,"line_start":242,"line_end":242,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":63360,"byte_end":63363,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ Note: This function also writes a control extension if necessary.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":63368,"byte_end":63437,"line_start":244,"line_end":244,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":66141,"byte_end":66156,"line_start":316,"line_end":316,"column_start":12,"column_end":27},"name":"write_extension","qualname":"<Encoder<W>>::write_extension","value":"fn (&mut self, extension: ExtensionData) -> Result<(), EncodingError>","parent":null,"children":[],"decl_id":null,"docs":" Writes an extension to the image.","sig":null,"attributes":[{"value":"/ Writes an extension to the image.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":66017,"byte_end":66054,"line_start":313,"line_end":313,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":66059,"byte_end":66062,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ It is normally not necessary to call this method manually.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":66067,"byte_end":66129,"line_start":315,"line_end":315,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":67716,"byte_end":67735,"line_start":352,"line_end":352,"column_start":12,"column_end":31},"name":"write_raw_extension","qualname":"<Encoder<W>>::write_raw_extension","value":"fn (&mut self, func: AnyExtension, data: &[&[u8]]) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes a raw extension to the image.","sig":null,"attributes":[{"value":"/ Writes a raw extension to the image.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":67357,"byte_end":67397,"line_start":347,"line_end":347,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":67402,"byte_end":67405,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ This method can be used to write an unsupported extension to the file. `func` is the extension","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":67410,"byte_end":67508,"line_start":349,"line_end":349,"column_start":5,"column_end":103}},{"value":"/ identifier (e.g. `Extension::Application as u8`). `data` are the extension payload blocks. If any","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":67513,"byte_end":67614,"line_start":350,"line_end":350,"column_start":5,"column_end":106}},{"value":"/ contained slice has a lenght > 255 it is automatically divided into sub-blocks.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":67619,"byte_end":67704,"line_start":351,"line_end":351,"column_start":5,"column_end":88}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/traits.rs","byte_start":5137,"byte_end":5138,"line_start":17,"line_end":17,"column_start":51,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":10}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/traits.rs","byte_start":5307,"byte_end":5308,"line_start":25,"line_end":25,"column_start":52,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":13}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/traits.rs","byte_start":5498,"byte_end":5499,"line_start":33,"line_end":33,"column_start":52,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":16}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/traits.rs","byte_start":5714,"byte_end":5715,"line_start":42,"line_end":42,"column_start":52,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":6307,"byte_end":6321,"line_start":20,"line_end":20,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":7499,"byte_end":7504,"line_start":54,"line_end":54,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":9436,"byte_end":9448,"line_start":104,"line_end":104,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":9618,"byte_end":9630,"line_start":111,"line_end":111,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":9717,"byte_end":9726,"line_start":117,"line_end":117,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":10958,"byte_end":10963,"line_start":158,"line_end":158,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":11358,"byte_end":11363,"line_start":176,"line_end":176,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":33078,"byte_end":33097,"line_start":22,"line_end":22,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":33246,"byte_end":33265,"line_start":28,"line_end":28,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":33383,"byte_end":33402,"line_start":34,"line_end":34,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":33789,"byte_end":33802,"line_start":53,"line_end":53,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":34014,"byte_end":34027,"line_start":62,"line_end":62,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":34266,"byte_end":34279,"line_start":71,"line_end":71,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":34522,"byte_end":34535,"line_start":80,"line_end":80,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":34651,"byte_end":34664,"line_start":86,"line_end":86,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":37777,"byte_end":37793,"line_start":206,"line_end":206,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":111},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":17054,"byte_end":17065,"line_start":36,"line_end":36,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":17719,"byte_end":17732,"line_start":61,"line_end":61,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":19443,"byte_end":19454,"line_start":109,"line_end":109,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":20613,"byte_end":20620,"line_start":149,"line_end":149,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":30121,"byte_end":30138,"line_start":403,"line_end":403,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":57279,"byte_end":57298,"line_start":27,"line_end":27,"column_start":23,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":57324,"byte_end":57343,"line_start":28,"line_end":28,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":57705,"byte_end":57724,"line_start":37,"line_end":37,"column_start":32,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":58049,"byte_end":58062,"line_start":52,"line_end":52,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":58296,"byte_end":58309,"line_start":61,"line_end":61,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":58543,"byte_end":58556,"line_start":70,"line_end":70,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":58672,"byte_end":58685,"line_start":76,"line_end":76,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":58811,"byte_end":58824,"line_start":82,"line_end":82,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":59424,"byte_end":59437,"line_start":112,"line_end":112,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":60221,"byte_end":60232,"line_start":143,"line_end":143,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":60433,"byte_end":60444,"line_start":153,"line_end":153,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":61185,"byte_end":61196,"line_start":177,"line_end":177,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":61802,"byte_end":61809,"line_start":204,"line_end":204,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":280},{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":68512,"byte_end":68519,"line_start":375,"line_end":375,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/traits.rs","byte_start":5137,"byte_end":5138,"line_start":17,"line_end":17,"column_start":51,"column_end":52},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":9},"to":{"krate":0,"index":5}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/traits.rs","byte_start":5307,"byte_end":5308,"line_start":25,"line_end":25,"column_start":52,"column_end":53},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":12},"to":{"krate":0,"index":5}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/traits.rs","byte_start":5498,"byte_end":5499,"line_start":33,"line_end":33,"column_start":52,"column_end":53},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":15},"to":{"krate":0,"index":5}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/traits.rs","byte_start":5714,"byte_end":5715,"line_start":42,"line_end":42,"column_start":52,"column_end":53},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":18},"to":{"krate":0,"index":5}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":6307,"byte_end":6321,"line_start":20,"line_end":20,"column_start":6,"column_end":20},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":310},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":7499,"byte_end":7504,"line_start":54,"line_end":54,"column_start":6,"column_end":11},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":9436,"byte_end":9448,"line_start":104,"line_end":104,"column_start":6,"column_end":18},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":9618,"byte_end":9630,"line_start":111,"line_end":111,"column_start":26,"column_end":38},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":355},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":9717,"byte_end":9726,"line_start":117,"line_end":117,"column_start":6,"column_end":15},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":10958,"byte_end":10963,"line_start":158,"line_end":158,"column_start":22,"column_end":27},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":397},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/common.rs","byte_start":11358,"byte_end":11363,"line_start":176,"line_end":176,"column_start":6,"column_end":11},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":33078,"byte_end":33097,"line_start":22,"line_end":22,"column_start":23,"column_end":42},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":416},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":33246,"byte_end":33265,"line_start":28,"line_end":28,"column_start":23,"column_end":42},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":416},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":33383,"byte_end":33402,"line_start":34,"line_end":34,"column_start":6,"column_end":25},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":33789,"byte_end":33802,"line_start":53,"line_end":53,"column_start":6,"column_end":19},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":34014,"byte_end":34027,"line_start":62,"line_end":62,"column_start":23,"column_end":36},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":420},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":34266,"byte_end":34279,"line_start":71,"line_end":71,"column_start":23,"column_end":36},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":420},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":34522,"byte_end":34535,"line_start":80,"line_end":80,"column_start":26,"column_end":39},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":420},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":34651,"byte_end":34664,"line_start":86,"line_end":86,"column_start":36,"column_end":49},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":420},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/decoder.rs","byte_start":37777,"byte_end":37793,"line_start":206,"line_end":206,"column_start":6,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":93},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":17054,"byte_end":17065,"line_start":36,"line_end":36,"column_start":6,"column_end":17},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":17719,"byte_end":17732,"line_start":61,"line_end":61,"column_start":6,"column_end":19},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":19443,"byte_end":19454,"line_start":109,"line_end":109,"column_start":15,"column_end":26},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":146},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":20613,"byte_end":20620,"line_start":149,"line_end":149,"column_start":9,"column_end":16},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/reader/mod.rs","byte_start":30121,"byte_end":30138,"line_start":403,"line_end":403,"column_start":25,"column_end":42},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":188},"to":{"krate":2,"index":4773}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":57279,"byte_end":57298,"line_start":27,"line_end":27,"column_start":23,"column_end":42},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":590},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":57324,"byte_end":57343,"line_start":28,"line_end":28,"column_start":23,"column_end":42},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":590},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":57705,"byte_end":57724,"line_start":37,"line_end":37,"column_start":32,"column_end":51},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":590},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":58049,"byte_end":58062,"line_start":52,"line_end":52,"column_start":23,"column_end":36},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":594},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":58296,"byte_end":58309,"line_start":61,"line_end":61,"column_start":23,"column_end":36},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":594},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":58543,"byte_end":58556,"line_start":70,"line_end":70,"column_start":26,"column_end":39},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":594},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":58672,"byte_end":58685,"line_start":76,"line_end":76,"column_start":36,"column_end":49},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":594},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":58811,"byte_end":58824,"line_start":82,"line_end":82,"column_start":32,"column_end":45},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":594},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":59424,"byte_end":59437,"line_start":112,"line_end":112,"column_start":6,"column_end":19},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":60221,"byte_end":60232,"line_start":143,"line_end":143,"column_start":25,"column_end":36},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":243},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":60433,"byte_end":60444,"line_start":153,"line_end":153,"column_start":35,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":243},"to":{"krate":1,"index":2915}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":61185,"byte_end":61196,"line_start":177,"line_end":177,"column_start":34,"column_end":45},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":243},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":61802,"byte_end":61809,"line_start":204,"line_end":204,"column_start":16,"column_end":23},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":264},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.1/src/encoder.rs","byte_start":68512,"byte_end":68519,"line_start":375,"line_end":375,"column_start":25,"column_end":32},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":264},"to":{"krate":2,"index":2076}}]}