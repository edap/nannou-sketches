{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6","program":"/home/dapx/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","wayland_scanner","/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata,link","-C","debuginfo=2","-C","metadata=3eed9106f3587a81","-C","extra-filename=-3eed9106f3587a81","--out-dir","/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps","-L","dependency=/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps","--extern","proc_macro2=/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps/libproc_macro2-e2ce5bf6467d2e87.rmeta","--extern","quote=/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps/libquote-4e673c12be0852f4.rmeta","--extern","xml=/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps/libxml-e703c8727b714971.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/dapx/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps/libwayland_scanner-3eed9106f3587a81.rmeta"},"prelude":{"crate_id":{"name":"wayland_scanner","disambiguator":[14745561236883621382,965934700431408769]},"crate_root":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src","external_crates":[{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6528836112941390771,2028724122443642861]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14673858572786541001,1892137737928154225]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17117278319981904138,16406771668640906211]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11917984669602857069,6489053565454986112]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12362109612685904499,382626321872987168]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4151571022625212401,1888722734493896023]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4322023011642103678,14222697504055880771]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8420579222726968489,9136630199856205157]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[13745492306750544571,5475822973716876235]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14030493773096865675,2651053314204399788]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[8310449678941769819,14748581810882876583]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17983290995241619958,6056021938633518527]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2836549575564442446,8627689666430273126]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7274711288869898279,15671112109327640352]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","num":15,"id":{"name":"proc_macro2","disambiguator":[15518706186266923136,17972149307814210760]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","num":16,"id":{"name":"proc_macro","disambiguator":[2699317272559757935,17629046899940713935]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","num":17,"id":{"name":"unicode_xid","disambiguator":[1008473627426486946,8973248340066776349]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","num":18,"id":{"name":"quote","disambiguator":[3227226663682528994,15958668324531757487]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","num":19,"id":{"name":"xml","disambiguator":[14189426644880095530,15783793377178517560]}}],"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":0,"byte_end":6977,"line_start":1,"line_end":204,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":299},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":3350,"byte_end":3354,"line_start":102,"line_end":102,"column_start":15,"column_end":19},"alias_span":null,"name":"Side","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":0,"byte_end":6977,"line_start":1,"line_end":204,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":38},{"krate":0,"index":58},{"krate":0,"index":118},{"krate":0,"index":146},{"krate":0,"index":166},{"krate":0,"index":175},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":203}],"decl_id":null,"docs":" Wayland scanner crate","sig":null,"attributes":[{"value":"! Wayland scanner crate","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":26,"byte_end":29,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":30,"byte_end":33,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! This crate is a rust equivalent of the wayland-scanner tool from the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":34,"byte_end":106,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"! official wayland C library.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":107,"byte_end":138,"line_start":5,"line_end":5,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":139,"byte_end":142,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! You can use in your build script to generate the rust code for any","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":143,"byte_end":213,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"! wayland protocol file, to use alongside the `wayland_client` and","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":214,"byte_end":282,"line_start":8,"line_end":8,"column_start":1,"column_end":69}},{"value":"! `wayland_server` crate to build your applications.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":283,"byte_end":337,"line_start":9,"line_end":9,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":338,"byte_end":341,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! ## How to use this crate","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":342,"byte_end":370,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":371,"byte_end":374,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! This crate is to be used in a build script. It provides the function `generate_code`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":375,"byte_end":464,"line_start":13,"line_end":13,"column_start":1,"column_end":90}},{"value":"! It'll allow you to generate the code to use with the `wayland_client` or","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":465,"byte_end":541,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"! `wayland_server` crates for any XML wayland protocol file (NB: you don't","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":542,"byte_end":618,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"! need to do it for the core protocol, which is already included in both crates).","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":619,"byte_end":702,"line_start":16,"line_end":16,"column_start":1,"column_end":84}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":703,"byte_end":706,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! First, have the XML files you want to use in your project, somewhere the build script","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":707,"byte_end":796,"line_start":18,"line_end":18,"column_start":1,"column_end":90}},{"value":"! will be able to read them.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":797,"byte_end":827,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":828,"byte_end":831,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! Then, you'll need to invoke both `generate_c_interfaces` *and* `generate_c_code` for","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":832,"byte_end":920,"line_start":21,"line_end":21,"column_start":1,"column_end":89}},{"value":"! each of these files.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":921,"byte_end":945,"line_start":22,"line_end":22,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":946,"byte_end":949,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! A sample build script:","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":950,"byte_end":976,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":977,"byte_end":980,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":981,"byte_end":994,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"! extern crate wayland_scanner;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":995,"byte_end":1028,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":1029,"byte_end":1032,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! use std::env::var;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":1033,"byte_end":1055,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"! use std::path::Path;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":1056,"byte_end":1080,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":1081,"byte_end":1084,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! use wayland_scanner::{Side, generate_code};","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":1085,"byte_end":1132,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":1133,"byte_end":1136,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"! fn main() {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":1137,"byte_end":1152,"line_start":34,"line_end":34,"column_start":1,"column_end":16}},{"value":"!     // Location of the xml file, relative to the `Cargo.toml`","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":1153,"byte_end":1218,"line_start":35,"line_end":35,"column_start":1,"column_end":66}},{"value":"!     let protocol_file = \"./my_protocol.xml\";","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":1219,"byte_end":1267,"line_start":36,"line_end":36,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":1268,"byte_end":1271,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"!     // Target directory for the generate files","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":1272,"byte_end":1322,"line_start":38,"line_end":38,"column_start":1,"column_end":51}},{"value":"!     let out_dir_str = var(\"OUT_DIR\").unwrap();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":1323,"byte_end":1373,"line_start":39,"line_end":39,"column_start":1,"column_end":51}},{"value":"!     let out_dir = Path::new(&out_dir_str);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":1374,"byte_end":1420,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":1421,"byte_end":1424,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"!     generate_code(","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":1425,"byte_end":1447,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"!         protocol_file,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":1448,"byte_end":1474,"line_start":43,"line_end":43,"column_start":1,"column_end":27}},{"value":"!         out_dir.join(\"my_protocol_api.rs\"),","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":1475,"byte_end":1522,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"!         Side::Client, // Replace by `Side::Server` for server-side code","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":1523,"byte_end":1598,"line_start":45,"line_end":45,"column_start":1,"column_end":76}},{"value":"!     );","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":1599,"byte_end":1609,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"! }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":1610,"byte_end":1615,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":1616,"byte_end":1623,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":1624,"byte_end":1627,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"! The above example will output two `.rs` files in the `OUT_DIR` defined by","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":1628,"byte_end":1705,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"! cargo. Then, you'll need to include these two generated files (using the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":1706,"byte_end":1782,"line_start":51,"line_end":51,"column_start":1,"column_end":77}},{"value":"! macro of the same name) to make this code available in your crate.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":1783,"byte_end":1853,"line_start":52,"line_end":52,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":1854,"byte_end":1857,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"! ```ignore","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":1858,"byte_end":1871,"line_start":54,"line_end":54,"column_start":1,"column_end":14}},{"value":"! // The generated code will import stuff from wayland_sys","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":1872,"byte_end":1932,"line_start":55,"line_end":55,"column_start":1,"column_end":61}},{"value":"! extern crate wayland_sys;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":1933,"byte_end":1962,"line_start":56,"line_end":56,"column_start":1,"column_end":30}},{"value":"! extern crate wayland_client;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":1963,"byte_end":1995,"line_start":57,"line_end":57,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":1996,"byte_end":1999,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! // Re-export only the actual code, and then only use this re-export","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":2000,"byte_end":2071,"line_start":59,"line_end":59,"column_start":1,"column_end":72}},{"value":"! // The `generated` module below is just some boilerplate to properly isolate stuff","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":2072,"byte_end":2158,"line_start":60,"line_end":60,"column_start":1,"column_end":87}},{"value":"! // and avoid exposing internal details.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":2159,"byte_end":2202,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"! //","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":2203,"byte_end":2209,"line_start":62,"line_end":62,"column_start":1,"column_end":7}},{"value":"! // You can use all the types from my_protocol as if they went from `wayland_client::protocol`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":2210,"byte_end":2308,"line_start":63,"line_end":63,"column_start":1,"column_end":99}},{"value":"! pub use generated::client as my_protocol;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":2309,"byte_end":2354,"line_start":64,"line_end":64,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":2355,"byte_end":2358,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! mod generated {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":2359,"byte_end":2378,"line_start":66,"line_end":66,"column_start":1,"column_end":20}},{"value":"!     // The generated code tends to trigger a lot of warnings","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":2379,"byte_end":2443,"line_start":67,"line_end":67,"column_start":1,"column_end":65}},{"value":"!     // so we isolate it into a very permissive module","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":2444,"byte_end":2501,"line_start":68,"line_end":68,"column_start":1,"column_end":58}},{"value":"!     #![allow(dead_code,non_camel_case_types,unused_unsafe,unused_variables)]","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":2502,"byte_end":2582,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"!     #![allow(non_upper_case_globals,non_snake_case,unused_imports)]","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":2583,"byte_end":2654,"line_start":70,"line_end":70,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":2655,"byte_end":2658,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"!     pub mod client {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":2659,"byte_end":2683,"line_start":72,"line_end":72,"column_start":1,"column_end":25}},{"value":"!         // If you protocol interacts with objects from other protocols, you'll need to import","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":2684,"byte_end":2781,"line_start":73,"line_end":73,"column_start":1,"column_end":98}},{"value":"!         // their modules, like so:","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":2782,"byte_end":2820,"line_start":74,"line_end":74,"column_start":1,"column_end":39}},{"value":"!         pub(crate) use wayland_client::protocol::{wl_surface, wl_region};","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":2821,"byte_end":2898,"line_start":75,"line_end":75,"column_start":1,"column_end":78}},{"value":"!         include!(concat!(env!(\"OUT_DIR\"), \"/my_protocol_code.rs\"));","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":2899,"byte_end":2970,"line_start":76,"line_end":76,"column_start":1,"column_end":72}},{"value":"!     }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":2971,"byte_end":2980,"line_start":77,"line_end":77,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":2981,"byte_end":2986,"line_start":78,"line_end":78,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":2987,"byte_end":2994,"line_start":79,"line_end":79,"column_start":1,"column_end":8}},{"value":"recursion_limit = \"128\"","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":2996,"byte_end":3023,"line_start":81,"line_end":81,"column_start":1,"column_end":28}},{"value":"warn(missing_docs)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":3024,"byte_end":3046,"line_start":82,"line_end":82,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":300},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/side.rs","byte_start":87536,"byte_end":87542,"line_start":12,"line_end":12,"column_start":5,"column_end":11},"name":"Client","qualname":"::side::Side::Client","value":"Side::Client","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" wayland client applications\n","sig":null,"attributes":[{"value":"/ wayland client applications","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/side.rs","byte_start":87500,"byte_end":87531,"line_start":11,"line_end":11,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":302},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/side.rs","byte_start":87576,"byte_end":87582,"line_start":14,"line_end":14,"column_start":5,"column_end":11},"name":"Server","qualname":"::side::Side::Server","value":"Side::Server","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" wayland compositors\n","sig":null,"attributes":[{"value":"/ wayland compositors","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/side.rs","byte_start":87548,"byte_end":87571,"line_start":13,"line_end":13,"column_start":5,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":299},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/side.rs","byte_start":87489,"byte_end":87493,"line_start":10,"line_end":10,"column_start":10,"column_end":14},"name":"Side","qualname":"::side::Side","value":"Side::{Client, Server}","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":302}],"decl_id":null,"docs":" Side to generate","sig":null,"attributes":[{"value":"/ Side to generate","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/side.rs","byte_start":87315,"byte_end":87335,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/side.rs","byte_start":87336,"byte_end":87339,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This enum represents the two possible sides of","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/side.rs","byte_start":87340,"byte_end":87390,"line_start":7,"line_end":7,"column_start":1,"column_end":51}},{"value":"/ the protocol API that can be generated.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/side.rs","byte_start":87391,"byte_end":87434,"line_start":8,"line_end":8,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":194},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":3996,"byte_end":4009,"line_start":120,"line_end":120,"column_start":8,"column_end":21},"name":"generate_code","qualname":"::generate_code","value":"fn <P1, P2> (prot: P1, target: P2, side: Side) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Generate the code for a protocol using the C system libs","sig":null,"attributes":[{"value":"/ Generate the code for a protocol using the C system libs","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":3594,"byte_end":3654,"line_start":110,"line_end":110,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":3655,"byte_end":3658,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ See this crate toplevel documentation for details.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":3659,"byte_end":3713,"line_start":112,"line_end":112,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":3714,"byte_end":3717,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Args:","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":3718,"byte_end":3727,"line_start":114,"line_end":114,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":3728,"byte_end":3731,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ - `protocol`: a path to the XML file describing the protocol, absolute or relative to","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":3732,"byte_end":3821,"line_start":116,"line_end":116,"column_start":1,"column_end":90}},{"value":"/   the build script using this function.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":3822,"byte_end":3865,"line_start":117,"line_end":117,"column_start":1,"column_end":44}},{"value":"/ - `target`: the path of the file to store the code in.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":3866,"byte_end":3924,"line_start":118,"line_end":118,"column_start":1,"column_end":59}},{"value":"/ - `side`: the side (client or server) to generate code for.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":3925,"byte_end":3988,"line_start":119,"line_end":119,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":197},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":4450,"byte_end":4486,"line_start":129,"line_end":129,"column_start":8,"column_end":44},"name":"generate_code_with_destructor_events","qualname":"::generate_code_with_destructor_events","value":"fn <P1, P2> (prot: P1, target: P2, side: Side, events: &[(&str, &str)]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Generate the code for a protocol with aditionnal destructor events","sig":null,"attributes":[{"value":"/ Generate the code for a protocol with aditionnal destructor events","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":4150,"byte_end":4220,"line_start":124,"line_end":124,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":4221,"byte_end":4224,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ Same as `generate_code`, but allows you to additionnaly specify some events","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":4225,"byte_end":4304,"line_start":126,"line_end":126,"column_start":1,"column_end":80}},{"value":"/ (in the format `(\"interface_name\", \"event_name\")`) as being destructor, as this","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":4305,"byte_end":4388,"line_start":127,"line_end":127,"column_start":1,"column_end":84}},{"value":"/ information is not encoded in the protocol files.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":4389,"byte_end":4442,"line_start":128,"line_end":128,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":200},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":5783,"byte_end":5804,"line_start":173,"line_end":173,"column_start":8,"column_end":29},"name":"generate_code_streams","qualname":"::generate_code_streams","value":"fn <P1, P2> (protocol: P1, target: &mut P2, side: Side) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Generate the code for a protocol from/to IO streams","sig":null,"attributes":[{"value":"/ Generate the code for a protocol from/to IO streams","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":5396,"byte_end":5451,"line_start":164,"line_end":164,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":5452,"byte_end":5455,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Like `generate_code`, but takes IO Streams directly rather than filenames","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":5456,"byte_end":5533,"line_start":166,"line_end":166,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":5534,"byte_end":5537,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ Args:","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":5538,"byte_end":5547,"line_start":168,"line_end":168,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":5548,"byte_end":5551,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ - `protocol`: an object `Read`-able containing the XML protocol file","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":5552,"byte_end":5624,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ - `target`: a `Write`-able object to which the generated code will be outputted to","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":5625,"byte_end":5711,"line_start":171,"line_end":171,"column_start":1,"column_end":87}},{"value":"/ - `side`: the side (client or server) to generate code for.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":5712,"byte_end":5775,"line_start":172,"line_end":172,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":203},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":6279,"byte_end":6323,"line_start":182,"line_end":182,"column_start":8,"column_end":52},"name":"generate_code_streams_with_destructor_events","qualname":"::generate_code_streams_with_destructor_events","value":"fn <P1, P2> (protocol: P1, target: &mut P2, side: Side, events: &[(&str, &str)]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Generate the code for a protocol from/to IO streams with aditionnal destructor events","sig":null,"attributes":[{"value":"/ Generate the code for a protocol from/to IO streams with aditionnal destructor events","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":5952,"byte_end":6041,"line_start":177,"line_end":177,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":6042,"byte_end":6045,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ Same as `generate_code_streams`, but allows you to additionnaly specify some events","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":6046,"byte_end":6133,"line_start":179,"line_end":179,"column_start":1,"column_end":88}},{"value":"/ (in the format `(\"interface_name\", \"event_name\")`) as being destructor, as this","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":6134,"byte_end":6217,"line_start":180,"line_end":180,"column_start":1,"column_end":84}},{"value":"/ information is not encoded in the protocol files.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/lib.rs","byte_start":6218,"byte_end":6271,"line_start":181,"line_end":181,"column_start":1,"column_end":54}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/common_gen.rs","byte_start":35743,"byte_end":35747,"line_start":25,"line_end":25,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/protocol.rs","byte_start":83288,"byte_end":83296,"line_start":11,"line_end":11,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/protocol.rs","byte_start":83728,"byte_end":83737,"line_start":32,"line_end":32,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/protocol.rs","byte_start":84216,"byte_end":84223,"line_start":55,"line_end":55,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/protocol.rs","byte_start":84901,"byte_end":84904,"line_start":85,"line_end":85,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/protocol.rs","byte_start":85365,"byte_end":85369,"line_start":108,"line_end":108,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/protocol.rs","byte_start":85774,"byte_end":85779,"line_start":129,"line_end":129,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/protocol.rs","byte_start":86149,"byte_end":86153,"line_start":154,"line_end":154,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/side.rs","byte_start":87592,"byte_end":87596,"line_start":17,"line_end":17,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/common_gen.rs","byte_start":35743,"byte_end":35747,"line_start":25,"line_end":25,"column_start":19,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":249},"to":{"krate":18,"index":57}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/protocol.rs","byte_start":83288,"byte_end":83296,"line_start":11,"line_end":11,"column_start":6,"column_end":14},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/protocol.rs","byte_start":83728,"byte_end":83737,"line_start":32,"line_end":32,"column_start":6,"column_end":15},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/protocol.rs","byte_start":84216,"byte_end":84223,"line_start":55,"line_end":55,"column_start":6,"column_end":13},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/protocol.rs","byte_start":84901,"byte_end":84904,"line_start":85,"line_end":85,"column_start":6,"column_end":9},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":237},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/protocol.rs","byte_start":85365,"byte_end":85369,"line_start":108,"line_end":108,"column_start":6,"column_end":10},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/protocol.rs","byte_start":85774,"byte_end":85779,"line_start":129,"line_end":129,"column_start":6,"column_end":11},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":259},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/protocol.rs","byte_start":86149,"byte_end":86153,"line_start":154,"line_end":154,"column_start":6,"column_end":10},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":269},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.23.6/src/side.rs","byte_start":87592,"byte_end":87596,"line_start":17,"line_end":17,"column_start":6,"column_end":10},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":299},"to":{"krate":4294967295,"index":4294967295}}]}