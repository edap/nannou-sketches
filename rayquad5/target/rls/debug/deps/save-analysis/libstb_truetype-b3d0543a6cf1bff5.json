{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1","program":"/home/dapx/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","stb_truetype","--edition=2018","/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"std\"","-C","metadata=b3d0543a6cf1bff5","-C","extra-filename=-b3d0543a6cf1bff5","--out-dir","/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps","-L","dependency=/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps","--extern","byteorder=/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps/libbyteorder-253ed1b76243e9db.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/dapx/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps/libstb_truetype-b3d0543a6cf1bff5.rmeta"},"prelude":{"crate_id":{"name":"stb_truetype","disambiguator":[7859580680744222542,12689058129209723278]},"crate_root":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src","external_crates":[{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6528836112941390771,2028724122443642861]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14673858572786541001,1892137737928154225]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17117278319981904138,16406771668640906211]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11917984669602857069,6489053565454986112]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12362109612685904499,382626321872987168]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4151571022625212401,1888722734493896023]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4322023011642103678,14222697504055880771]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8420579222726968489,9136630199856205157]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[13745492306750544571,5475822973716876235]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14030493773096865675,2651053314204399788]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[8310449678941769819,14748581810882876583]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17983290995241619958,6056021938633518527]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2836549575564442446,8627689666430273126]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7274711288869898279,15671112109327640352]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","num":15,"id":{"name":"byteorder","disambiguator":[10719404080946289605,17148540255389135738]}}],"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":0,"byte_end":44665,"line_start":1,"line_end":1313,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":0,"byte_end":44665,"line_start":1,"line_end":1313,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":76},{"krate":0,"index":95},{"krate":0,"index":92},{"krate":0,"index":89},{"krate":0,"index":97},{"krate":0,"index":117},{"krate":0,"index":115},{"krate":0,"index":113},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":103},{"krate":0,"index":9},{"krate":0,"index":118},{"krate":0,"index":141},{"krate":0,"index":139},{"krate":0,"index":137},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":128},{"krate":0,"index":142},{"krate":0,"index":169},{"krate":0,"index":166},{"krate":0,"index":163},{"krate":0,"index":157},{"krate":0,"index":159},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":148},{"krate":0,"index":171},{"krate":0,"index":188},{"krate":0,"index":186},{"krate":0,"index":184},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":174},{"krate":0,"index":189},{"krate":0,"index":207},{"krate":0,"index":205},{"krate":0,"index":203},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":193},{"krate":0,"index":208},{"krate":0,"index":238},{"krate":0,"index":236},{"krate":0,"index":234},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":226},{"krate":0,"index":224},{"krate":0,"index":221},{"krate":0,"index":11},{"krate":0,"index":239},{"krate":0,"index":271},{"krate":0,"index":270},{"krate":0,"index":268},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":260},{"krate":0,"index":258},{"krate":0,"index":255},{"krate":0,"index":13},{"krate":0,"index":273},{"krate":0,"index":302},{"krate":0,"index":301},{"krate":0,"index":299},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":291},{"krate":0,"index":289},{"krate":0,"index":286},{"krate":0,"index":15},{"krate":0,"index":304},{"krate":0,"index":345},{"krate":0,"index":344},{"krate":0,"index":342},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":334},{"krate":0,"index":332},{"krate":0,"index":329},{"krate":0,"index":17},{"krate":0,"index":347},{"krate":0,"index":397},{"krate":0,"index":396},{"krate":0,"index":394},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":386},{"krate":0,"index":384},{"krate":0,"index":381},{"krate":0,"index":19},{"krate":0,"index":399},{"krate":0,"index":458},{"krate":0,"index":457},{"krate":0,"index":455},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":447},{"krate":0,"index":445},{"krate":0,"index":442},{"krate":0,"index":21},{"krate":0,"index":460},{"krate":0,"index":514},{"krate":0,"index":513},{"krate":0,"index":511},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":482},{"krate":0,"index":480},{"krate":0,"index":477},{"krate":0,"index":23},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":526},{"krate":0,"index":540},{"krate":0,"index":537},{"krate":0,"index":533},{"krate":0,"index":66}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"warn(clippy :: all)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":0,"byte_end":21,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"allow(clippy :: too_many_arguments, clippy :: cast_lossless, clippy ::\n        many_single_char_names)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":22,"byte_end":128,"line_start":2,"line_end":6,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":76},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":909,"byte_end":917,"line_start":41,"line_end":41,"column_start":12,"column_end":20},"name":"FontInfo","qualname":"::FontInfo","value":"FontInfo {  }","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":97},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":1520,"byte_end":1526,"line_start":58,"line_end":58,"column_start":12,"column_end":18},"name":"Vertex","qualname":"::Vertex","value":"Vertex { x, y, cx, cy }","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":1498,"byte_end":1508,"line_start":57,"line_end":57,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":98},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":1537,"byte_end":1538,"line_start":59,"line_end":59,"column_start":9,"column_end":10},"name":"x","qualname":"::Vertex::x","value":"i16","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":99},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":1553,"byte_end":1554,"line_start":60,"line_end":60,"column_start":9,"column_end":10},"name":"y","qualname":"::Vertex::y","value":"i16","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":100},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":1569,"byte_end":1571,"line_start":61,"line_end":61,"column_start":9,"column_end":11},"name":"cx","qualname":"::Vertex::cx","value":"i16","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":101},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":1586,"byte_end":1588,"line_start":62,"line_end":62,"column_start":9,"column_end":11},"name":"cy","qualname":"::Vertex::cy","value":"i16","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":1638,"byte_end":1649,"line_start":67,"line_end":67,"column_start":12,"column_end":23},"name":"vertex_type","qualname":"<Vertex>::vertex_type","value":"fn (&self) -> VertexType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":119},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":2872,"byte_end":2878,"line_start":116,"line_end":116,"column_start":5,"column_end":11},"name":"MoveTo","qualname":"::VertexType::MoveTo","value":"VertexType::MoveTo","parent":{"krate":0,"index":118},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":122},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":2888,"byte_end":2894,"line_start":117,"line_end":117,"column_start":5,"column_end":11},"name":"LineTo","qualname":"::VertexType::LineTo","value":"VertexType::LineTo","parent":{"krate":0,"index":118},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":125},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":2904,"byte_end":2911,"line_start":118,"line_end":118,"column_start":5,"column_end":12},"name":"CurveTo","qualname":"::VertexType::CurveTo","value":"VertexType::CurveTo","parent":{"krate":0,"index":118},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":118},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":2855,"byte_end":2865,"line_start":115,"line_end":115,"column_start":10,"column_end":20},"name":"VertexType","qualname":"::VertexType","value":"VertexType::{MoveTo, LineTo, CurveTo}","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":125}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u8)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":2834,"byte_end":2845,"line_start":114,"line_end":114,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":142},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":2982,"byte_end":2986,"line_start":122,"line_end":122,"column_start":12,"column_end":16},"name":"Rect","qualname":"::Rect","value":"Rect { x0, y0, x1, y1 }","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":144},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":3000,"byte_end":3002,"line_start":123,"line_end":123,"column_start":9,"column_end":11},"name":"x0","qualname":"::Rect::x0","value":"T","parent":{"krate":0,"index":142},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":145},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":3015,"byte_end":3017,"line_start":124,"line_end":124,"column_start":9,"column_end":11},"name":"y0","qualname":"::Rect::y0","value":"T","parent":{"krate":0,"index":142},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":146},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":3030,"byte_end":3032,"line_start":125,"line_end":125,"column_start":9,"column_end":11},"name":"x1","qualname":"::Rect::x1","value":"T","parent":{"krate":0,"index":142},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":147},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":3045,"byte_end":3047,"line_start":126,"line_end":126,"column_start":9,"column_end":11},"name":"y1","qualname":"::Rect::y1","value":"T","parent":{"krate":0,"index":142},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":171},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":3117,"byte_end":3125,"line_start":130,"line_end":130,"column_start":12,"column_end":20},"name":"HMetrics","qualname":"::HMetrics","value":"HMetrics { advance_width, left_side_bearing }","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":172},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":3136,"byte_end":3149,"line_start":131,"line_end":131,"column_start":9,"column_end":22},"name":"advance_width","qualname":"::HMetrics::advance_width","value":"i32","parent":{"krate":0,"index":171},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":173},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":3164,"byte_end":3181,"line_start":132,"line_end":132,"column_start":9,"column_end":26},"name":"left_side_bearing","qualname":"::HMetrics::left_side_bearing","value":"i32","parent":{"krate":0,"index":171},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":189},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":3253,"byte_end":3261,"line_start":136,"line_end":136,"column_start":12,"column_end":20},"name":"VMetrics","qualname":"::VMetrics","value":"VMetrics { ascent, descent, line_gap }","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":190},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":3272,"byte_end":3278,"line_start":137,"line_end":137,"column_start":9,"column_end":15},"name":"ascent","qualname":"::VMetrics::ascent","value":"i32","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":191},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":3293,"byte_end":3300,"line_start":138,"line_end":138,"column_start":9,"column_end":16},"name":"descent","qualname":"::VMetrics::descent","value":"i32","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":192},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":3315,"byte_end":3323,"line_start":139,"line_end":139,"column_start":9,"column_end":17},"name":"line_gap","qualname":"::VMetrics::line_gap","value":"i32","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":209},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":3456,"byte_end":3463,"line_start":146,"line_end":146,"column_start":5,"column_end":12},"name":"Unicode","qualname":"::PlatformId::Unicode","value":"PlatformId::Unicode","parent":{"krate":0,"index":208},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":212},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":3473,"byte_end":3476,"line_start":147,"line_end":147,"column_start":5,"column_end":8},"name":"Mac","qualname":"::PlatformId::Mac","value":"PlatformId::Mac","parent":{"krate":0,"index":208},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":215},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":3486,"byte_end":3489,"line_start":148,"line_end":148,"column_start":5,"column_end":8},"name":"Iso","qualname":"::PlatformId::Iso","value":"PlatformId::Iso","parent":{"krate":0,"index":208},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":218},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":3499,"byte_end":3508,"line_start":149,"line_end":149,"column_start":5,"column_end":14},"name":"Microsoft","qualname":"::PlatformId::Microsoft","value":"PlatformId::Microsoft","parent":{"krate":0,"index":208},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":208},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":3421,"byte_end":3431,"line_start":144,"line_end":144,"column_start":10,"column_end":20},"name":"PlatformId","qualname":"::PlatformId","value":"PlatformId::{Unicode, Mac, Iso, Microsoft}","parent":null,"children":[{"krate":0,"index":209},{"krate":0,"index":212},{"krate":0,"index":215},{"krate":0,"index":218}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":3401,"byte_end":3411,"line_start":143,"line_end":143,"column_start":1,"column_end":11}}]},{"kind":"TupleVariant","id":{"krate":0,"index":240},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":3919,"byte_end":3930,"line_start":167,"line_end":167,"column_start":5,"column_end":16},"name":"Unicode_1_0","qualname":"::UnicodeEid::Unicode_1_0","value":"UnicodeEid::Unicode_1_0","parent":{"krate":0,"index":239},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":243},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":3940,"byte_end":3951,"line_start":168,"line_end":168,"column_start":5,"column_end":16},"name":"Unicode_1_1","qualname":"::UnicodeEid::Unicode_1_1","value":"UnicodeEid::Unicode_1_1","parent":{"krate":0,"index":239},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":246},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":3961,"byte_end":3970,"line_start":169,"line_end":169,"column_start":5,"column_end":14},"name":"Iso_10646","qualname":"::UnicodeEid::Iso_10646","value":"UnicodeEid::Iso_10646","parent":{"krate":0,"index":239},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":249},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":3980,"byte_end":3995,"line_start":170,"line_end":170,"column_start":5,"column_end":20},"name":"Unicode_2_0_Bmp","qualname":"::UnicodeEid::Unicode_2_0_Bmp","value":"UnicodeEid::Unicode_2_0_Bmp","parent":{"krate":0,"index":239},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":252},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":4005,"byte_end":4021,"line_start":171,"line_end":171,"column_start":5,"column_end":21},"name":"Unicode_2_0_Full","qualname":"::UnicodeEid::Unicode_2_0_Full","value":"UnicodeEid::Unicode_2_0_Full","parent":{"krate":0,"index":239},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":239},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":3860,"byte_end":3870,"line_start":165,"line_end":165,"column_start":10,"column_end":20},"name":"UnicodeEid","qualname":"::UnicodeEid","value":"UnicodeEid::{Unicode_1_0, Unicode_1_1, Iso_10646, Unicode_2_0_Bmp, Unicode_2_0_Full}","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":252}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":3809,"byte_end":3819,"line_start":163,"line_end":163,"column_start":1,"column_end":11}},{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":3820,"byte_end":3850,"line_start":164,"line_end":164,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":274},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":4466,"byte_end":4472,"line_start":189,"line_end":189,"column_start":5,"column_end":11},"name":"Symbol","qualname":"::MicrosoftEid::Symbol","value":"MicrosoftEid::Symbol","parent":{"krate":0,"index":273},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":277},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":4482,"byte_end":4492,"line_start":190,"line_end":190,"column_start":5,"column_end":15},"name":"UnicodeBMP","qualname":"::MicrosoftEid::UnicodeBMP","value":"MicrosoftEid::UnicodeBMP","parent":{"krate":0,"index":273},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":280},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":4502,"byte_end":4510,"line_start":191,"line_end":191,"column_start":5,"column_end":13},"name":"Shiftjis","qualname":"::MicrosoftEid::Shiftjis","value":"MicrosoftEid::Shiftjis","parent":{"krate":0,"index":273},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":283},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":4520,"byte_end":4531,"line_start":192,"line_end":192,"column_start":5,"column_end":16},"name":"UnicodeFull","qualname":"::MicrosoftEid::UnicodeFull","value":"MicrosoftEid::UnicodeFull","parent":{"krate":0,"index":273},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":273},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":4403,"byte_end":4415,"line_start":187,"line_end":187,"column_start":10,"column_end":22},"name":"MicrosoftEid","qualname":"::MicrosoftEid","value":"MicrosoftEid::{Symbol, UnicodeBMP, Shiftjis, UnicodeFull}","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":277},{"krate":0,"index":280},{"krate":0,"index":283}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":4383,"byte_end":4393,"line_start":186,"line_end":186,"column_start":1,"column_end":11}}]},{"kind":"TupleVariant","id":{"krate":0,"index":305},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":4954,"byte_end":4959,"line_start":209,"line_end":209,"column_start":5,"column_end":10},"name":"Roman","qualname":"::MacEid::Roman","value":"MacEid::Roman","parent":{"krate":0,"index":304},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":308},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":4969,"byte_end":4975,"line_start":210,"line_end":210,"column_start":5,"column_end":11},"name":"Arabic","qualname":"::MacEid::Arabic","value":"MacEid::Arabic","parent":{"krate":0,"index":304},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":311},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":4985,"byte_end":4993,"line_start":211,"line_end":211,"column_start":5,"column_end":13},"name":"Japanese","qualname":"::MacEid::Japanese","value":"MacEid::Japanese","parent":{"krate":0,"index":304},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":314},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":5003,"byte_end":5009,"line_start":212,"line_end":212,"column_start":5,"column_end":11},"name":"Hebrew","qualname":"::MacEid::Hebrew","value":"MacEid::Hebrew","parent":{"krate":0,"index":304},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":317},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":5019,"byte_end":5030,"line_start":213,"line_end":213,"column_start":5,"column_end":16},"name":"ChineseTrad","qualname":"::MacEid::ChineseTrad","value":"MacEid::ChineseTrad","parent":{"krate":0,"index":304},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":320},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":5040,"byte_end":5045,"line_start":214,"line_end":214,"column_start":5,"column_end":10},"name":"Greek","qualname":"::MacEid::Greek","value":"MacEid::Greek","parent":{"krate":0,"index":304},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":323},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":5055,"byte_end":5061,"line_start":215,"line_end":215,"column_start":5,"column_end":11},"name":"Korean","qualname":"::MacEid::Korean","value":"MacEid::Korean","parent":{"krate":0,"index":304},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":326},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":5071,"byte_end":5078,"line_start":216,"line_end":216,"column_start":5,"column_end":12},"name":"Russian","qualname":"::MacEid::Russian","value":"MacEid::Russian","parent":{"krate":0,"index":304},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":304},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":4873,"byte_end":4879,"line_start":207,"line_end":207,"column_start":10,"column_end":16},"name":"MacEid","qualname":"::MacEid","value":"MacEid::{Roman, Arabic, Japanese, Hebrew, ChineseTrad, Greek, Korean, Russian}","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":308},{"krate":0,"index":311},{"krate":0,"index":314},{"krate":0,"index":317},{"krate":0,"index":320},{"krate":0,"index":323},{"krate":0,"index":326}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":4853,"byte_end":4863,"line_start":206,"line_end":206,"column_start":1,"column_end":11}}]},{"kind":"TupleVariant","id":{"krate":0,"index":348},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":5663,"byte_end":5670,"line_start":238,"line_end":238,"column_start":5,"column_end":12},"name":"English","qualname":"::MicrosoftLang::English","value":"MicrosoftLang::English","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":351},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":5685,"byte_end":5692,"line_start":239,"line_end":239,"column_start":5,"column_end":12},"name":"Italian","qualname":"::MicrosoftLang::Italian","value":"MicrosoftLang::Italian","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":354},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":5707,"byte_end":5714,"line_start":240,"line_end":240,"column_start":5,"column_end":12},"name":"Chinese","qualname":"::MicrosoftLang::Chinese","value":"MicrosoftLang::Chinese","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":357},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":5729,"byte_end":5737,"line_start":241,"line_end":241,"column_start":5,"column_end":13},"name":"Japanese","qualname":"::MicrosoftLang::Japanese","value":"MicrosoftLang::Japanese","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":360},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":5752,"byte_end":5757,"line_start":242,"line_end":242,"column_start":5,"column_end":10},"name":"Dutch","qualname":"::MicrosoftLang::Dutch","value":"MicrosoftLang::Dutch","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":363},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":5772,"byte_end":5778,"line_start":243,"line_end":243,"column_start":5,"column_end":11},"name":"Korean","qualname":"::MicrosoftLang::Korean","value":"MicrosoftLang::Korean","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":366},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":5793,"byte_end":5799,"line_start":244,"line_end":244,"column_start":5,"column_end":11},"name":"French","qualname":"::MicrosoftLang::French","value":"MicrosoftLang::French","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":369},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":5814,"byte_end":5821,"line_start":245,"line_end":245,"column_start":5,"column_end":12},"name":"Russian","qualname":"::MicrosoftLang::Russian","value":"MicrosoftLang::Russian","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":372},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":5836,"byte_end":5842,"line_start":246,"line_end":246,"column_start":5,"column_end":11},"name":"German","qualname":"::MicrosoftLang::German","value":"MicrosoftLang::German","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":375},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":5882,"byte_end":5888,"line_start":248,"line_end":248,"column_start":5,"column_end":11},"name":"Hebrew","qualname":"::MicrosoftLang::Hebrew","value":"MicrosoftLang::Hebrew","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":378},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":5903,"byte_end":5910,"line_start":249,"line_end":249,"column_start":5,"column_end":12},"name":"Swedish","qualname":"::MicrosoftLang::Swedish","value":"MicrosoftLang::Swedish","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":347},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":5503,"byte_end":5516,"line_start":235,"line_end":235,"column_start":10,"column_end":23},"name":"MicrosoftLang","qualname":"::MicrosoftLang","value":"MicrosoftLang::{English, Italian, Chinese, Japanese, Dutch, Korean, French, Russian, German, Hebrew, Swedish}","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":351},{"krate":0,"index":354},{"krate":0,"index":357},{"krate":0,"index":360},{"krate":0,"index":363},{"krate":0,"index":366},{"krate":0,"index":369},{"krate":0,"index":372},{"krate":0,"index":375},{"krate":0,"index":378}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":5483,"byte_end":5493,"line_start":234,"line_end":234,"column_start":1,"column_end":11}}]},{"kind":"TupleVariant","id":{"krate":0,"index":400},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":6549,"byte_end":6556,"line_start":273,"line_end":273,"column_start":5,"column_end":12},"name":"English","qualname":"::MacLang::English","value":"MacLang::English","parent":{"krate":0,"index":399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":403},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":6566,"byte_end":6574,"line_start":274,"line_end":274,"column_start":5,"column_end":13},"name":"Japanese","qualname":"::MacLang::Japanese","value":"MacLang::Japanese","parent":{"krate":0,"index":399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":406},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":6585,"byte_end":6591,"line_start":275,"line_end":275,"column_start":5,"column_end":11},"name":"Arabic","qualname":"::MacLang::Arabic","value":"MacLang::Arabic","parent":{"krate":0,"index":399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":409},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":6602,"byte_end":6608,"line_start":276,"line_end":276,"column_start":5,"column_end":11},"name":"Korean","qualname":"::MacLang::Korean","value":"MacLang::Korean","parent":{"krate":0,"index":399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":412},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":6619,"byte_end":6624,"line_start":277,"line_end":277,"column_start":5,"column_end":10},"name":"Dutch","qualname":"::MacLang::Dutch","value":"MacLang::Dutch","parent":{"krate":0,"index":399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":415},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":6634,"byte_end":6641,"line_start":278,"line_end":278,"column_start":5,"column_end":12},"name":"Russian","qualname":"::MacLang::Russian","value":"MacLang::Russian","parent":{"krate":0,"index":399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":418},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":6652,"byte_end":6658,"line_start":279,"line_end":279,"column_start":5,"column_end":11},"name":"French","qualname":"::MacLang::French","value":"MacLang::French","parent":{"krate":0,"index":399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":421},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":6668,"byte_end":6675,"line_start":280,"line_end":280,"column_start":5,"column_end":12},"name":"Spanish","qualname":"::MacLang::Spanish","value":"MacLang::Spanish","parent":{"krate":0,"index":399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":424},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":6685,"byte_end":6691,"line_start":281,"line_end":281,"column_start":5,"column_end":11},"name":"German","qualname":"::MacLang::German","value":"MacLang::German","parent":{"krate":0,"index":399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":427},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":6701,"byte_end":6708,"line_start":282,"line_end":282,"column_start":5,"column_end":12},"name":"Swedish","qualname":"::MacLang::Swedish","value":"MacLang::Swedish","parent":{"krate":0,"index":399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":430},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":6718,"byte_end":6724,"line_start":283,"line_end":283,"column_start":5,"column_end":11},"name":"Hebrew","qualname":"::MacLang::Hebrew","value":"MacLang::Hebrew","parent":{"krate":0,"index":399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":433},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":6735,"byte_end":6752,"line_start":284,"line_end":284,"column_start":5,"column_end":22},"name":"ChineseSimplified","qualname":"::MacLang::ChineseSimplified","value":"MacLang::ChineseSimplified","parent":{"krate":0,"index":399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":436},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":6763,"byte_end":6770,"line_start":285,"line_end":285,"column_start":5,"column_end":12},"name":"Italian","qualname":"::MacLang::Italian","value":"MacLang::Italian","parent":{"krate":0,"index":399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":439},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":6780,"byte_end":6791,"line_start":286,"line_end":286,"column_start":5,"column_end":16},"name":"ChineseTrad","qualname":"::MacLang::ChineseTrad","value":"MacLang::ChineseTrad","parent":{"krate":0,"index":399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":399},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":6497,"byte_end":6504,"line_start":271,"line_end":271,"column_start":10,"column_end":17},"name":"MacLang","qualname":"::MacLang","value":"MacLang::{English, Japanese, Arabic, Korean, Dutch, Russian, French, Spanish, German, Swedish, Hebrew, ChineseSimplified, Italian, ChineseTrad}","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":403},{"krate":0,"index":406},{"krate":0,"index":409},{"krate":0,"index":412},{"krate":0,"index":415},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":430},{"krate":0,"index":433},{"krate":0,"index":436},{"krate":0,"index":439}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":6477,"byte_end":6487,"line_start":270,"line_end":270,"column_start":1,"column_end":11}}]},{"kind":"TupleVariant","id":{"krate":0,"index":461},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":7427,"byte_end":7434,"line_start":311,"line_end":311,"column_start":5,"column_end":12},"name":"Unicode","qualname":"::PlatformEncodingLanguageId::Unicode","value":"PlatformEncodingLanguageId::Unicode(Option<Result<UnicodeEid, u16>>, Option<u16>)","parent":{"krate":0,"index":460},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":465},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":7486,"byte_end":7489,"line_start":312,"line_end":312,"column_start":5,"column_end":8},"name":"Mac","qualname":"::PlatformEncodingLanguageId::Mac","value":"PlatformEncodingLanguageId::Mac(Option<Result<MacEid, u16>>, Option<Result<MacLang, u16>>)","parent":{"krate":0,"index":460},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":469},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":7554,"byte_end":7557,"line_start":313,"line_end":313,"column_start":5,"column_end":8},"name":"Iso","qualname":"::PlatformEncodingLanguageId::Iso","value":"PlatformEncodingLanguageId::Iso(Option<u16>, Option<u16>)","parent":{"krate":0,"index":460},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":473},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":7589,"byte_end":7598,"line_start":314,"line_end":314,"column_start":5,"column_end":14},"name":"Microsoft","qualname":"::PlatformEncodingLanguageId::Microsoft","value":"PlatformEncodingLanguageId::Microsoft(Option<Result<MicrosoftEid, u16>>, Option<Result<MicrosoftLang, u16>>)","parent":{"krate":0,"index":460},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":460},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":7394,"byte_end":7420,"line_start":310,"line_end":310,"column_start":10,"column_end":36},"name":"PlatformEncodingLanguageId","qualname":"::PlatformEncodingLanguageId","value":"PlatformEncodingLanguageId::{Unicode, Mac, Iso, Microsoft}","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":465},{"krate":0,"index":469},{"krate":0,"index":473}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":29},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":8865,"byte_end":8872,"line_start":349,"line_end":349,"column_start":8,"column_end":15},"name":"is_font","qualname":"::is_font","value":"fn (data: &[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if `data` holds a font stored in a format this crate\n recognizes, according to its signature in the initial bytes.\n","sig":null,"attributes":[{"value":"/ Return `true` if `data` holds a font stored in a format this crate","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":8722,"byte_end":8792,"line_start":347,"line_end":347,"column_start":1,"column_end":71}},{"value":"/ recognizes, according to its signature in the initial bytes.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":8793,"byte_end":8857,"line_start":348,"line_end":348,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":30},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":9324,"byte_end":9337,"line_start":362,"line_end":362,"column_start":8,"column_end":21},"name":"is_collection","qualname":"::is_collection","value":"fn (data: &[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if `data` holds a TrueType Collection, according to its\n signature in the initial bytes. A TrueType Collection stores several fonts\n in a single file, allowing them to share data for glyphs they have in\n common.\n","sig":null,"attributes":[{"value":"/ Return `true` if `data` holds a TrueType Collection, according to its","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":9078,"byte_end":9151,"line_start":358,"line_end":358,"column_start":1,"column_end":74}},{"value":"/ signature in the initial bytes. A TrueType Collection stores several fonts","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":9152,"byte_end":9230,"line_start":359,"line_end":359,"column_start":1,"column_end":79}},{"value":"/ in a single file, allowing them to share data for glyphs they have in","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":9231,"byte_end":9304,"line_start":360,"line_end":360,"column_start":1,"column_end":74}},{"value":"/ common.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":9305,"byte_end":9316,"line_start":361,"line_end":361,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":32},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":10218,"byte_end":10243,"line_start":384,"line_end":384,"column_start":8,"column_end":33},"name":"get_font_offset_for_index","qualname":"::get_font_offset_for_index","value":"fn (font_collection: &[u8], index: i32) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Each .ttf/.ttc file may have more than one font. Each font has a sequential\n index number starting from 0. Call this function to get the font offset for\n a given index; it returns None if the index is out of range. A regular .ttf\n file will only define one font and it always be at offset 0, so it will\n return Some(0) for index 0, and None for all other indices. You can just\n skip this step if you know it's that kind of font.\n","sig":null,"attributes":[{"value":"/ Each .ttf/.ttc file may have more than one font. Each font has a sequential","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":9763,"byte_end":9842,"line_start":378,"line_end":378,"column_start":1,"column_end":80}},{"value":"/ index number starting from 0. Call this function to get the font offset for","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":9843,"byte_end":9922,"line_start":379,"line_end":379,"column_start":1,"column_end":80}},{"value":"/ a given index; it returns None if the index is out of range. A regular .ttf","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":9923,"byte_end":10002,"line_start":380,"line_end":380,"column_start":1,"column_end":80}},{"value":"/ file will only define one font and it always be at offset 0, so it will","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":10003,"byte_end":10078,"line_start":381,"line_end":381,"column_start":1,"column_end":76}},{"value":"/ return Some(0) for index 0, and None for all other indices. You can just","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":10079,"byte_end":10155,"line_start":382,"line_end":382,"column_start":1,"column_end":77}},{"value":"/ skip this step if you know it's that kind of font.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":10156,"byte_end":10210,"line_start":383,"line_end":383,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":11607,"byte_end":11610,"line_start":427,"line_end":427,"column_start":12,"column_end":15},"name":"new","qualname":"<FontInfo<Data>>::new","value":"fn (data: Data, fontstart: usize) -> Option<FontInfo<Data>>","parent":null,"children":[],"decl_id":null,"docs":" Given an offset into the file that defines a font, this function builds\n the necessary cached info for the rest of the system.\n","sig":null,"attributes":[{"value":"/ Given an offset into the file that defines a font, this function builds","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":11458,"byte_end":11533,"line_start":425,"line_end":425,"column_start":5,"column_end":80}},{"value":"/ the necessary cached info for the rest of the system.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":11538,"byte_end":11595,"line_start":426,"line_end":426,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":14310,"byte_end":14324,"line_start":492,"line_end":492,"column_start":12,"column_end":26},"name":"get_num_glyphs","qualname":"<FontInfo<Data>>::get_num_glyphs","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":14645,"byte_end":14661,"line_start":500,"line_end":500,"column_start":12,"column_end":28},"name":"find_glyph_index","qualname":"<FontInfo<Data>>::find_glyph_index","value":"fn (&self, unicode_codepoint: u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" If you're going to perform multiple operations on the same character\n and you want a speed-up, call this function with the character you're\n going to process, then use glyph-based functions instead of the\n codepoint-based functions.\n","sig":null,"attributes":[{"value":"/ If you're going to perform multiple operations on the same character","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":14376,"byte_end":14448,"line_start":496,"line_end":496,"column_start":5,"column_end":77}},{"value":"/ and you want a speed-up, call this function with the character you're","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":14453,"byte_end":14526,"line_start":497,"line_end":497,"column_start":5,"column_end":78}},{"value":"/ going to process, then use glyph-based functions instead of the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":14531,"byte_end":14598,"line_start":498,"line_end":498,"column_start":5,"column_end":72}},{"value":"/ codepoint-based functions.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":14603,"byte_end":14633,"line_start":499,"line_end":499,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":20080,"byte_end":20099,"line_start":626,"line_end":626,"column_start":12,"column_end":31},"name":"get_codepoint_shape","qualname":"<FontInfo<Data>>::get_codepoint_shape","value":"fn (&self, unicode_codepoint: u32) -> Option<Vec<Vertex>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the series of vertices encoding the shape of the glyph for this\n codepoint.","sig":null,"attributes":[{"value":"/ Returns the series of vertices encoding the shape of the glyph for this","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":19619,"byte_end":19694,"line_start":617,"line_end":617,"column_start":5,"column_end":80}},{"value":"/ codepoint.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":19699,"byte_end":19713,"line_start":618,"line_end":618,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":19718,"byte_end":19721,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ The shape is a series of countours. Each one starts with","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":19726,"byte_end":19786,"line_start":620,"line_end":620,"column_start":5,"column_end":65}},{"value":"/ a moveto, then consists of a series of mixed","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":19791,"byte_end":19839,"line_start":621,"line_end":621,"column_start":5,"column_end":53}},{"value":"/ lineto and curveto segments. A lineto","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":19844,"byte_end":19885,"line_start":622,"line_end":622,"column_start":5,"column_end":46}},{"value":"/ draws a line from previous endpoint to its x,y; a curveto","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":19890,"byte_end":19951,"line_start":623,"line_end":623,"column_start":5,"column_end":66}},{"value":"/ draws a quadratic bezier from previous endpoint to","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":19956,"byte_end":20010,"line_start":624,"line_end":624,"column_start":5,"column_end":59}},{"value":"/ its x,y, using cx,cy as the bezier control point.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":20015,"byte_end":20068,"line_start":625,"line_end":625,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":21070,"byte_end":21083,"line_start":652,"line_end":652,"column_start":12,"column_end":25},"name":"get_glyph_box","qualname":"<FontInfo<Data>>::get_glyph_box","value":"fn (&self, glyph_index: u32) -> Option<Rect<i16>>","parent":null,"children":[],"decl_id":null,"docs":" Like `get_codepoint_box`, but takes a glyph index. Use this if you have\n cached the glyph index for a codepoint.\n","sig":null,"attributes":[{"value":"/ Like `get_codepoint_box`, but takes a glyph index. Use this if you have","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":20935,"byte_end":21010,"line_start":650,"line_end":650,"column_start":5,"column_end":80}},{"value":"/ cached the glyph index for a codepoint.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":21015,"byte_end":21058,"line_start":651,"line_end":651,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":21417,"byte_end":21434,"line_start":660,"line_end":660,"column_start":12,"column_end":29},"name":"get_codepoint_box","qualname":"<FontInfo<Data>>::get_codepoint_box","value":"fn (&self, codepoint: u32) -> Option<Rect<i16>>","parent":null,"children":[],"decl_id":null,"docs":" Gets the bounding box of the visible part of the glyph, in unscaled\n coordinates\n","sig":null,"attributes":[{"value":"/ Gets the bounding box of the visible part of the glyph, in unscaled","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":21314,"byte_end":21385,"line_start":658,"line_end":658,"column_start":5,"column_end":76}},{"value":"/ coordinates","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":21390,"byte_end":21405,"line_start":659,"line_end":659,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":21616,"byte_end":21630,"line_start":665,"line_end":665,"column_start":12,"column_end":26},"name":"is_glyph_empty","qualname":"<FontInfo<Data>>::is_glyph_empty","value":"fn (&self, glyph_index: u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" returns true if nothing is drawn for this glyph\n","sig":null,"attributes":[{"value":"/ returns true if nothing is drawn for this glyph","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":21553,"byte_end":21604,"line_start":664,"line_end":664,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":22068,"byte_end":22083,"line_start":677,"line_end":677,"column_start":12,"column_end":27},"name":"get_glyph_shape","qualname":"<FontInfo<Data>>::get_glyph_shape","value":"fn (&self, glyph_index: u32) -> Option<Vec<Vertex>>","parent":null,"children":[],"decl_id":null,"docs":" Like `get_codepoint_shape`, but takes a glyph index instead. Use this\n if you have cached the glyph index for a codepoint.\n","sig":null,"attributes":[{"value":"/ Like `get_codepoint_shape`, but takes a glyph index instead. Use this","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":21923,"byte_end":21996,"line_start":675,"line_end":675,"column_start":5,"column_end":78}},{"value":"/ if you have cached the glyph index for a codepoint.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":22001,"byte_end":22056,"line_start":676,"line_end":676,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":34097,"byte_end":34116,"line_start":1026,"line_end":1026,"column_start":12,"column_end":31},"name":"get_glyph_h_metrics","qualname":"<FontInfo<Data>>::get_glyph_h_metrics","value":"fn (&self, glyph_index: u32) -> HMetrics","parent":null,"children":[],"decl_id":null,"docs":" like `get_codepoint_h_metrics`, but takes a glyph index instead. Use\n this if you have cached the glyph index for a codepoint.\n","sig":null,"attributes":[{"value":"/ like `get_codepoint_h_metrics`, but takes a glyph index instead. Use","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":33948,"byte_end":34020,"line_start":1024,"line_end":1024,"column_start":5,"column_end":77}},{"value":"/ this if you have cached the glyph index for a codepoint.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":34025,"byte_end":34085,"line_start":1025,"line_end":1025,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":35341,"byte_end":35363,"line_start":1052,"line_end":1052,"column_start":12,"column_end":34},"name":"get_glyph_kern_advance","qualname":"<FontInfo<Data>>::get_glyph_kern_advance","value":"fn (&self, glyph_1: u32, glyph_2: u32) -> i32","parent":null,"children":[],"decl_id":null,"docs":" like `get_codepoint_kern_advance`, but takes glyph indices instead. Use\n this if you have cached the glyph indices for the codepoints.\n","sig":null,"attributes":[{"value":"/ like `get_codepoint_kern_advance`, but takes glyph indices instead. Use","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":35184,"byte_end":35259,"line_start":1050,"line_end":1050,"column_start":5,"column_end":80}},{"value":"/ this if you have cached the glyph indices for the codepoints.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":35264,"byte_end":35329,"line_start":1051,"line_end":1051,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":36443,"byte_end":36469,"line_start":1080,"line_end":1080,"column_start":12,"column_end":38},"name":"get_codepoint_kern_advance","qualname":"<FontInfo<Data>>::get_codepoint_kern_advance","value":"fn (&self, cp1: u32, cp2: u32) -> i32","parent":null,"children":[],"decl_id":null,"docs":" an additional amount to add to the 'advance' value between cp1 and cp2\n","sig":null,"attributes":[{"value":"/ an additional amount to add to the 'advance' value between cp1 and cp2","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":36357,"byte_end":36431,"line_start":1079,"line_end":1079,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":37072,"byte_end":37095,"line_start":1095,"line_end":1095,"column_start":12,"column_end":35},"name":"get_codepoint_h_metrics","qualname":"<FontInfo<Data>>::get_codepoint_h_metrics","value":"fn (&self, codepoint: u32) -> HMetrics","parent":null,"children":[],"decl_id":null,"docs":" `left_side_bearing` is the offset from the current horizontal position\n to the left edge of the character `advance_width` is the offset\n from the current horizontal position to the next horizontal\n position these are\n expressed in unscaled\n coordinates\n","sig":null,"attributes":[{"value":"/ `left_side_bearing` is the offset from the current horizontal position","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":36769,"byte_end":36843,"line_start":1089,"line_end":1089,"column_start":5,"column_end":79}},{"value":"/ to the left edge of the character `advance_width` is the offset","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":36848,"byte_end":36915,"line_start":1090,"line_end":1090,"column_start":5,"column_end":72}},{"value":"/ from the current horizontal position to the next horizontal","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":36920,"byte_end":36983,"line_start":1091,"line_end":1091,"column_start":5,"column_end":68}},{"value":"/ position these are","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":36988,"byte_end":37010,"line_start":1092,"line_end":1092,"column_start":5,"column_end":27}},{"value":"/ expressed in unscaled","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":37015,"byte_end":37040,"line_start":1093,"line_end":1093,"column_start":5,"column_end":30}},{"value":"/ coordinates","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":37045,"byte_end":37060,"line_start":1094,"line_end":1094,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":37693,"byte_end":37706,"line_start":1106,"line_end":1106,"column_start":12,"column_end":25},"name":"get_v_metrics","qualname":"<FontInfo<Data>>::get_v_metrics","value":"fn (&self) -> VMetrics","parent":null,"children":[],"decl_id":null,"docs":" `ascent` is the coordinate above the baseline the font extends; descent\n is the coordinate below the baseline the font extends (i.e. it is\n typically negative) `line_gap` is the spacing between one row's\n descent and the next row's ascent... so you should advance the\n vertical position by `ascent -\n descent + line_gap` these are expressed in unscaled coordinates, so\n you must multiply by the scale factor for a given size\n","sig":null,"attributes":[{"value":"/ `ascent` is the coordinate above the baseline the font extends; descent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":37211,"byte_end":37286,"line_start":1099,"line_end":1099,"column_start":5,"column_end":80}},{"value":"/ is the coordinate below the baseline the font extends (i.e. it is","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":37291,"byte_end":37360,"line_start":1100,"line_end":1100,"column_start":5,"column_end":74}},{"value":"/ typically negative) `line_gap` is the spacing between one row's","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":37365,"byte_end":37432,"line_start":1101,"line_end":1101,"column_start":5,"column_end":72}},{"value":"/ descent and the next row's ascent... so you should advance the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":37437,"byte_end":37503,"line_start":1102,"line_end":1102,"column_start":5,"column_end":71}},{"value":"/ vertical position by `ascent -","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":37508,"byte_end":37542,"line_start":1103,"line_end":1103,"column_start":5,"column_end":39}},{"value":"/ descent + line_gap` these are expressed in unscaled coordinates, so","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":37547,"byte_end":37618,"line_start":1104,"line_end":1104,"column_start":5,"column_end":76}},{"value":"/ you must multiply by the scale factor for a given size","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":37623,"byte_end":37681,"line_start":1105,"line_end":1105,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":38081,"byte_end":38097,"line_start":1117,"line_end":1117,"column_start":12,"column_end":28},"name":"get_bounding_box","qualname":"<FontInfo<Data>>::get_bounding_box","value":"fn (&self) -> Rect<i16>","parent":null,"children":[],"decl_id":null,"docs":" the bounding box around all possible characters\n","sig":null,"attributes":[{"value":"/ the bounding box around all possible characters","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":38018,"byte_end":38069,"line_start":1116,"line_end":1116,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":38803,"byte_end":38825,"line_start":1134,"line_end":1134,"column_start":12,"column_end":34},"name":"scale_for_pixel_height","qualname":"<FontInfo<Data>>::scale_for_pixel_height","value":"fn (&self, height: f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" computes a scale factor to produce a font whose \"height\" is 'pixels'\n tall. Height is measured as the distance from the highest ascender\n to the lowest descender; in other words, it's equivalent to calling\n GetFontVMetrics and computing:\n       scale = pixels / (ascent - descent)\n so if you prefer to measure height by the ascent only, use a similar\n calculation.\n","sig":null,"attributes":[{"value":"/ computes a scale factor to produce a font whose \"height\" is 'pixels'","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":38381,"byte_end":38453,"line_start":1127,"line_end":1127,"column_start":5,"column_end":77}},{"value":"/ tall. Height is measured as the distance from the highest ascender","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":38458,"byte_end":38528,"line_start":1128,"line_end":1128,"column_start":5,"column_end":75}},{"value":"/ to the lowest descender; in other words, it's equivalent to calling","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":38533,"byte_end":38604,"line_start":1129,"line_end":1129,"column_start":5,"column_end":76}},{"value":"/ GetFontVMetrics and computing:","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":38609,"byte_end":38643,"line_start":1130,"line_end":1130,"column_start":5,"column_end":39}},{"value":"/       scale = pixels / (ascent - descent)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":38648,"byte_end":38693,"line_start":1131,"line_end":1131,"column_start":5,"column_end":50}},{"value":"/ so if you prefer to measure height by the ascent only, use a similar","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":38698,"byte_end":38770,"line_start":1132,"line_end":1132,"column_start":5,"column_end":77}},{"value":"/ calculation.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":38775,"byte_end":38791,"line_start":1133,"line_end":1133,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":39137,"byte_end":39149,"line_start":1144,"line_end":1144,"column_start":12,"column_end":24},"name":"units_per_em","qualname":"<FontInfo<Data>>::units_per_em","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the units per EM square of this font.\n","sig":null,"attributes":[{"value":"/ Returns the units per EM square of this font.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":39076,"byte_end":39125,"line_start":1143,"line_end":1143,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":39422,"byte_end":39452,"line_start":1151,"line_end":1151,"column_start":12,"column_end":42},"name":"scale_for_mapping_em_to_pixels","qualname":"<FontInfo<Data>>::scale_for_mapping_em_to_pixels","value":"fn (&self, pixels: f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" computes a scale factor to produce a font whose EM size is mapped to\n `pixels` tall. This is probably what traditional APIs compute, but\n I'm not positive.\n","sig":null,"attributes":[{"value":"/ computes a scale factor to produce a font whose EM size is mapped to","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":39237,"byte_end":39309,"line_start":1148,"line_end":1148,"column_start":5,"column_end":77}},{"value":"/ `pixels` tall. This is probably what traditional APIs compute, but","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":39314,"byte_end":39384,"line_start":1149,"line_end":1149,"column_start":5,"column_end":75}},{"value":"/ I'm not positive.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":39389,"byte_end":39410,"line_start":1150,"line_end":1150,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":39652,"byte_end":39681,"line_start":1157,"line_end":1157,"column_start":12,"column_end":41},"name":"get_glyph_bitmap_box_subpixel","qualname":"<FontInfo<Data>>::get_glyph_bitmap_box_subpixel","value":"fn (&self, glyph: u32, scale_x: f32, scale_y: f32, shift_x: f32, shift_y: f32) -> Option<Rect<i32>>","parent":null,"children":[],"decl_id":null,"docs":" like `get_codepoint_bitmap_box_subpixel`, but takes a glyph index\n instead of a codepoint.\n","sig":null,"attributes":[{"value":"/ like `get_codepoint_bitmap_box_subpixel`, but takes a glyph index","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":39539,"byte_end":39608,"line_start":1155,"line_end":1155,"column_start":5,"column_end":74}},{"value":"/ instead of a codepoint.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":39613,"byte_end":39640,"line_start":1156,"line_end":1156,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":40558,"byte_end":40578,"line_start":1182,"line_end":1182,"column_start":12,"column_end":32},"name":"get_glyph_bitmap_box","qualname":"<FontInfo<Data>>::get_glyph_bitmap_box","value":"fn (&self, glyph: u32, scale_x: f32, scale_y: f32) -> Option<Rect<i32>>","parent":null,"children":[],"decl_id":null,"docs":" like `get_codepoint_bitmap_box`, but takes a glyph index instead of a\n codepoint.\n","sig":null,"attributes":[{"value":"/ like `get_codepoint_bitmap_box`, but takes a glyph index instead of a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":40454,"byte_end":40527,"line_start":1180,"line_end":1180,"column_start":5,"column_end":78}},{"value":"/ codepoint.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":40532,"byte_end":40546,"line_start":1181,"line_end":1181,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":40889,"byte_end":40922,"line_start":1193,"line_end":1193,"column_start":12,"column_end":45},"name":"get_codepoint_bitmap_box_subpixel","qualname":"<FontInfo<Data>>::get_codepoint_bitmap_box_subpixel","value":"fn (&self, codepoint: u32, scale_x: f32, scale_y: f32, shift_x: f32, shift_y: f32) -> Option<Rect<i32>>","parent":null,"children":[],"decl_id":null,"docs":" same as get_codepoint_bitmap_box, but you can specify a subpixel\n shift for the character\n","sig":null,"attributes":[{"value":"/ same as get_codepoint_bitmap_box, but you can specify a subpixel","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":40777,"byte_end":40845,"line_start":1191,"line_end":1191,"column_start":5,"column_end":73}},{"value":"/ shift for the character","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":40850,"byte_end":40877,"line_start":1192,"line_end":1192,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":41648,"byte_end":41672,"line_start":1215,"line_end":1215,"column_start":12,"column_end":36},"name":"get_codepoint_bitmap_box","qualname":"<FontInfo<Data>>::get_codepoint_bitmap_box","value":"fn (&self, codepoint: u32, scale_x: f32, scale_y: f32) -> Option<Rect<i32>>","parent":null,"children":[],"decl_id":null,"docs":" get the bounding box of the bitmap centered around the glyph origin; so\n the bitmap width is x1-x0, height is y1-y0, and location to place\n the bitmap top left is (left_side_bearing*scale, y0).\n (Note that the bitmap uses y-increases-down, but the shape uses\n y-increases-up, so CodepointBitmapBox and CodepointBox are inverted.)\n","sig":null,"attributes":[{"value":"/ get the bounding box of the bitmap centered around the glyph origin; so","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":41275,"byte_end":41350,"line_start":1210,"line_end":1210,"column_start":5,"column_end":80}},{"value":"/ the bitmap width is x1-x0, height is y1-y0, and location to place","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":41355,"byte_end":41424,"line_start":1211,"line_end":1211,"column_start":5,"column_end":74}},{"value":"/ the bitmap top left is (left_side_bearing*scale, y0).","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":41429,"byte_end":41486,"line_start":1212,"line_end":1212,"column_start":5,"column_end":62}},{"value":"/ (Note that the bitmap uses y-increases-down, but the shape uses","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":41491,"byte_end":41558,"line_start":1213,"line_end":1213,"column_start":5,"column_end":72}},{"value":"/ y-increases-up, so CodepointBitmapBox and CodepointBox are inverted.)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":41563,"byte_end":41636,"line_start":1214,"line_end":1214,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":41890,"byte_end":41911,"line_start":1224,"line_end":1224,"column_start":12,"column_end":33},"name":"get_font_name_strings","qualname":"<FontInfo<Data>>::get_font_name_strings","value":"fn (&self) -> FontNameIter<'_, Data>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":526},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":42509,"byte_end":42521,"line_start":1247,"line_end":1247,"column_start":12,"column_end":24},"name":"FontNameIter","qualname":"::FontNameIter","value":"FontNameIter {  }","parent":null,"children":[{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532}],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":1618,"byte_end":1624,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":10}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":11437,"byte_end":11445,"line_start":424,"line_end":424,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":42782,"byte_end":42794,"line_start":1257,"line_end":1257,"column_start":56,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":1618,"byte_end":1624,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":97},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":11437,"byte_end":11445,"line_start":424,"line_end":424,"column_start":34,"column_end":42},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":76},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.3.1/src/lib.rs","byte_start":42782,"byte_end":42794,"line_start":1257,"line_end":1257,"column_start":56,"column_end":68},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":526},"to":{"krate":2,"index":4773}}]}