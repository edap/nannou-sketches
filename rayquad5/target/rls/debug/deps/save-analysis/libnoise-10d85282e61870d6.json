{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0","program":"/home/dapx/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","noise","/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"image\"","-C","metadata=10d85282e61870d6","-C","extra-filename=-10d85282e61870d6","--out-dir","/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps","-L","dependency=/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps","--extern","image=/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps/libimage-4845f99b3b0a3f0b.rmeta","--extern","rand=/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps/librand-307db681044a6d5b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/dapx/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps/libnoise-10d85282e61870d6.rmeta"},"prelude":{"crate_id":{"name":"noise","disambiguator":[7656252725732076604,7373623940726056637]},"crate_root":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src","external_crates":[{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6528836112941390771,2028724122443642861]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14673858572786541001,1892137737928154225]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17117278319981904138,16406771668640906211]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11917984669602857069,6489053565454986112]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12362109612685904499,382626321872987168]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4151571022625212401,1888722734493896023]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4322023011642103678,14222697504055880771]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8420579222726968489,9136630199856205157]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[13745492306750544571,5475822973716876235]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14030493773096865675,2651053314204399788]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[8310449678941769819,14748581810882876583]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17983290995241619958,6056021938633518527]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2836549575564442446,8627689666430273126]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7274711288869898279,15671112109327640352]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":15,"id":{"name":"image","disambiguator":[24928829995588280,1201667586126667282]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":16,"id":{"name":"byteorder","disambiguator":[10719404080946289605,17148540255389135738]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":17,"id":{"name":"num_iter","disambiguator":[6584923289254514014,2865933681195123743]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":18,"id":{"name":"num_integer","disambiguator":[6180277847919311141,9508011011995319903]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":19,"id":{"name":"num_traits","disambiguator":[2136015123687830033,9735163811384062178]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":20,"id":{"name":"num_rational","disambiguator":[8068374260385938522,11067452832810213347]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":21,"id":{"name":"num_traits","disambiguator":[10506909453415774854,4152207850139119819]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":22,"id":{"name":"enum_primitive","disambiguator":[13412750441329554090,8945092151666615093]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":23,"id":{"name":"png","disambiguator":[14675564035720060475,16885379398794517166]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":24,"id":{"name":"bitflags","disambiguator":[381175081479133518,10994153786536176848]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":25,"id":{"name":"inflate","disambiguator":[17189506687664423442,15825522990429631823]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":26,"id":{"name":"adler32","disambiguator":[3443978572153514469,7524890204773834207]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":27,"id":{"name":"deflate","disambiguator":[14025782224288557181,3180970696576660206]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":28,"id":{"name":"jpeg_decoder","disambiguator":[13405776218821339638,1614572785726824545]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":29,"id":{"name":"rayon","disambiguator":[8837301931256387038,276227745869652756]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":30,"id":{"name":"either","disambiguator":[8884923402393253072,6032429501630248164]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":31,"id":{"name":"rayon_core","disambiguator":[3112109727074155044,3534036274552798731]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":32,"id":{"name":"crossbeam_channel","disambiguator":[15693235806395740041,13675018967709397917]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":33,"id":{"name":"crossbeam_utils","disambiguator":[12815700305172623123,14563506393251252287]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":34,"id":{"name":"cfg_if","disambiguator":[905820604123660737,9080961431952796619]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":35,"id":{"name":"lazy_static","disambiguator":[9660684555614800310,8568331244489293542]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":36,"id":{"name":"maybe_uninit","disambiguator":[9925295721960399709,5075810066591430732]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":37,"id":{"name":"crossbeam_deque","disambiguator":[5235303285713816219,1168591414518111885]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":38,"id":{"name":"crossbeam_epoch","disambiguator":[17163470530562775512,8709529870593392442]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":39,"id":{"name":"memoffset","disambiguator":[2892690869131483658,14795605606618073579]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":40,"id":{"name":"scopeguard","disambiguator":[5081943333480440636,9076196664652206448]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":41,"id":{"name":"num_cpus","disambiguator":[5911647018467507976,7042850928943217931]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":42,"id":{"name":"libc","disambiguator":[7997064065336242500,8511025302220419458]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":43,"id":{"name":"gif","disambiguator":[13339426788089877232,7792866992348785435]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":44,"id":{"name":"lzw","disambiguator":[6781108430713733430,15744139706019695448]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":45,"id":{"name":"color_quant","disambiguator":[3826272445679226980,17242466669529815838]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":46,"id":{"name":"scoped_threadpool","disambiguator":[17785970441717650540,6630389159409945323]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":47,"id":{"name":"rand","disambiguator":[2815223778096360559,17926070873134856200]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":48,"id":{"name":"rand_core","disambiguator":[10648230044596309578,16806655639517212510]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","num":49,"id":{"name":"rand_core","disambiguator":[16904693690870950492,3822915001042359838]}}],"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","byte_start":0,"byte_end":454,"line_start":1,"line_end":25,"column_start":1,"column_end":15}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":21},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","byte_start":331,"byte_end":337,"line_start":18,"line_end":18,"column_start":16,"column_end":22},"alias_span":null,"name":"Point2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":24},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","byte_start":339,"byte_end":345,"line_start":18,"line_end":18,"column_start":24,"column_end":30},"alias_span":null,"name":"Point3","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":27},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","byte_start":347,"byte_end":353,"line_start":18,"line_end":18,"column_start":32,"column_end":38},"alias_span":null,"name":"Point4","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","byte_start":375,"byte_end":376,"line_start":19,"line_end":19,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/mod.rs","byte_start":181395,"byte_end":181396,"line_start":1,"line_end":1,"column_start":31,"column_end":32},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1096}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/mod.rs","byte_start":181395,"byte_end":181396,"line_start":1,"line_end":1,"column_start":31,"column_end":32},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1096}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/mod.rs","byte_start":181395,"byte_end":181396,"line_start":1,"line_end":1,"column_start":31,"column_end":32},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1096}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/mod.rs","byte_start":181395,"byte_end":181396,"line_start":1,"line_end":1,"column_start":31,"column_end":32},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1096}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/mod.rs","byte_start":181395,"byte_end":181396,"line_start":1,"line_end":1,"column_start":31,"column_end":32},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1096}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","byte_start":0,"byte_end":454,"line_start":1,"line_end":25,"column_start":1,"column_end":15},"name":"","qualname":"::","value":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":131},{"krate":0,"index":1068},{"krate":0,"index":1096}],"decl_id":null,"docs":" A procedural noise generation library for Rust.","sig":null,"attributes":[{"value":"! A procedural noise generation library for Rust.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","byte_start":0,"byte_end":51,"line_start":1,"line_end":1,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","byte_start":52,"byte_end":55,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! # Example","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","byte_start":56,"byte_end":69,"line_start":3,"line_end":3,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","byte_start":70,"byte_end":73,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","byte_start":74,"byte_end":85,"line_start":5,"line_end":5,"column_start":1,"column_end":12}},{"value":"! use noise::{NoiseFn, Perlin};","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","byte_start":86,"byte_end":119,"line_start":6,"line_end":6,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","byte_start":120,"byte_end":123,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! let perlin = Perlin::new();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","byte_start":124,"byte_end":155,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"! let val = perlin.get([42.4, 37.7, 2.8]);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","byte_start":156,"byte_end":200,"line_start":9,"line_end":9,"column_start":1,"column_end":45}},{"value":"! ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","byte_start":201,"byte_end":208,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"deny(missing_copy_implementations)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","byte_start":210,"byte_end":248,"line_start":12,"line_end":12,"column_start":1,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":21},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/math.rs","byte_start":5784,"byte_end":5790,"line_start":15,"line_end":15,"column_start":10,"column_end":16},"name":"Point2","qualname":"::math::Point2","value":"[T; 2]","parent":null,"children":[],"decl_id":null,"docs":" A 2-dimensional point. This is a fixed sized array, so should be compatible\n with most linear algebra libraries.\n","sig":null,"attributes":[{"value":"/ A 2-dimensional point. This is a fixed sized array, so should be compatible","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/math.rs","byte_start":5655,"byte_end":5734,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ with most linear algebra libraries.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/math.rs","byte_start":5735,"byte_end":5774,"line_start":14,"line_end":14,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":24},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/math.rs","byte_start":5934,"byte_end":5940,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"name":"Point3","qualname":"::math::Point3","value":"[T; 3]","parent":null,"children":[],"decl_id":null,"docs":" A 3-dimensional point. This is a fixed sized array, so should be compatible\n with most linear algebra libraries.\n","sig":null,"attributes":[{"value":"/ A 3-dimensional point. This is a fixed sized array, so should be compatible","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/math.rs","byte_start":5805,"byte_end":5884,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ with most linear algebra libraries.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/math.rs","byte_start":5885,"byte_end":5924,"line_start":18,"line_end":18,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":27},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/math.rs","byte_start":6084,"byte_end":6090,"line_start":23,"line_end":23,"column_start":10,"column_end":16},"name":"Point4","qualname":"::math::Point4","value":"[T; 4]","parent":null,"children":[],"decl_id":null,"docs":" A 4-dimensional point. This is a fixed sized array, so should be compatible\n with most linear algebra libraries.\n","sig":null,"attributes":[{"value":"/ A 4-dimensional point. This is a fixed sized array, so should be compatible","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/math.rs","byte_start":5955,"byte_end":6034,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ with most linear algebra libraries.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/math.rs","byte_start":6035,"byte_end":6074,"line_start":22,"line_end":22,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1313},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/cache.rs","byte_start":15543,"byte_end":15548,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"name":"Cache","qualname":"::noise_fns::cache::Cache","value":"Cache { source }","parent":null,"children":[{"krate":0,"index":1315},{"krate":0,"index":1316},{"krate":0,"index":1317}],"decl_id":null,"docs":" Noise function that caches the last output value generated by the source\n function.","sig":null,"attributes":[{"value":"/ Noise function that caches the last output value generated by the source","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/cache.rs","byte_start":14816,"byte_end":14892,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ function.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/cache.rs","byte_start":14893,"byte_end":14906,"line_start":6,"line_end":6,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/cache.rs","byte_start":14907,"byte_end":14910,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ If the input coordinates passed to `Cache::get` are equal to the previous","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/cache.rs","byte_start":14911,"byte_end":14988,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ call, the function returns the cached result of the previous call to","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/cache.rs","byte_start":14989,"byte_end":15061,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/ `Source::get`. Otherwise, `Source::get` is called with the new coordinates,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/cache.rs","byte_start":15062,"byte_end":15141,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ overwriting the cache with the result, and returning the result to the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/cache.rs","byte_start":15142,"byte_end":15216,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ caller.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/cache.rs","byte_start":15217,"byte_end":15228,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/cache.rs","byte_start":15229,"byte_end":15232,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Caching a noise function is useful if it is used as a source function for","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/cache.rs","byte_start":15233,"byte_end":15310,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ multiple noise functions. If a source function is not cached, the source","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/cache.rs","byte_start":15311,"byte_end":15387,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ function will redundantly calculate the same output value once for each","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/cache.rs","byte_start":15388,"byte_end":15463,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ noise function in which it is included.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/cache.rs","byte_start":15464,"byte_end":15507,"line_start":17,"line_end":17,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1315},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/cache.rs","byte_start":15607,"byte_end":15613,"line_start":21,"line_end":21,"column_start":9,"column_end":15},"name":"source","qualname":"::noise_fns::cache::Cache::source","value":"Source","parent":{"krate":0,"index":1313},"children":[],"decl_id":null,"docs":" Outputs the value to be cached.\n","sig":null,"attributes":[{"value":"/ Outputs the value to be cached.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/cache.rs","byte_start":15563,"byte_end":15598,"line_start":20,"line_end":20,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/cache.rs","byte_start":15728,"byte_end":15731,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<Cache<Source>>::new","value":"fn (source: Source) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":167},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/add.rs","byte_start":17952,"byte_end":17955,"line_start":5,"line_end":5,"column_start":12,"column_end":15},"name":"Add","qualname":"::noise_fns::combiners::add::Add","value":"Add { source1, source2 }","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171}],"decl_id":null,"docs":" Noise function that outputs the sum of the two output values from two source\n functions.\n","sig":null,"attributes":[{"value":"/ Noise function that outputs the sum of the two output values from two source","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/add.rs","byte_start":17845,"byte_end":17925,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ functions.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/add.rs","byte_start":17926,"byte_end":17940,"line_start":4,"line_end":4,"column_start":1,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":170},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/add.rs","byte_start":18002,"byte_end":18009,"line_start":7,"line_end":7,"column_start":9,"column_end":16},"name":"source1","qualname":"::noise_fns::combiners::add::Add::source1","value":"&'a (dyn noise_fns::NoiseFn<T> + 'a)","parent":{"krate":0,"index":167},"children":[],"decl_id":null,"docs":" Outputs a value.\n","sig":null,"attributes":[{"value":"/ Outputs a value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/add.rs","byte_start":17973,"byte_end":17993,"line_start":6,"line_end":6,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":171},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/add.rs","byte_start":18065,"byte_end":18072,"line_start":10,"line_end":10,"column_start":9,"column_end":16},"name":"source2","qualname":"::noise_fns::combiners::add::Add::source2","value":"&'a (dyn noise_fns::NoiseFn<T> + 'a)","parent":{"krate":0,"index":167},"children":[],"decl_id":null,"docs":" Outputs a value.\n","sig":null,"attributes":[{"value":"/ Outputs a value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/add.rs","byte_start":18036,"byte_end":18056,"line_start":9,"line_end":9,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/add.rs","byte_start":18133,"byte_end":18136,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"new","qualname":"<Add>::new","value":"fn (source1: &'a dyn NoiseFn<T>, source2: &'a dyn NoiseFn<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":182},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/max.rs","byte_start":18546,"byte_end":18549,"line_start":5,"line_end":5,"column_start":12,"column_end":15},"name":"Max","qualname":"::noise_fns::combiners::max::Max","value":"Max { source1, source2 }","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186}],"decl_id":null,"docs":" Noise function that outputs the larger of the two output values from two source\n functions.\n","sig":null,"attributes":[{"value":"/ Noise function that outputs the larger of the two output values from two source","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/max.rs","byte_start":18436,"byte_end":18519,"line_start":3,"line_end":3,"column_start":1,"column_end":84}},{"value":"/ functions.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/max.rs","byte_start":18520,"byte_end":18534,"line_start":4,"line_end":4,"column_start":1,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":185},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/max.rs","byte_start":18596,"byte_end":18603,"line_start":7,"line_end":7,"column_start":9,"column_end":16},"name":"source1","qualname":"::noise_fns::combiners::max::Max::source1","value":"&'a (dyn noise_fns::NoiseFn<T> + 'a)","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Outputs a value.\n","sig":null,"attributes":[{"value":"/ Outputs a value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/max.rs","byte_start":18567,"byte_end":18587,"line_start":6,"line_end":6,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":186},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/max.rs","byte_start":18659,"byte_end":18666,"line_start":10,"line_end":10,"column_start":9,"column_end":16},"name":"source2","qualname":"::noise_fns::combiners::max::Max::source2","value":"&'a (dyn noise_fns::NoiseFn<T> + 'a)","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Outputs a value.\n","sig":null,"attributes":[{"value":"/ Outputs a value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/max.rs","byte_start":18630,"byte_end":18650,"line_start":9,"line_end":9,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/max.rs","byte_start":18727,"byte_end":18730,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"new","qualname":"<Max>::new","value":"fn (source1: &'a dyn NoiseFn<T>, source2: &'a dyn NoiseFn<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":197},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/min.rs","byte_start":19146,"byte_end":19149,"line_start":5,"line_end":5,"column_start":12,"column_end":15},"name":"Min","qualname":"::noise_fns::combiners::min::Min","value":"Min { source1, source2 }","parent":null,"children":[{"krate":0,"index":200},{"krate":0,"index":201}],"decl_id":null,"docs":" Noise function that outputs the smaller of the two output values from two source\n functions.\n","sig":null,"attributes":[{"value":"/ Noise function that outputs the smaller of the two output values from two source","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/min.rs","byte_start":19035,"byte_end":19119,"line_start":3,"line_end":3,"column_start":1,"column_end":85}},{"value":"/ functions.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/min.rs","byte_start":19120,"byte_end":19134,"line_start":4,"line_end":4,"column_start":1,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":200},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/min.rs","byte_start":19196,"byte_end":19203,"line_start":7,"line_end":7,"column_start":9,"column_end":16},"name":"source1","qualname":"::noise_fns::combiners::min::Min::source1","value":"&'a (dyn noise_fns::NoiseFn<T> + 'a)","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" Outputs a value.\n","sig":null,"attributes":[{"value":"/ Outputs a value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/min.rs","byte_start":19167,"byte_end":19187,"line_start":6,"line_end":6,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":201},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/min.rs","byte_start":19259,"byte_end":19266,"line_start":10,"line_end":10,"column_start":9,"column_end":16},"name":"source2","qualname":"::noise_fns::combiners::min::Min::source2","value":"&'a (dyn noise_fns::NoiseFn<T> + 'a)","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" Outputs a value.\n","sig":null,"attributes":[{"value":"/ Outputs a value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/min.rs","byte_start":19230,"byte_end":19250,"line_start":9,"line_end":9,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/min.rs","byte_start":19327,"byte_end":19330,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"new","qualname":"<Min>::new","value":"fn (source1: &'a dyn NoiseFn<T>, source2: &'a dyn NoiseFn<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":212},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/multiply.rs","byte_start":19746,"byte_end":19754,"line_start":5,"line_end":5,"column_start":12,"column_end":20},"name":"Multiply","qualname":"::noise_fns::combiners::multiply::Multiply","value":"Multiply { source1, source2 }","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":216}],"decl_id":null,"docs":" Noise function that outputs the product of the two output values from two source\n functions.\n","sig":null,"attributes":[{"value":"/ Noise function that outputs the product of the two output values from two source","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/multiply.rs","byte_start":19635,"byte_end":19719,"line_start":3,"line_end":3,"column_start":1,"column_end":85}},{"value":"/ functions.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/multiply.rs","byte_start":19720,"byte_end":19734,"line_start":4,"line_end":4,"column_start":1,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":215},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/multiply.rs","byte_start":19801,"byte_end":19808,"line_start":7,"line_end":7,"column_start":9,"column_end":16},"name":"source1","qualname":"::noise_fns::combiners::multiply::Multiply::source1","value":"&'a (dyn noise_fns::NoiseFn<T> + 'a)","parent":{"krate":0,"index":212},"children":[],"decl_id":null,"docs":" Outputs a value.\n","sig":null,"attributes":[{"value":"/ Outputs a value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/multiply.rs","byte_start":19772,"byte_end":19792,"line_start":6,"line_end":6,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":216},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/multiply.rs","byte_start":19864,"byte_end":19871,"line_start":10,"line_end":10,"column_start":9,"column_end":16},"name":"source2","qualname":"::noise_fns::combiners::multiply::Multiply::source2","value":"&'a (dyn noise_fns::NoiseFn<T> + 'a)","parent":{"krate":0,"index":212},"children":[],"decl_id":null,"docs":" Outputs a value.\n","sig":null,"attributes":[{"value":"/ Outputs a value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/multiply.rs","byte_start":19835,"byte_end":19855,"line_start":9,"line_end":9,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/multiply.rs","byte_start":19937,"byte_end":19940,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"new","qualname":"<Multiply>::new","value":"fn (source1: &'a dyn NoiseFn<T>, source2: &'a dyn NoiseFn<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":227},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/power.rs","byte_start":20403,"byte_end":20408,"line_start":5,"line_end":5,"column_start":12,"column_end":17},"name":"Power","qualname":"::noise_fns::combiners::power::Power","value":"Power { source1, source2 }","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231}],"decl_id":null,"docs":" Noise function that raises the output value from the first source function\n to the power of the output value of the second source function.\n","sig":null,"attributes":[{"value":"/ Noise function that raises the output value from the first source function","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/power.rs","byte_start":20245,"byte_end":20323,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ to the power of the output value of the second source function.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/power.rs","byte_start":20324,"byte_end":20391,"line_start":4,"line_end":4,"column_start":1,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":230},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/power.rs","byte_start":20455,"byte_end":20462,"line_start":7,"line_end":7,"column_start":9,"column_end":16},"name":"source1","qualname":"::noise_fns::combiners::power::Power::source1","value":"&'a (dyn noise_fns::NoiseFn<T> + 'a)","parent":{"krate":0,"index":227},"children":[],"decl_id":null,"docs":" Outputs a value.\n","sig":null,"attributes":[{"value":"/ Outputs a value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/power.rs","byte_start":20426,"byte_end":20446,"line_start":6,"line_end":6,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":231},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/power.rs","byte_start":20518,"byte_end":20525,"line_start":10,"line_end":10,"column_start":9,"column_end":16},"name":"source2","qualname":"::noise_fns::combiners::power::Power::source2","value":"&'a (dyn noise_fns::NoiseFn<T> + 'a)","parent":{"krate":0,"index":227},"children":[],"decl_id":null,"docs":" Outputs a value.\n","sig":null,"attributes":[{"value":"/ Outputs a value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/power.rs","byte_start":20489,"byte_end":20509,"line_start":9,"line_end":9,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/power.rs","byte_start":20588,"byte_end":20591,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"new","qualname":"<Power>::new","value":"fn (source1: &'a dyn NoiseFn<T>, source2: &'a dyn NoiseFn<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1324},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/checkerboard.rs","byte_start":21708,"byte_end":21720,"line_start":13,"line_end":13,"column_start":12,"column_end":24},"name":"Checkerboard","qualname":"::noise_fns::generators::checkerboard::Checkerboard","value":"Checkerboard { size }","parent":null,"children":[{"krate":0,"index":1325},{"krate":0,"index":1326}],"decl_id":null,"docs":" Noise function that outputs a checkerboard pattern.","sig":null,"attributes":[{"value":"/ Noise function that outputs a checkerboard pattern.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/checkerboard.rs","byte_start":21320,"byte_end":21375,"line_start":4,"line_end":4,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/checkerboard.rs","byte_start":21376,"byte_end":21379,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This noise function can take one input, size, and outputs 2<sup>size</sup>-sized","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/checkerboard.rs","byte_start":21380,"byte_end":21464,"line_start":6,"line_end":6,"column_start":1,"column_end":85}},{"value":"/ blocks of alternating values. The values of these blocks alternate between","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/checkerboard.rs","byte_start":21465,"byte_end":21543,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ -1.0 and 1.0.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/checkerboard.rs","byte_start":21544,"byte_end":21561,"line_start":8,"line_end":8,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/checkerboard.rs","byte_start":21562,"byte_end":21565,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This noise function is not very useful by itself, but it can be used for","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/checkerboard.rs","byte_start":21566,"byte_end":21642,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ debugging purposes.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/checkerboard.rs","byte_start":21643,"byte_end":21666,"line_start":11,"line_end":11,"column_start":1,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":1325},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/checkerboard.rs","byte_start":21783,"byte_end":21787,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"size","qualname":"::noise_fns::generators::checkerboard::Checkerboard::size","value":"usize","parent":{"krate":0,"index":1324},"children":[],"decl_id":null,"docs":" Controls the size of the block in 2^(size).\n","sig":null,"attributes":[{"value":"/ Controls the size of the block in 2^(size).","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/checkerboard.rs","byte_start":21727,"byte_end":21774,"line_start":14,"line_end":14,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/checkerboard.rs","byte_start":21980,"byte_end":21983,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<Checkerboard>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/checkerboard.rs","byte_start":22106,"byte_end":22114,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"set_size","qualname":"<Checkerboard>::set_size","value":"fn (self, size: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1332},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/constant.rs","byte_start":23503,"byte_end":23511,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"Constant","qualname":"::noise_fns::generators::constant::Constant","value":"Constant { value }","parent":null,"children":[{"krate":0,"index":1333}],"decl_id":null,"docs":" Noise function that outputs a constant value.","sig":null,"attributes":[{"value":"/ Noise function that outputs a constant value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/constant.rs","byte_start":23170,"byte_end":23219,"line_start":3,"line_end":3,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/constant.rs","byte_start":23220,"byte_end":23223,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This function takes a input, value, and returns that input for all points,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/constant.rs","byte_start":23224,"byte_end":23302,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ producing a constant-valued field.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/constant.rs","byte_start":23303,"byte_end":23341,"line_start":6,"line_end":6,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/constant.rs","byte_start":23342,"byte_end":23345,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is not very useful by itself, but can be used as a source","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/constant.rs","byte_start":23346,"byte_end":23421,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ function for other noise functions.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/constant.rs","byte_start":23422,"byte_end":23461,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1333},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/constant.rs","byte_start":23546,"byte_end":23551,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"value","qualname":"::noise_fns::generators::constant::Constant::value","value":"f64","parent":{"krate":0,"index":1332},"children":[],"decl_id":null,"docs":" Constant value.\n","sig":null,"attributes":[{"value":"/ Constant value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/constant.rs","byte_start":23518,"byte_end":23537,"line_start":12,"line_end":12,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/constant.rs","byte_start":23588,"byte_end":23591,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"new","qualname":"<Constant>::new","value":"fn (value: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1339},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/cylinders.rs","byte_start":24135,"byte_end":24144,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"Cylinders","qualname":"::noise_fns::generators::cylinders::Cylinders","value":"Cylinders { frequency }","parent":null,"children":[{"krate":0,"index":1340}],"decl_id":null,"docs":" Noise function that outputs concentric cylinders.","sig":null,"attributes":[{"value":"/ Noise function that outputs concentric cylinders.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/cylinders.rs","byte_start":23813,"byte_end":23866,"line_start":4,"line_end":4,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/cylinders.rs","byte_start":23867,"byte_end":23870,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This noise function outputs concentric cylinders centered on the origin. The","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/cylinders.rs","byte_start":23871,"byte_end":23951,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ cylinders are oriented along the z axis similar to the concentric rings of","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/cylinders.rs","byte_start":23952,"byte_end":24030,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ a tree. Each cylinder extends infinitely along the z axis.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/cylinders.rs","byte_start":24031,"byte_end":24093,"line_start":8,"line_end":8,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":1340},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/cylinders.rs","byte_start":24200,"byte_end":24209,"line_start":12,"line_end":12,"column_start":9,"column_end":18},"name":"frequency","qualname":"::noise_fns::generators::cylinders::Cylinders::frequency","value":"f64","parent":{"krate":0,"index":1339},"children":[],"decl_id":null,"docs":" Frequency of the concentric objects.\n","sig":null,"attributes":[{"value":"/ Frequency of the concentric objects.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/cylinders.rs","byte_start":24151,"byte_end":24191,"line_start":11,"line_end":11,"column_start":5,"column_end":45}}]},{"kind":"Const","id":{"krate":0,"index":285},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/cylinders.rs","byte_start":24250,"byte_end":24267,"line_start":16,"line_end":16,"column_start":15,"column_end":32},"name":"DEFAULT_FREQUENCY","qualname":"::noise_fns::generators::cylinders::Cylinders::DEFAULT_FREQUENCY","value":"f64","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/cylinders.rs","byte_start":24292,"byte_end":24295,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"name":"new","qualname":"<Cylinders>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/cylinders.rs","byte_start":24399,"byte_end":24412,"line_start":24,"line_end":24,"column_start":12,"column_end":25},"name":"set_frequency","qualname":"<Cylinders>::set_frequency","value":"fn (self, frequency: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1346},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":27016,"byte_end":27026,"line_start":17,"line_end":17,"column_start":12,"column_end":22},"name":"BasicMulti","qualname":"::noise_fns::generators::fractals::basicmulti::BasicMulti","value":"BasicMulti { octaves, frequency, lacunarity, persistence }","parent":null,"children":[{"krate":0,"index":1347},{"krate":0,"index":1348},{"krate":0,"index":1349},{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1352}],"decl_id":null,"docs":" Noise function that outputs heterogenous Multifractal noise.","sig":null,"attributes":[{"value":"/ Noise function that outputs heterogenous Multifractal noise.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":26489,"byte_end":26553,"line_start":6,"line_end":6,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":26554,"byte_end":26557,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is a multifractal method, meaning that it has a fractal dimension","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":26558,"byte_end":26632,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ that varies with location.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":26633,"byte_end":26663,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":26664,"byte_end":26667,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The result of this multifractal method is that in areas near zero, higher","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":26668,"byte_end":26745,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ frequencies will be heavily damped, resulting in the terrain remaining","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":26746,"byte_end":26820,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ smooth. As the value moves further away from zero, higher frequencies will","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":26821,"byte_end":26899,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ not be as damped and thus will grow more jagged as iteration progresses.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":26900,"byte_end":26976,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":26977,"byte_end":26980,"line_start":15,"line_end":15,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":1347},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":27311,"byte_end":27318,"line_start":23,"line_end":23,"column_start":9,"column_end":16},"name":"octaves","qualname":"::noise_fns::generators::fractals::basicmulti::BasicMulti::octaves","value":"usize","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":" Total number of frequency octaves to generate the noise with.","sig":null,"attributes":[{"value":"/ Total number of frequency octaves to generate the noise with.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":27033,"byte_end":27098,"line_start":18,"line_end":18,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":27103,"byte_end":27106,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ The number of octaves control the _amount of detail_ in the noise","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":27111,"byte_end":27180,"line_start":20,"line_end":20,"column_start":5,"column_end":74}},{"value":"/ function. Adding more octaves increases the detail, with the drawback","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":27185,"byte_end":27258,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ of increasing the calculation time.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":27263,"byte_end":27302,"line_start":22,"line_end":22,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1348},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":27414,"byte_end":27423,"line_start":26,"line_end":26,"column_start":9,"column_end":18},"name":"frequency","qualname":"::noise_fns::generators::fractals::basicmulti::BasicMulti::frequency","value":"f64","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":" The number of cycles per unit length that the noise function outputs.\n","sig":null,"attributes":[{"value":"/ The number of cycles per unit length that the noise function outputs.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":27332,"byte_end":27405,"line_start":25,"line_end":25,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":1349},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":27861,"byte_end":27871,"line_start":36,"line_end":36,"column_start":9,"column_end":19},"name":"lacunarity","qualname":"::noise_fns::generators::fractals::basicmulti::BasicMulti::lacunarity","value":"f64","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":" A multiplier that determines how quickly the frequency increases for\n each successive octave in the noise function.","sig":null,"attributes":[{"value":"/ A multiplier that determines how quickly the frequency increases for","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":27435,"byte_end":27507,"line_start":28,"line_end":28,"column_start":5,"column_end":77}},{"value":"/ each successive octave in the noise function.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":27512,"byte_end":27561,"line_start":29,"line_end":29,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":27566,"byte_end":27569,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ The frequency of each successive octave is equal to the product of the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":27574,"byte_end":27648,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ previous octave's frequency and the lacunarity value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":27653,"byte_end":27710,"line_start":32,"line_end":32,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":27715,"byte_end":27718,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ A lacunarity of 2.0 results in the frequency doubling every octave. For","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":27723,"byte_end":27798,"line_start":34,"line_end":34,"column_start":5,"column_end":80}},{"value":"/ almost all cases, 2.0 is a good value to use.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":27803,"byte_end":27852,"line_start":35,"line_end":35,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1350},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":28229,"byte_end":28240,"line_start":44,"line_end":44,"column_start":9,"column_end":20},"name":"persistence","qualname":"::noise_fns::generators::fractals::basicmulti::BasicMulti::persistence","value":"f64","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":" A multiplier that determines how quickly the amplitudes diminish for\n each successive octave in the noise function.","sig":null,"attributes":[{"value":"/ A multiplier that determines how quickly the amplitudes diminish for","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":27883,"byte_end":27955,"line_start":38,"line_end":38,"column_start":5,"column_end":77}},{"value":"/ each successive octave in the noise function.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":27960,"byte_end":28009,"line_start":39,"line_end":39,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":28014,"byte_end":28017,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ The amplitude of each successive octave is equal to the product of the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":28022,"byte_end":28096,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/ previous octave's amplitude and the persistence value. Increasing the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":28101,"byte_end":28174,"line_start":42,"line_end":42,"column_start":5,"column_end":78}},{"value":"/ persistence produces \"rougher\" noise.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":28179,"byte_end":28220,"line_start":43,"line_end":43,"column_start":5,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":316},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":28324,"byte_end":28336,"line_start":51,"line_end":51,"column_start":15,"column_end":27},"name":"DEFAULT_SEED","qualname":"::noise_fns::generators::fractals::basicmulti::BasicMulti::DEFAULT_SEED","value":"u32","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":317},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":28361,"byte_end":28376,"line_start":52,"line_end":52,"column_start":15,"column_end":30},"name":"DEFAULT_OCTAVES","qualname":"::noise_fns::generators::fractals::basicmulti::BasicMulti::DEFAULT_OCTAVES","value":"usize","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":318},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":28403,"byte_end":28420,"line_start":53,"line_end":53,"column_start":15,"column_end":32},"name":"DEFAULT_FREQUENCY","qualname":"::noise_fns::generators::fractals::basicmulti::BasicMulti::DEFAULT_FREQUENCY","value":"f64","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":319},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":28447,"byte_end":28465,"line_start":54,"line_end":54,"column_start":15,"column_end":33},"name":"DEFAULT_LACUNARITY","qualname":"::noise_fns::generators::fractals::basicmulti::BasicMulti::DEFAULT_LACUNARITY","value":"f64","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":320},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":28521,"byte_end":28540,"line_start":55,"line_end":55,"column_start":15,"column_end":34},"name":"DEFAULT_PERSISTENCE","qualname":"::noise_fns::generators::fractals::basicmulti::BasicMulti::DEFAULT_PERSISTENCE","value":"f64","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":321},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":28567,"byte_end":28578,"line_start":56,"line_end":56,"column_start":15,"column_end":26},"name":"MAX_OCTAVES","qualname":"::noise_fns::generators::fractals::basicmulti::BasicMulti::MAX_OCTAVES","value":"usize","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":28604,"byte_end":28607,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<BasicMulti>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1357},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":33553,"byte_end":33559,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"Billow","qualname":"::noise_fns::generators::fractals::billow::Billow","value":"Billow { octaves, frequency, lacunarity, persistence }","parent":null,"children":[{"krate":0,"index":1358},{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1363}],"decl_id":null,"docs":" Noise function that outputs \"billowy\" noise.","sig":null,"attributes":[{"value":"/ Noise function that outputs \"billowy\" noise.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":33182,"byte_end":33230,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":33231,"byte_end":33234,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This noise function produces \"billowy\" noise suitable for clouds and rocks.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":33235,"byte_end":33314,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":33315,"byte_end":33318,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This noise function is nearly identical to fBm noise, except this noise","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":33319,"byte_end":33394,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ function modifies each octave with an absolute-value function. See the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":33395,"byte_end":33469,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ documentation for fBm for more information.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":33470,"byte_end":33517,"line_start":11,"line_end":11,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":1358},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":33844,"byte_end":33851,"line_start":19,"line_end":19,"column_start":9,"column_end":16},"name":"octaves","qualname":"::noise_fns::generators::fractals::billow::Billow::octaves","value":"usize","parent":{"krate":0,"index":1357},"children":[],"decl_id":null,"docs":" Total number of frequency octaves to generate the noise with.","sig":null,"attributes":[{"value":"/ Total number of frequency octaves to generate the noise with.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":33566,"byte_end":33631,"line_start":14,"line_end":14,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":33636,"byte_end":33639,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ The number of octaves control the _amount of detail_ in the noise","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":33644,"byte_end":33713,"line_start":16,"line_end":16,"column_start":5,"column_end":74}},{"value":"/ function. Adding more octaves increases the detail, with the drawback","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":33718,"byte_end":33791,"line_start":17,"line_end":17,"column_start":5,"column_end":78}},{"value":"/ of increasing the calculation time.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":33796,"byte_end":33835,"line_start":18,"line_end":18,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1359},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":33947,"byte_end":33956,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"name":"frequency","qualname":"::noise_fns::generators::fractals::billow::Billow::frequency","value":"f64","parent":{"krate":0,"index":1357},"children":[],"decl_id":null,"docs":" The number of cycles per unit length that the noise function outputs.\n","sig":null,"attributes":[{"value":"/ The number of cycles per unit length that the noise function outputs.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":33865,"byte_end":33938,"line_start":21,"line_end":21,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":1360},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":34394,"byte_end":34404,"line_start":32,"line_end":32,"column_start":9,"column_end":19},"name":"lacunarity","qualname":"::noise_fns::generators::fractals::billow::Billow::lacunarity","value":"f64","parent":{"krate":0,"index":1357},"children":[],"decl_id":null,"docs":" A multiplier that determines how quickly the frequency increases for\n each successive octave in the noise function.","sig":null,"attributes":[{"value":"/ A multiplier that determines how quickly the frequency increases for","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":33968,"byte_end":34040,"line_start":24,"line_end":24,"column_start":5,"column_end":77}},{"value":"/ each successive octave in the noise function.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":34045,"byte_end":34094,"line_start":25,"line_end":25,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":34099,"byte_end":34102,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ The frequency of each successive octave is equal to the product of the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":34107,"byte_end":34181,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ previous octave's frequency and the lacunarity value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":34186,"byte_end":34243,"line_start":28,"line_end":28,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":34248,"byte_end":34251,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ A lacunarity of 2.0 results in the frequency doubling every octave. For","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":34256,"byte_end":34331,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/ almost all cases, 2.0 is a good value to use.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":34336,"byte_end":34385,"line_start":31,"line_end":31,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1361},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":34762,"byte_end":34773,"line_start":40,"line_end":40,"column_start":9,"column_end":20},"name":"persistence","qualname":"::noise_fns::generators::fractals::billow::Billow::persistence","value":"f64","parent":{"krate":0,"index":1357},"children":[],"decl_id":null,"docs":" A multiplier that determines how quickly the amplitudes diminish for\n each successive octave in the noise function.","sig":null,"attributes":[{"value":"/ A multiplier that determines how quickly the amplitudes diminish for","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":34416,"byte_end":34488,"line_start":34,"line_end":34,"column_start":5,"column_end":77}},{"value":"/ each successive octave in the noise function.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":34493,"byte_end":34542,"line_start":35,"line_end":35,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":34547,"byte_end":34550,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ The amplitude of each successive octave is equal to the product of the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":34555,"byte_end":34629,"line_start":37,"line_end":37,"column_start":5,"column_end":79}},{"value":"/ previous octave's amplitude and the persistence value. Increasing the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":34634,"byte_end":34707,"line_start":38,"line_end":38,"column_start":5,"column_end":78}},{"value":"/ persistence produces \"rougher\" noise.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":34712,"byte_end":34753,"line_start":39,"line_end":39,"column_start":5,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":353},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":34853,"byte_end":34865,"line_start":47,"line_end":47,"column_start":15,"column_end":27},"name":"DEFAULT_SEED","qualname":"::noise_fns::generators::fractals::billow::Billow::DEFAULT_SEED","value":"u32","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":354},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":34890,"byte_end":34910,"line_start":48,"line_end":48,"column_start":15,"column_end":35},"name":"DEFAULT_OCTAVE_COUNT","qualname":"::noise_fns::generators::fractals::billow::Billow::DEFAULT_OCTAVE_COUNT","value":"usize","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":355},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":34937,"byte_end":34954,"line_start":49,"line_end":49,"column_start":15,"column_end":32},"name":"DEFAULT_FREQUENCY","qualname":"::noise_fns::generators::fractals::billow::Billow::DEFAULT_FREQUENCY","value":"f64","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":356},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":34981,"byte_end":34999,"line_start":50,"line_end":50,"column_start":15,"column_end":33},"name":"DEFAULT_LACUNARITY","qualname":"::noise_fns::generators::fractals::billow::Billow::DEFAULT_LACUNARITY","value":"f64","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":357},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":35055,"byte_end":35074,"line_start":51,"line_end":51,"column_start":15,"column_end":34},"name":"DEFAULT_PERSISTENCE","qualname":"::noise_fns::generators::fractals::billow::Billow::DEFAULT_PERSISTENCE","value":"f64","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":358},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":35101,"byte_end":35112,"line_start":52,"line_end":52,"column_start":15,"column_end":26},"name":"MAX_OCTAVES","qualname":"::noise_fns::generators::fractals::billow::Billow::MAX_OCTAVES","value":"usize","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":35138,"byte_end":35141,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"new","qualname":"<Billow>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1368},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":40217,"byte_end":40220,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"Fbm","qualname":"::noise_fns::generators::fractals::fbm::Fbm","value":"Fbm { octaves, frequency, lacunarity, persistence }","parent":null,"children":[{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1374}],"decl_id":null,"docs":" Noise function that outputs fBm (fractal Brownian motion) noise.","sig":null,"attributes":[{"value":"/ Noise function that outputs fBm (fractal Brownian motion) noise.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":39387,"byte_end":39455,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":39456,"byte_end":39459,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ fBm is a _monofractal_ method. In essence, fBm has a _constant_ fractal","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":39460,"byte_end":39535,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ dimension. It is as close to statistically _homogeneous_ and _isotropic_","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":39536,"byte_end":39612,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ as possible. Homogeneous means \"the same everywhere\" and isotropic means","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":39613,"byte_end":39689,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ \"the same in all directions\" (note that the two do not mean the same","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":39690,"byte_end":39762,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ thing).","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":39763,"byte_end":39774,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":39775,"byte_end":39778,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The main difference between fractal Brownian motion and regular Brownian","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":39779,"byte_end":39855,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ motion is that while the increments in Brownian motion are independent,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":39856,"byte_end":39931,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"/ the increments in fractal Brownian motion depend on the previous increment.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":39932,"byte_end":40011,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":40012,"byte_end":40015,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ fBm is the result of several noise functions of ever-increasing frequency","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":40016,"byte_end":40093,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"/ and ever-decreasing amplitude.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":40094,"byte_end":40128,"line_start":19,"line_end":19,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":40129,"byte_end":40132,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fBm is commonly referred to as Perlin noise.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":40133,"byte_end":40181,"line_start":21,"line_end":21,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":1369},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":40505,"byte_end":40512,"line_start":29,"line_end":29,"column_start":9,"column_end":16},"name":"octaves","qualname":"::noise_fns::generators::fractals::fbm::Fbm::octaves","value":"usize","parent":{"krate":0,"index":1368},"children":[],"decl_id":null,"docs":" Total number of frequency octaves to generate the noise with.","sig":null,"attributes":[{"value":"/ Total number of frequency octaves to generate the noise with.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":40227,"byte_end":40292,"line_start":24,"line_end":24,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":40297,"byte_end":40300,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ The number of octaves control the _amount of detail_ in the noise","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":40305,"byte_end":40374,"line_start":26,"line_end":26,"column_start":5,"column_end":74}},{"value":"/ function. Adding more octaves increases the detail, with the drawback","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":40379,"byte_end":40452,"line_start":27,"line_end":27,"column_start":5,"column_end":78}},{"value":"/ of increasing the calculation time.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":40457,"byte_end":40496,"line_start":28,"line_end":28,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1370},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":40608,"byte_end":40617,"line_start":32,"line_end":32,"column_start":9,"column_end":18},"name":"frequency","qualname":"::noise_fns::generators::fractals::fbm::Fbm::frequency","value":"f64","parent":{"krate":0,"index":1368},"children":[],"decl_id":null,"docs":" The number of cycles per unit length that the noise function outputs.\n","sig":null,"attributes":[{"value":"/ The number of cycles per unit length that the noise function outputs.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":40526,"byte_end":40599,"line_start":31,"line_end":31,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":1371},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":41055,"byte_end":41065,"line_start":42,"line_end":42,"column_start":9,"column_end":19},"name":"lacunarity","qualname":"::noise_fns::generators::fractals::fbm::Fbm::lacunarity","value":"f64","parent":{"krate":0,"index":1368},"children":[],"decl_id":null,"docs":" A multiplier that determines how quickly the frequency increases for\n each successive octave in the noise function.","sig":null,"attributes":[{"value":"/ A multiplier that determines how quickly the frequency increases for","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":40629,"byte_end":40701,"line_start":34,"line_end":34,"column_start":5,"column_end":77}},{"value":"/ each successive octave in the noise function.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":40706,"byte_end":40755,"line_start":35,"line_end":35,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":40760,"byte_end":40763,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ The frequency of each successive octave is equal to the product of the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":40768,"byte_end":40842,"line_start":37,"line_end":37,"column_start":5,"column_end":79}},{"value":"/ previous octave's frequency and the lacunarity value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":40847,"byte_end":40904,"line_start":38,"line_end":38,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":40909,"byte_end":40912,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ A lacunarity of 2.0 results in the frequency doubling every octave. For","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":40917,"byte_end":40992,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ almost all cases, 2.0 is a good value to use.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":40997,"byte_end":41046,"line_start":41,"line_end":41,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1372},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":41423,"byte_end":41434,"line_start":50,"line_end":50,"column_start":9,"column_end":20},"name":"persistence","qualname":"::noise_fns::generators::fractals::fbm::Fbm::persistence","value":"f64","parent":{"krate":0,"index":1368},"children":[],"decl_id":null,"docs":" A multiplier that determines how quickly the amplitudes diminish for\n each successive octave in the noise function.","sig":null,"attributes":[{"value":"/ A multiplier that determines how quickly the amplitudes diminish for","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":41077,"byte_end":41149,"line_start":44,"line_end":44,"column_start":5,"column_end":77}},{"value":"/ each successive octave in the noise function.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":41154,"byte_end":41203,"line_start":45,"line_end":45,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":41208,"byte_end":41211,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ The amplitude of each successive octave is equal to the product of the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":41216,"byte_end":41290,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/ previous octave's amplitude and the persistence value. Increasing the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":41295,"byte_end":41368,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ persistence produces \"rougher\" noise.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":41373,"byte_end":41414,"line_start":49,"line_end":49,"column_start":5,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":389},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":41511,"byte_end":41523,"line_start":57,"line_end":57,"column_start":15,"column_end":27},"name":"DEFAULT_SEED","qualname":"::noise_fns::generators::fractals::fbm::Fbm::DEFAULT_SEED","value":"u32","parent":{"krate":0,"index":388},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":390},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":41548,"byte_end":41568,"line_start":58,"line_end":58,"column_start":15,"column_end":35},"name":"DEFAULT_OCTAVE_COUNT","qualname":"::noise_fns::generators::fractals::fbm::Fbm::DEFAULT_OCTAVE_COUNT","value":"usize","parent":{"krate":0,"index":388},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":391},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":41595,"byte_end":41612,"line_start":59,"line_end":59,"column_start":15,"column_end":32},"name":"DEFAULT_FREQUENCY","qualname":"::noise_fns::generators::fractals::fbm::Fbm::DEFAULT_FREQUENCY","value":"f64","parent":{"krate":0,"index":388},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":392},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":41639,"byte_end":41657,"line_start":60,"line_end":60,"column_start":15,"column_end":33},"name":"DEFAULT_LACUNARITY","qualname":"::noise_fns::generators::fractals::fbm::Fbm::DEFAULT_LACUNARITY","value":"f64","parent":{"krate":0,"index":388},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":393},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":41713,"byte_end":41732,"line_start":61,"line_end":61,"column_start":15,"column_end":34},"name":"DEFAULT_PERSISTENCE","qualname":"::noise_fns::generators::fractals::fbm::Fbm::DEFAULT_PERSISTENCE","value":"f64","parent":{"krate":0,"index":388},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":394},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":41759,"byte_end":41770,"line_start":62,"line_end":62,"column_start":15,"column_end":26},"name":"MAX_OCTAVES","qualname":"::noise_fns::generators::fractals::fbm::Fbm::MAX_OCTAVES","value":"usize","parent":{"krate":0,"index":388},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":41796,"byte_end":41799,"line_start":64,"line_end":64,"column_start":12,"column_end":15},"name":"new","qualname":"<Fbm>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1379},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":46032,"byte_end":46043,"line_start":11,"line_end":11,"column_start":12,"column_end":23},"name":"HybridMulti","qualname":"::noise_fns::generators::fractals::hybridmulti::HybridMulti","value":"HybridMulti { octaves, frequency, lacunarity, persistence }","parent":null,"children":[{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":1385}],"decl_id":null,"docs":" Noise function that outputs hybrid Multifractal noise.","sig":null,"attributes":[{"value":"/ Noise function that outputs hybrid Multifractal noise.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":45814,"byte_end":45872,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":45873,"byte_end":45876,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The result of this multifractal noise is that valleys in the noise should","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":45877,"byte_end":45954,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ have smooth bottoms at all altitudes.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":45955,"byte_end":45996,"line_start":9,"line_end":9,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1380},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":46328,"byte_end":46335,"line_start":17,"line_end":17,"column_start":9,"column_end":16},"name":"octaves","qualname":"::noise_fns::generators::fractals::hybridmulti::HybridMulti::octaves","value":"usize","parent":{"krate":0,"index":1379},"children":[],"decl_id":null,"docs":" Total number of frequency octaves to generate the noise with.","sig":null,"attributes":[{"value":"/ Total number of frequency octaves to generate the noise with.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":46050,"byte_end":46115,"line_start":12,"line_end":12,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":46120,"byte_end":46123,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ The number of octaves control the _amount of detail_ in the noise","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":46128,"byte_end":46197,"line_start":14,"line_end":14,"column_start":5,"column_end":74}},{"value":"/ function. Adding more octaves increases the detail, with the drawback","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":46202,"byte_end":46275,"line_start":15,"line_end":15,"column_start":5,"column_end":78}},{"value":"/ of increasing the calculation time.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":46280,"byte_end":46319,"line_start":16,"line_end":16,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1381},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":46431,"byte_end":46440,"line_start":20,"line_end":20,"column_start":9,"column_end":18},"name":"frequency","qualname":"::noise_fns::generators::fractals::hybridmulti::HybridMulti::frequency","value":"f64","parent":{"krate":0,"index":1379},"children":[],"decl_id":null,"docs":" The number of cycles per unit length that the noise function outputs.\n","sig":null,"attributes":[{"value":"/ The number of cycles per unit length that the noise function outputs.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":46349,"byte_end":46422,"line_start":19,"line_end":19,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":1382},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":46878,"byte_end":46888,"line_start":30,"line_end":30,"column_start":9,"column_end":19},"name":"lacunarity","qualname":"::noise_fns::generators::fractals::hybridmulti::HybridMulti::lacunarity","value":"f64","parent":{"krate":0,"index":1379},"children":[],"decl_id":null,"docs":" A multiplier that determines how quickly the frequency increases for\n each successive octave in the noise function.","sig":null,"attributes":[{"value":"/ A multiplier that determines how quickly the frequency increases for","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":46452,"byte_end":46524,"line_start":22,"line_end":22,"column_start":5,"column_end":77}},{"value":"/ each successive octave in the noise function.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":46529,"byte_end":46578,"line_start":23,"line_end":23,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":46583,"byte_end":46586,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ The frequency of each successive octave is equal to the product of the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":46591,"byte_end":46665,"line_start":25,"line_end":25,"column_start":5,"column_end":79}},{"value":"/ previous octave's frequency and the lacunarity value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":46670,"byte_end":46727,"line_start":26,"line_end":26,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":46732,"byte_end":46735,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ A lacunarity of 2.0 results in the frequency doubling every octave. For","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":46740,"byte_end":46815,"line_start":28,"line_end":28,"column_start":5,"column_end":80}},{"value":"/ almost all cases, 2.0 is a good value to use.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":46820,"byte_end":46869,"line_start":29,"line_end":29,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1383},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":47246,"byte_end":47257,"line_start":38,"line_end":38,"column_start":9,"column_end":20},"name":"persistence","qualname":"::noise_fns::generators::fractals::hybridmulti::HybridMulti::persistence","value":"f64","parent":{"krate":0,"index":1379},"children":[],"decl_id":null,"docs":" A multiplier that determines how quickly the amplitudes diminish for\n each successive octave in the noise function.","sig":null,"attributes":[{"value":"/ A multiplier that determines how quickly the amplitudes diminish for","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":46900,"byte_end":46972,"line_start":32,"line_end":32,"column_start":5,"column_end":77}},{"value":"/ each successive octave in the noise function.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":46977,"byte_end":47026,"line_start":33,"line_end":33,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":47031,"byte_end":47034,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The amplitude of each successive octave is equal to the product of the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":47039,"byte_end":47113,"line_start":35,"line_end":35,"column_start":5,"column_end":79}},{"value":"/ previous octave's amplitude and the persistence value. Increasing the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":47118,"byte_end":47191,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ persistence produces \"rougher\" noise.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":47196,"byte_end":47237,"line_start":37,"line_end":37,"column_start":5,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":425},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":47342,"byte_end":47354,"line_start":45,"line_end":45,"column_start":15,"column_end":27},"name":"DEFAULT_SEED","qualname":"::noise_fns::generators::fractals::hybridmulti::HybridMulti::DEFAULT_SEED","value":"u32","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":426},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":47379,"byte_end":47394,"line_start":46,"line_end":46,"column_start":15,"column_end":30},"name":"DEFAULT_OCTAVES","qualname":"::noise_fns::generators::fractals::hybridmulti::HybridMulti::DEFAULT_OCTAVES","value":"usize","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":427},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":47421,"byte_end":47438,"line_start":47,"line_end":47,"column_start":15,"column_end":32},"name":"DEFAULT_FREQUENCY","qualname":"::noise_fns::generators::fractals::hybridmulti::HybridMulti::DEFAULT_FREQUENCY","value":"f64","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":428},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":47465,"byte_end":47483,"line_start":48,"line_end":48,"column_start":15,"column_end":33},"name":"DEFAULT_LACUNARITY","qualname":"::noise_fns::generators::fractals::hybridmulti::HybridMulti::DEFAULT_LACUNARITY","value":"f64","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":429},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":47539,"byte_end":47558,"line_start":49,"line_end":49,"column_start":15,"column_end":34},"name":"DEFAULT_PERSISTENCE","qualname":"::noise_fns::generators::fractals::hybridmulti::HybridMulti::DEFAULT_PERSISTENCE","value":"f64","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":430},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":47586,"byte_end":47597,"line_start":50,"line_end":50,"column_start":15,"column_end":26},"name":"MAX_OCTAVES","qualname":"::noise_fns::generators::fractals::hybridmulti::HybridMulti::MAX_OCTAVES","value":"usize","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":47623,"byte_end":47626,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"new","qualname":"<HybridMulti>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1390},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":53507,"byte_end":53518,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"name":"RidgedMulti","qualname":"::noise_fns::generators::fractals::ridgedmulti::RidgedMulti","value":"RidgedMulti { octaves, frequency, lacunarity, persistence, attenuation }","parent":null,"children":[{"krate":0,"index":1391},{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1397}],"decl_id":null,"docs":" Noise function that outputs ridged-multifractal noise.","sig":null,"attributes":[{"value":"/ Noise function that outputs ridged-multifractal noise.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":52612,"byte_end":52670,"line_start":5,"line_end":5,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":52671,"byte_end":52674,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This noise function, heavily based on the fBm-noise function, generates","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":52675,"byte_end":52750,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ ridged-multifractal noise. Ridged-multifractal noise is generated in much","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":52751,"byte_end":52828,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ the same way as fBm noise, except the output of each octave is modified by","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":52829,"byte_end":52907,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ an absolute-value function. Modifying the octave values in this way","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":52908,"byte_end":52979,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/ produces ridge-like formations.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":52980,"byte_end":53015,"line_start":11,"line_end":11,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":53016,"byte_end":53019,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The values output from this function will usually range from -1.0 to 1.0 with","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":53020,"byte_end":53101,"line_start":13,"line_end":13,"column_start":1,"column_end":82}},{"value":"/ default values for the parameters, but there are no guarantees that all","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":53102,"byte_end":53177,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ output values will exist within this range. If the parameters are modified","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":53178,"byte_end":53256,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ from their defaults, then the output will need to be scaled to remain in","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":53257,"byte_end":53333,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ the [-1,1] range.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":53334,"byte_end":53355,"line_start":17,"line_end":17,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":53356,"byte_end":53359,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Ridged-multifractal noise is often used to generate craggy mountainous","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":53360,"byte_end":53434,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ terrain or marble-like textures.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":53435,"byte_end":53471,"line_start":20,"line_end":20,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":1391},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":53803,"byte_end":53810,"line_start":28,"line_end":28,"column_start":9,"column_end":16},"name":"octaves","qualname":"::noise_fns::generators::fractals::ridgedmulti::RidgedMulti::octaves","value":"usize","parent":{"krate":0,"index":1390},"children":[],"decl_id":null,"docs":" Total number of frequency octaves to generate the noise with.","sig":null,"attributes":[{"value":"/ Total number of frequency octaves to generate the noise with.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":53525,"byte_end":53590,"line_start":23,"line_end":23,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":53595,"byte_end":53598,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ The number of octaves control the _amount of detail_ in the noise","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":53603,"byte_end":53672,"line_start":25,"line_end":25,"column_start":5,"column_end":74}},{"value":"/ function. Adding more octaves increases the detail, with the drawback","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":53677,"byte_end":53750,"line_start":26,"line_end":26,"column_start":5,"column_end":78}},{"value":"/ of increasing the calculation time.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":53755,"byte_end":53794,"line_start":27,"line_end":27,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1392},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":53906,"byte_end":53915,"line_start":31,"line_end":31,"column_start":9,"column_end":18},"name":"frequency","qualname":"::noise_fns::generators::fractals::ridgedmulti::RidgedMulti::frequency","value":"f64","parent":{"krate":0,"index":1390},"children":[],"decl_id":null,"docs":" The number of cycles per unit length that the noise function outputs.\n","sig":null,"attributes":[{"value":"/ The number of cycles per unit length that the noise function outputs.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":53824,"byte_end":53897,"line_start":30,"line_end":30,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":1393},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":54353,"byte_end":54363,"line_start":41,"line_end":41,"column_start":9,"column_end":19},"name":"lacunarity","qualname":"::noise_fns::generators::fractals::ridgedmulti::RidgedMulti::lacunarity","value":"f64","parent":{"krate":0,"index":1390},"children":[],"decl_id":null,"docs":" A multiplier that determines how quickly the frequency increases for\n each successive octave in the noise function.","sig":null,"attributes":[{"value":"/ A multiplier that determines how quickly the frequency increases for","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":53927,"byte_end":53999,"line_start":33,"line_end":33,"column_start":5,"column_end":77}},{"value":"/ each successive octave in the noise function.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":54004,"byte_end":54053,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":54058,"byte_end":54061,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ The frequency of each successive octave is equal to the product of the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":54066,"byte_end":54140,"line_start":36,"line_end":36,"column_start":5,"column_end":79}},{"value":"/ previous octave's frequency and the lacunarity value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":54145,"byte_end":54202,"line_start":37,"line_end":37,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":54207,"byte_end":54210,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ A lacunarity of 2.0 results in the frequency doubling every octave. For","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":54215,"byte_end":54290,"line_start":39,"line_end":39,"column_start":5,"column_end":80}},{"value":"/ almost all cases, 2.0 is a good value to use.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":54295,"byte_end":54344,"line_start":40,"line_end":40,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1394},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":54721,"byte_end":54732,"line_start":49,"line_end":49,"column_start":9,"column_end":20},"name":"persistence","qualname":"::noise_fns::generators::fractals::ridgedmulti::RidgedMulti::persistence","value":"f64","parent":{"krate":0,"index":1390},"children":[],"decl_id":null,"docs":" A multiplier that determines how quickly the amplitudes diminish for\n each successive octave in the noise function.","sig":null,"attributes":[{"value":"/ A multiplier that determines how quickly the amplitudes diminish for","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":54375,"byte_end":54447,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ each successive octave in the noise function.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":54452,"byte_end":54501,"line_start":44,"line_end":44,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":54506,"byte_end":54509,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ The amplitude of each successive octave is equal to the product of the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":54514,"byte_end":54588,"line_start":46,"line_end":46,"column_start":5,"column_end":79}},{"value":"/ previous octave's amplitude and the persistence value. Increasing the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":54593,"byte_end":54666,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ persistence produces \"rougher\" noise.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":54671,"byte_end":54712,"line_start":48,"line_end":48,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":1395},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":55012,"byte_end":55023,"line_start":55,"line_end":55,"column_start":9,"column_end":20},"name":"attenuation","qualname":"::noise_fns::generators::fractals::ridgedmulti::RidgedMulti::attenuation","value":"f64","parent":{"krate":0,"index":1390},"children":[],"decl_id":null,"docs":" The attenuation to apply to the weight on each octave. This reduces\n the strength of each successive octave, making their respective\n ridges smaller. The default attenuation is 2.0, making each octave\n half the height of the previous.\n","sig":null,"attributes":[{"value":"/ The attenuation to apply to the weight on each octave. This reduces","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":54744,"byte_end":54815,"line_start":51,"line_end":51,"column_start":5,"column_end":76}},{"value":"/ the strength of each successive octave, making their respective","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":54820,"byte_end":54887,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ ridges smaller. The default attenuation is 2.0, making each octave","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":54892,"byte_end":54962,"line_start":53,"line_end":53,"column_start":5,"column_end":75}},{"value":"/ half the height of the previous.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":54967,"byte_end":55003,"line_start":54,"line_end":54,"column_start":5,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":462},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":55108,"byte_end":55120,"line_start":62,"line_end":62,"column_start":15,"column_end":27},"name":"DEFAULT_SEED","qualname":"::noise_fns::generators::fractals::ridgedmulti::RidgedMulti::DEFAULT_SEED","value":"u32","parent":{"krate":0,"index":461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":463},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":55145,"byte_end":55165,"line_start":63,"line_end":63,"column_start":15,"column_end":35},"name":"DEFAULT_OCTAVE_COUNT","qualname":"::noise_fns::generators::fractals::ridgedmulti::RidgedMulti::DEFAULT_OCTAVE_COUNT","value":"usize","parent":{"krate":0,"index":461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":464},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":55192,"byte_end":55209,"line_start":64,"line_end":64,"column_start":15,"column_end":32},"name":"DEFAULT_FREQUENCY","qualname":"::noise_fns::generators::fractals::ridgedmulti::RidgedMulti::DEFAULT_FREQUENCY","value":"f64","parent":{"krate":0,"index":461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":465},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":55236,"byte_end":55254,"line_start":65,"line_end":65,"column_start":15,"column_end":33},"name":"DEFAULT_LACUNARITY","qualname":"::noise_fns::generators::fractals::ridgedmulti::RidgedMulti::DEFAULT_LACUNARITY","value":"f64","parent":{"krate":0,"index":461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":466},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":55310,"byte_end":55329,"line_start":66,"line_end":66,"column_start":15,"column_end":34},"name":"DEFAULT_PERSISTENCE","qualname":"::noise_fns::generators::fractals::ridgedmulti::RidgedMulti::DEFAULT_PERSISTENCE","value":"f64","parent":{"krate":0,"index":461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":467},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":55356,"byte_end":55375,"line_start":67,"line_end":67,"column_start":15,"column_end":34},"name":"DEFAULT_ATTENUATION","qualname":"::noise_fns::generators::fractals::ridgedmulti::RidgedMulti::DEFAULT_ATTENUATION","value":"f64","parent":{"krate":0,"index":461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":468},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":55402,"byte_end":55413,"line_start":68,"line_end":68,"column_start":15,"column_end":26},"name":"MAX_OCTAVES","qualname":"::noise_fns::generators::fractals::ridgedmulti::RidgedMulti::MAX_OCTAVES","value":"usize","parent":{"krate":0,"index":461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":55439,"byte_end":55442,"line_start":70,"line_end":70,"column_start":12,"column_end":15},"name":"new","qualname":"<RidgedMulti>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":55878,"byte_end":55893,"line_start":82,"line_end":82,"column_start":12,"column_end":27},"name":"set_attenuation","qualname":"<RidgedMulti>::set_attenuation","value":"fn (self, attenuation: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":490},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/mod.rs","byte_start":25920,"byte_end":25932,"line_start":16,"line_end":16,"column_start":11,"column_end":23},"name":"MultiFractal","qualname":"::noise_fns::generators::fractals::MultiFractal","value":"MultiFractal","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494}],"decl_id":null,"docs":" Trait for `MultiFractal` functions\n","sig":null,"attributes":[{"value":"/ Trait for `MultiFractal` functions","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/mod.rs","byte_start":25871,"byte_end":25909,"line_start":15,"line_end":15,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/mod.rs","byte_start":25942,"byte_end":25953,"line_start":17,"line_end":17,"column_start":8,"column_end":19},"name":"set_octaves","qualname":"::noise_fns::generators::fractals::MultiFractal::set_octaves","value":"fn (self, octaves: usize) -> Self","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/mod.rs","byte_start":25993,"byte_end":26006,"line_start":19,"line_end":19,"column_start":8,"column_end":21},"name":"set_frequency","qualname":"::noise_fns::generators::fractals::MultiFractal::set_frequency","value":"fn (self, frequency: f64) -> Self","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/mod.rs","byte_start":26046,"byte_end":26060,"line_start":21,"line_end":21,"column_start":8,"column_end":22},"name":"set_lacunarity","qualname":"::noise_fns::generators::fractals::MultiFractal::set_lacunarity","value":"fn (self, lacunarity: f64) -> Self","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/mod.rs","byte_start":26101,"byte_end":26116,"line_start":23,"line_end":23,"column_start":8,"column_end":23},"name":"set_persistence","qualname":"::noise_fns::generators::fractals::MultiFractal::set_persistence","value":"fn (self, persistence: f64) -> Self","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1402},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/open_simplex.rs","byte_start":62763,"byte_end":62774,"line_start":24,"line_end":24,"column_start":12,"column_end":23},"name":"OpenSimplex","qualname":"::noise_fns::generators::open_simplex::OpenSimplex","value":"OpenSimplex {  }","parent":null,"children":[{"krate":0,"index":1403},{"krate":0,"index":1404}],"decl_id":null,"docs":" Noise function that outputs 2/3/4-dimensional Open Simplex noise.\n","sig":null,"attributes":[{"value":"/ Noise function that outputs 2/3/4-dimensional Open Simplex noise.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/open_simplex.rs","byte_start":62652,"byte_end":62721,"line_start":22,"line_end":22,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/open_simplex.rs","byte_start":62893,"byte_end":62896,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<OpenSimplex>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1410},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/perlin.rs","byte_start":85731,"byte_end":85737,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"Perlin","qualname":"::noise_fns::generators::perlin::Perlin","value":"Perlin {  }","parent":null,"children":[{"krate":0,"index":1411},{"krate":0,"index":1412}],"decl_id":null,"docs":" Noise function that outputs 2/3/4-dimensional Perlin noise.\n","sig":null,"attributes":[{"value":"/ Noise function that outputs 2/3/4-dimensional Perlin noise.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/perlin.rs","byte_start":85626,"byte_end":85689,"line_start":6,"line_end":6,"column_start":1,"column_end":64}}]},{"kind":"Const","id":{"krate":0,"index":557},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/perlin.rs","byte_start":85820,"byte_end":85832,"line_start":14,"line_end":14,"column_start":15,"column_end":27},"name":"DEFAULT_SEED","qualname":"::noise_fns::generators::perlin::Perlin::DEFAULT_SEED","value":"u32","parent":{"krate":0,"index":556},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/perlin.rs","byte_start":85855,"byte_end":85858,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<Perlin>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1425},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/super_simplex.rs","byte_start":101765,"byte_end":101777,"line_start":92,"line_end":92,"column_start":12,"column_end":24},"name":"SuperSimplex","qualname":"::noise_fns::generators::super_simplex::SuperSimplex","value":"SuperSimplex {  }","parent":null,"children":[{"krate":0,"index":1426},{"krate":0,"index":1427}],"decl_id":null,"docs":" Noise function that outputs 2/3-dimensional Super Simplex noise.\n","sig":null,"attributes":[{"value":"/ Noise function that outputs 2/3-dimensional Super Simplex noise.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/super_simplex.rs","byte_start":101655,"byte_end":101723,"line_start":90,"line_end":90,"column_start":1,"column_end":69}}]},{"kind":"Const","id":{"krate":0,"index":594},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/super_simplex.rs","byte_start":101866,"byte_end":101878,"line_start":98,"line_end":98,"column_start":15,"column_end":27},"name":"DEFAULT_SEED","qualname":"::noise_fns::generators::super_simplex::SuperSimplex::DEFAULT_SEED","value":"u32","parent":{"krate":0,"index":593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/super_simplex.rs","byte_start":101901,"byte_end":101904,"line_start":100,"line_end":100,"column_start":12,"column_end":15},"name":"new","qualname":"<SuperSimplex>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1433},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/value.rs","byte_start":108514,"byte_end":108519,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"Value","qualname":"::noise_fns::generators::value::Value","value":"Value {  }","parent":null,"children":[{"krate":0,"index":1434},{"krate":0,"index":1435}],"decl_id":null,"docs":" Noise function that outputs 2/3/4-dimensional Value noise.\n","sig":null,"attributes":[{"value":"/ Noise function that outputs 2/3/4-dimensional Value noise.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/value.rs","byte_start":108410,"byte_end":108472,"line_start":6,"line_end":6,"column_start":1,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":621},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/value.rs","byte_start":108601,"byte_end":108613,"line_start":14,"line_end":14,"column_start":15,"column_end":27},"name":"DEFAULT_SEED","qualname":"::noise_fns::generators::value::Value::DEFAULT_SEED","value":"u32","parent":{"krate":0,"index":620},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/value.rs","byte_start":108636,"byte_end":108639,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<Value>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1441},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":116734,"byte_end":116740,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Worley","qualname":"::noise_fns::generators::worley::Worley","value":"Worley { range_function, enable_range, frequency, displacement }","parent":null,"children":[{"krate":0,"index":1442},{"krate":0,"index":1443},{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1446},{"krate":0,"index":1447}],"decl_id":null,"docs":" Noise function that outputs Worley noise.\n","sig":null,"attributes":[{"value":"/ Noise function that outputs Worley noise.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":116647,"byte_end":116692,"line_start":7,"line_end":7,"column_start":1,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":1442},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":116848,"byte_end":116862,"line_start":12,"line_end":12,"column_start":9,"column_end":23},"name":"range_function","qualname":"::noise_fns::generators::worley::Worley::range_function","value":"noise_fns::generators::worley::RangeFunction","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":" Specifies the range function to use when calculating the boundaries of\n the cell.\n","sig":null,"attributes":[{"value":"/ Specifies the range function to use when calculating the boundaries of","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":116747,"byte_end":116821,"line_start":10,"line_end":10,"column_start":5,"column_end":79}},{"value":"/ the cell.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":116826,"byte_end":116839,"line_start":11,"line_end":11,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1443},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":116991,"byte_end":117003,"line_start":16,"line_end":16,"column_start":9,"column_end":21},"name":"enable_range","qualname":"::noise_fns::generators::worley::Worley::enable_range","value":"bool","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":" Determines if the distance from the nearest seed point is applied to\n the output value.\n","sig":null,"attributes":[{"value":"/ Determines if the distance from the nearest seed point is applied to","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":116884,"byte_end":116956,"line_start":14,"line_end":14,"column_start":5,"column_end":77}},{"value":"/ the output value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":116961,"byte_end":116982,"line_start":15,"line_end":15,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":1444},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":117058,"byte_end":117067,"line_start":19,"line_end":19,"column_start":9,"column_end":18},"name":"frequency","qualname":"::noise_fns::generators::worley::Worley::frequency","value":"f64","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":" Frequency of the seed points.\n","sig":null,"attributes":[{"value":"/ Frequency of the seed points.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":117016,"byte_end":117049,"line_start":18,"line_end":18,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":1445},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":117426,"byte_end":117438,"line_start":27,"line_end":27,"column_start":9,"column_end":21},"name":"displacement","qualname":"::noise_fns::generators::worley::Worley::displacement","value":"f64","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":" Scale of the random displacement to apply to each cell.","sig":null,"attributes":[{"value":"/ Scale of the random displacement to apply to each cell.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":117079,"byte_end":117138,"line_start":21,"line_end":21,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":117143,"byte_end":117146,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ The noise function assigns each Worley cell a random constant value from","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":117151,"byte_end":117227,"line_start":23,"line_end":23,"column_start":5,"column_end":81}},{"value":"/ a value noise function. The `displacement` _value_ controls the range","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":117232,"byte_end":117305,"line_start":24,"line_end":24,"column_start":5,"column_end":78}},{"value":"/ random values to assign to each cell. The range of random values is +/-","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":117310,"byte_end":117385,"line_start":25,"line_end":25,"column_start":5,"column_end":80}},{"value":"/ the displacement value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":117390,"byte_end":117417,"line_start":26,"line_end":26,"column_start":5,"column_end":32}}]},{"kind":"Const","id":{"krate":0,"index":649},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":117526,"byte_end":117538,"line_start":34,"line_end":34,"column_start":15,"column_end":27},"name":"DEFAULT_SEED","qualname":"::noise_fns::generators::worley::Worley::DEFAULT_SEED","value":"u32","parent":{"krate":0,"index":648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":650},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":117563,"byte_end":117584,"line_start":35,"line_end":35,"column_start":15,"column_end":36},"name":"DEFAULT_RANGEFUNCTION","qualname":"::noise_fns::generators::worley::Worley::DEFAULT_RANGEFUNCTION","value":"RangeFunction","parent":{"krate":0,"index":648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":651},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":117642,"byte_end":117659,"line_start":36,"line_end":36,"column_start":15,"column_end":32},"name":"DEFAULT_FREQUENCY","qualname":"::noise_fns::generators::worley::Worley::DEFAULT_FREQUENCY","value":"f64","parent":{"krate":0,"index":648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":652},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":117686,"byte_end":117706,"line_start":37,"line_end":37,"column_start":15,"column_end":35},"name":"DEFAULT_DISPLACEMENT","qualname":"::noise_fns::generators::worley::Worley::DEFAULT_DISPLACEMENT","value":"f64","parent":{"krate":0,"index":648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":117731,"byte_end":117734,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Worley>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":118145,"byte_end":118163,"line_start":51,"line_end":51,"column_start":12,"column_end":30},"name":"set_range_function","qualname":"<Worley>::set_range_function","value":"fn (self, range_function: RangeFunction) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the range function used by the Worley cells.\n","sig":null,"attributes":[{"value":"/ Sets the range function used by the Worley cells.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":118080,"byte_end":118133,"line_start":50,"line_end":50,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":118408,"byte_end":118420,"line_start":60,"line_end":60,"column_start":12,"column_end":24},"name":"enable_range","qualname":"<Worley>::enable_range","value":"fn (self, enable_range: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enables or disables applying the distance from the nearest seed point\n to the output value.\n","sig":null,"attributes":[{"value":"/ Enables or disables applying the distance from the nearest seed point","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":118294,"byte_end":118367,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/ to the output value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":118372,"byte_end":118396,"line_start":59,"line_end":59,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":118592,"byte_end":118605,"line_start":68,"line_end":68,"column_start":12,"column_end":25},"name":"set_frequency","qualname":"<Worley>::set_frequency","value":"fn (self, frequency: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the frequency of the seed points.\n","sig":null,"attributes":[{"value":"/ Sets the frequency of the seed points.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":118538,"byte_end":118580,"line_start":67,"line_end":67,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":118691,"byte_end":118707,"line_start":72,"line_end":72,"column_start":12,"column_end":28},"name":"set_displacement","qualname":"<Worley>::set_displacement","value":"fn (self, displacement: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1454},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":119677,"byte_end":119686,"line_start":112,"line_end":112,"column_start":5,"column_end":14},"name":"Euclidean","qualname":"::noise_fns::generators::worley::RangeFunction::Euclidean","value":"RangeFunction::Euclidean","parent":{"krate":0,"index":1453},"children":[],"decl_id":null,"docs":" The standard linear distance. Expensive to compute because it requires\n square root calculations.\n","sig":null,"attributes":[{"value":"/ The standard linear distance. Expensive to compute because it requires","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":119564,"byte_end":119638,"line_start":110,"line_end":110,"column_start":5,"column_end":79}},{"value":"/ square root calculations.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":119643,"byte_end":119672,"line_start":111,"line_end":111,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1456},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":119849,"byte_end":119865,"line_start":116,"line_end":116,"column_start":5,"column_end":21},"name":"EuclideanSquared","qualname":"::noise_fns::generators::worley::RangeFunction::EuclideanSquared","value":"RangeFunction::EuclideanSquared","parent":{"krate":0,"index":1453},"children":[],"decl_id":null,"docs":" Same as Euclidean, but without the square root calculations. Distance\n results will be smaller, however, but hash patterns will be the same.\n","sig":null,"attributes":[{"value":"/ Same as Euclidean, but without the square root calculations. Distance","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":119693,"byte_end":119766,"line_start":114,"line_end":114,"column_start":5,"column_end":78}},{"value":"/ results will be smaller, however, but hash patterns will be the same.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":119771,"byte_end":119844,"line_start":115,"line_end":115,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1458},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":120016,"byte_end":120025,"line_start":120,"line_end":120,"column_start":5,"column_end":14},"name":"Manhattan","qualname":"::noise_fns::generators::worley::RangeFunction::Manhattan","value":"RangeFunction::Manhattan","parent":{"krate":0,"index":1453},"children":[],"decl_id":null,"docs":" Measured by only moving in straight lines along the axes. Diagonal\n movement is not allowed, which leads to increased distances.\n","sig":null,"attributes":[{"value":"/ Measured by only moving in straight lines along the axes. Diagonal","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":119872,"byte_end":119942,"line_start":118,"line_end":118,"column_start":5,"column_end":75}},{"value":"/ movement is not allowed, which leads to increased distances.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":119947,"byte_end":120011,"line_start":119,"line_end":119,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1460},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":120287,"byte_end":120296,"line_start":126,"line_end":126,"column_start":5,"column_end":14},"name":"Chebyshev","qualname":"::noise_fns::generators::worley::RangeFunction::Chebyshev","value":"RangeFunction::Chebyshev","parent":{"krate":0,"index":1453},"children":[],"decl_id":null,"docs":" Measured by taking the largest distance along any axis as the total\n distance. Since this eliminates all but one dimension, it results in\n significantly shorter distances and produces regions where the\n distances are uniform.\n","sig":null,"attributes":[{"value":"/ Measured by taking the largest distance along any axis as the total","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":120032,"byte_end":120103,"line_start":122,"line_end":122,"column_start":5,"column_end":76}},{"value":"/ distance. Since this eliminates all but one dimension, it results in","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":120108,"byte_end":120180,"line_start":123,"line_end":123,"column_start":5,"column_end":77}},{"value":"/ significantly shorter distances and produces regions where the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":120185,"byte_end":120251,"line_start":124,"line_end":124,"column_start":5,"column_end":71}},{"value":"/ distances are uniform.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":120256,"byte_end":120282,"line_start":125,"line_end":125,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1462},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":120427,"byte_end":120436,"line_start":130,"line_end":130,"column_start":5,"column_end":14},"name":"Quadratic","qualname":"::noise_fns::generators::worley::RangeFunction::Quadratic","value":"RangeFunction::Quadratic","parent":{"krate":0,"index":1453},"children":[],"decl_id":null,"docs":" Experimental function where all values are multiplied together and then\n added up like a quadratic equation.\n","sig":null,"attributes":[{"value":"/ Experimental function where all values are multiplied together and then","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":120303,"byte_end":120378,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/ added up like a quadratic equation.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":120383,"byte_end":120422,"line_start":129,"line_end":129,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":1453},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":119544,"byte_end":119557,"line_start":109,"line_end":109,"column_start":10,"column_end":23},"name":"RangeFunction","qualname":"::noise_fns::generators::worley::RangeFunction","value":"RangeFunction::{Euclidean, EuclideanSquared, Manhattan, Chebyshev, Quadratic}","parent":null,"children":[{"krate":0,"index":1454},{"krate":0,"index":1456},{"krate":0,"index":1458},{"krate":0,"index":1460},{"krate":0,"index":1462}],"decl_id":null,"docs":" Set of distance functions that can be used in the Worley noise function.\n","sig":null,"attributes":[{"value":"/ Set of distance functions that can be used in the Worley noise function.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":119428,"byte_end":119504,"line_start":107,"line_end":107,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":704},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/abs.rs","byte_start":134338,"byte_end":134341,"line_start":5,"line_end":5,"column_start":12,"column_end":15},"name":"Abs","qualname":"::noise_fns::modifiers::abs::Abs","value":"Abs { source }","parent":null,"children":[{"krate":0,"index":707}],"decl_id":null,"docs":" Noise function that outputs the absolute value of the output value from the\n source function.\n","sig":null,"attributes":[{"value":"/ Noise function that outputs the absolute value of the output value from the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/abs.rs","byte_start":134226,"byte_end":134305,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ source function.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/abs.rs","byte_start":134306,"byte_end":134326,"line_start":4,"line_end":4,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":707},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/abs.rs","byte_start":134388,"byte_end":134394,"line_start":7,"line_end":7,"column_start":9,"column_end":15},"name":"source","qualname":"::noise_fns::modifiers::abs::Abs::source","value":"&'a (dyn noise_fns::NoiseFn<T> + 'a)","parent":{"krate":0,"index":704},"children":[],"decl_id":null,"docs":" Outputs a value.\n","sig":null,"attributes":[{"value":"/ Outputs a value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/abs.rs","byte_start":134359,"byte_end":134379,"line_start":6,"line_end":6,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/abs.rs","byte_start":134455,"byte_end":134458,"line_start":11,"line_end":11,"column_start":12,"column_end":15},"name":"new","qualname":"<Abs>::new","value":"fn (source: &'a dyn NoiseFn<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":719},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/clamp.rs","byte_start":134800,"byte_end":134805,"line_start":6,"line_end":6,"column_start":12,"column_end":17},"name":"Clamp","qualname":"::noise_fns::modifiers::clamp::Clamp","value":"Clamp { source, bounds }","parent":null,"children":[{"krate":0,"index":722},{"krate":0,"index":723}],"decl_id":null,"docs":" Noise function that clamps the output value from the source function to a\n range of values.\n","sig":null,"attributes":[{"value":"/ Noise function that clamps the output value from the source function to a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/clamp.rs","byte_start":134690,"byte_end":134767,"line_start":4,"line_end":4,"column_start":1,"column_end":78}},{"value":"/ range of values.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/clamp.rs","byte_start":134768,"byte_end":134788,"line_start":5,"line_end":5,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":722},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/clamp.rs","byte_start":134852,"byte_end":134858,"line_start":8,"line_end":8,"column_start":9,"column_end":15},"name":"source","qualname":"::noise_fns::modifiers::clamp::Clamp::source","value":"&'a (dyn noise_fns::NoiseFn<T> + 'a)","parent":{"krate":0,"index":719},"children":[],"decl_id":null,"docs":" Outputs a value.\n","sig":null,"attributes":[{"value":"/ Outputs a value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/clamp.rs","byte_start":134823,"byte_end":134843,"line_start":7,"line_end":7,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":723},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/clamp.rs","byte_start":134950,"byte_end":134956,"line_start":11,"line_end":11,"column_start":9,"column_end":15},"name":"bounds","qualname":"::noise_fns::modifiers::clamp::Clamp::bounds","value":"(f64, f64)","parent":{"krate":0,"index":719},"children":[],"decl_id":null,"docs":" Bound of the clamping range. Default is -1.0 to 1.0.\n","sig":null,"attributes":[{"value":"/ Bound of the clamping range. Default is -1.0 to 1.0.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/clamp.rs","byte_start":134885,"byte_end":134941,"line_start":10,"line_end":10,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/clamp.rs","byte_start":135011,"byte_end":135014,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"new","qualname":"<Clamp>::new","value":"fn (source: &'a dyn NoiseFn<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/clamp.rs","byte_start":135149,"byte_end":135164,"line_start":22,"line_end":22,"column_start":12,"column_end":27},"name":"set_lower_bound","qualname":"<Clamp>::set_lower_bound","value":"fn (self, lower_bound: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/clamp.rs","byte_start":135311,"byte_end":135326,"line_start":29,"line_end":29,"column_start":12,"column_end":27},"name":"set_upper_bound","qualname":"<Clamp>::set_upper_bound","value":"fn (self, upper_bound: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/clamp.rs","byte_start":135473,"byte_end":135483,"line_start":36,"line_end":36,"column_start":12,"column_end":22},"name":"set_bounds","qualname":"<Clamp>::set_bounds","value":"fn (self, lower_bound: f64, upper_bound: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":740},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/curve.rs","byte_start":136649,"byte_end":136654,"line_start":20,"line_end":20,"column_start":12,"column_end":17},"name":"Curve","qualname":"::noise_fns::modifiers::curve::Curve","value":"Curve { source }","parent":null,"children":[{"krate":0,"index":743},{"krate":0,"index":744}],"decl_id":null,"docs":" Noise function that maps the output value from the source function onto an\n arbitrary function curve.","sig":null,"attributes":[{"value":"/ Noise function that maps the output value from the source function onto an","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/curve.rs","byte_start":135894,"byte_end":135972,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ arbitrary function curve.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/curve.rs","byte_start":135973,"byte_end":136002,"line_start":7,"line_end":7,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/curve.rs","byte_start":136003,"byte_end":136006,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This noise function maps the output value from the source function onto an","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/curve.rs","byte_start":136007,"byte_end":136085,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ application-defined curve. The curve is defined by a number of _control","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/curve.rs","byte_start":136086,"byte_end":136161,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ points_; each control point has an _input value_ that maps to an _output","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/curve.rs","byte_start":136162,"byte_end":136238,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ value_.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/curve.rs","byte_start":136239,"byte_end":136250,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/curve.rs","byte_start":136251,"byte_end":136254,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ To add control points to the curve, use the `add_control_point` method.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/curve.rs","byte_start":136255,"byte_end":136330,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/curve.rs","byte_start":136331,"byte_end":136334,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Since the curve is a cubic spline, an application must have a minimum of","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/curve.rs","byte_start":136335,"byte_end":136411,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ four control points to the curve. If there is less than four control","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/curve.rs","byte_start":136412,"byte_end":136484,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ points, the get() method panics. Each control point can have any input","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/curve.rs","byte_start":136485,"byte_end":136559,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ and output value, although no two control points can have the same input.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/curve.rs","byte_start":136560,"byte_end":136637,"line_start":19,"line_end":19,"column_start":1,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":743},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/curve.rs","byte_start":136701,"byte_end":136707,"line_start":22,"line_end":22,"column_start":9,"column_end":15},"name":"source","qualname":"::noise_fns::modifiers::curve::Curve::source","value":"&'a (dyn noise_fns::NoiseFn<T> + 'a)","parent":{"krate":0,"index":740},"children":[],"decl_id":null,"docs":" Outputs a value.\n","sig":null,"attributes":[{"value":"/ Outputs a value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/curve.rs","byte_start":136672,"byte_end":136692,"line_start":21,"line_end":21,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/curve.rs","byte_start":136916,"byte_end":136919,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"new","qualname":"<Curve>::new","value":"fn (source: &'a dyn NoiseFn<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/curve.rs","byte_start":137072,"byte_end":137089,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"add_control_point","qualname":"<Curve>::add_control_point","value":"fn (mut self, input_value: f64, output_value: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":766},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/exponent.rs","byte_start":140825,"byte_end":140833,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"Exponent","qualname":"::noise_fns::modifiers::exponent::Exponent","value":"Exponent { source, exponent }","parent":null,"children":[{"krate":0,"index":769},{"krate":0,"index":770}],"decl_id":null,"docs":" Noise function that maps the output value from the source function onto an\n exponential curve.","sig":null,"attributes":[{"value":"/ Noise function that maps the output value from the source function onto an","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/exponent.rs","byte_start":140433,"byte_end":140511,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ exponential curve.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/exponent.rs","byte_start":140512,"byte_end":140534,"line_start":6,"line_end":6,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/exponent.rs","byte_start":140535,"byte_end":140538,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Because most noise functions will output values that range from -1.0 to 1.0,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/exponent.rs","byte_start":140539,"byte_end":140619,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/ this noise function first normalizes the output value (the range becomes 0.0","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/exponent.rs","byte_start":140620,"byte_end":140700,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ to 1.0), maps that value onto an exponential curve, then rescales that","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/exponent.rs","byte_start":140701,"byte_end":140775,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ value back to the original range.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/exponent.rs","byte_start":140776,"byte_end":140813,"line_start":11,"line_end":11,"column_start":1,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":769},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/exponent.rs","byte_start":140880,"byte_end":140886,"line_start":14,"line_end":14,"column_start":9,"column_end":15},"name":"source","qualname":"::noise_fns::modifiers::exponent::Exponent::source","value":"&'a (dyn noise_fns::NoiseFn<T> + 'a)","parent":{"krate":0,"index":766},"children":[],"decl_id":null,"docs":" Outputs a value.\n","sig":null,"attributes":[{"value":"/ Outputs a value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/exponent.rs","byte_start":140851,"byte_end":140871,"line_start":13,"line_end":13,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":770},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/exponent.rs","byte_start":141013,"byte_end":141021,"line_start":18,"line_end":18,"column_start":9,"column_end":17},"name":"exponent","qualname":"::noise_fns::modifiers::exponent::Exponent::exponent","value":"f64","parent":{"krate":0,"index":766},"children":[],"decl_id":null,"docs":" Exponent to apply to the output value from the source function. Default\n is 1.0.\n","sig":null,"attributes":[{"value":"/ Exponent to apply to the output value from the source function. Default","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/exponent.rs","byte_start":140913,"byte_end":140988,"line_start":16,"line_end":16,"column_start":5,"column_end":80}},{"value":"/ is 1.0.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/exponent.rs","byte_start":140993,"byte_end":141004,"line_start":17,"line_end":17,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":774},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/exponent.rs","byte_start":141072,"byte_end":141075,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<Exponent>::new","value":"fn (source: &'a dyn NoiseFn<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/exponent.rs","byte_start":141204,"byte_end":141216,"line_start":29,"line_end":29,"column_start":12,"column_end":24},"name":"set_exponent","qualname":"<Exponent>::set_exponent","value":"fn (self, exponent: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":782},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/invert.rs","byte_start":141682,"byte_end":141688,"line_start":4,"line_end":4,"column_start":12,"column_end":18},"name":"Invert","qualname":"::noise_fns::modifiers::invert::Invert","value":"Invert { source }","parent":null,"children":[{"krate":0,"index":785}],"decl_id":null,"docs":" Noise function that inverts the output value from the source function.\n","sig":null,"attributes":[{"value":"/ Noise function that inverts the output value from the source function.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/invert.rs","byte_start":141596,"byte_end":141670,"line_start":3,"line_end":3,"column_start":1,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":785},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/invert.rs","byte_start":141735,"byte_end":141741,"line_start":6,"line_end":6,"column_start":9,"column_end":15},"name":"source","qualname":"::noise_fns::modifiers::invert::Invert::source","value":"&'a (dyn noise_fns::NoiseFn<T> + 'a)","parent":{"krate":0,"index":782},"children":[],"decl_id":null,"docs":" Outputs a value.\n","sig":null,"attributes":[{"value":"/ Outputs a value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/invert.rs","byte_start":141706,"byte_end":141726,"line_start":5,"line_end":5,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/invert.rs","byte_start":141805,"byte_end":141808,"line_start":10,"line_end":10,"column_start":12,"column_end":15},"name":"new","qualname":"<Invert>::new","value":"fn (source: &'a dyn NoiseFn<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":796},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/scale_bias.rs","byte_start":142311,"byte_end":142320,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"ScaleBias","qualname":"::noise_fns::modifiers::scale_bias::ScaleBias","value":"ScaleBias { source, scale, bias }","parent":null,"children":[{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801}],"decl_id":null,"docs":" Noise function that applies a scaling factor and a bias to the output value\n from the source function.","sig":null,"attributes":[{"value":"/ Noise function that applies a scaling factor and a bias to the output value","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/scale_bias.rs","byte_start":142028,"byte_end":142107,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ from the source function.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/scale_bias.rs","byte_start":142108,"byte_end":142137,"line_start":4,"line_end":4,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/scale_bias.rs","byte_start":142138,"byte_end":142141,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The function retrieves the output value from the source function, multiplies","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/scale_bias.rs","byte_start":142142,"byte_end":142222,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ it with the scaling factor, adds the bias to it, then outputs the value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/scale_bias.rs","byte_start":142223,"byte_end":142299,"line_start":7,"line_end":7,"column_start":1,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":799},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/scale_bias.rs","byte_start":142367,"byte_end":142373,"line_start":10,"line_end":10,"column_start":9,"column_end":15},"name":"source","qualname":"::noise_fns::modifiers::scale_bias::ScaleBias::source","value":"&'a (dyn noise_fns::NoiseFn<T> + 'a)","parent":{"krate":0,"index":796},"children":[],"decl_id":null,"docs":" Outputs a value.\n","sig":null,"attributes":[{"value":"/ Outputs a value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/scale_bias.rs","byte_start":142338,"byte_end":142358,"line_start":9,"line_end":9,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":800},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/scale_bias.rs","byte_start":142516,"byte_end":142521,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"scale","qualname":"::noise_fns::modifiers::scale_bias::ScaleBias::scale","value":"f64","parent":{"krate":0,"index":796},"children":[],"decl_id":null,"docs":" Scaling factor to apply to the output value from the source function.\n The default value is 1.0.\n","sig":null,"attributes":[{"value":"/ Scaling factor to apply to the output value from the source function.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/scale_bias.rs","byte_start":142400,"byte_end":142473,"line_start":12,"line_end":12,"column_start":5,"column_end":78}},{"value":"/ The default value is 1.0.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/scale_bias.rs","byte_start":142478,"byte_end":142507,"line_start":13,"line_end":13,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":801},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/scale_bias.rs","byte_start":142646,"byte_end":142650,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"name":"bias","qualname":"::noise_fns::modifiers::scale_bias::ScaleBias::bias","value":"f64","parent":{"krate":0,"index":796},"children":[],"decl_id":null,"docs":" Bias to apply to the scaled output value from the source function.\n The default value is 0.0.\n","sig":null,"attributes":[{"value":"/ Bias to apply to the scaled output value from the source function.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/scale_bias.rs","byte_start":142533,"byte_end":142603,"line_start":16,"line_end":16,"column_start":5,"column_end":75}},{"value":"/ The default value is 0.0.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/scale_bias.rs","byte_start":142608,"byte_end":142637,"line_start":17,"line_end":17,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/scale_bias.rs","byte_start":142702,"byte_end":142705,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<ScaleBias>::new","value":"fn (source: &'a dyn NoiseFn<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/scale_bias.rs","byte_start":142854,"byte_end":142863,"line_start":30,"line_end":30,"column_start":12,"column_end":21},"name":"set_scale","qualname":"<ScaleBias>::set_scale","value":"fn (self, scale: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/scale_bias.rs","byte_start":142941,"byte_end":142949,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"set_bias","qualname":"<ScaleBias>::set_bias","value":"fn (self, bias: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":818},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":144596,"byte_end":144603,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"Terrace","qualname":"::noise_fns::modifiers::terrace::Terrace","value":"Terrace { source, invert_terraces }","parent":null,"children":[{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823}],"decl_id":null,"docs":" Noise function that maps the output value from the source function onto a\n terrace-forming curve.","sig":null,"attributes":[{"value":"/ Noise function that maps the output value from the source function onto a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":143419,"byte_end":143496,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"/ terrace-forming curve.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":143497,"byte_end":143523,"line_start":6,"line_end":6,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":143524,"byte_end":143527,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This noise function maps the output value from the source function onto a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":143528,"byte_end":143605,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ terrace-forming curve. The start of the curve has a slode of zero; it's","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":143606,"byte_end":143681,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ slope then smoothly increases. This curve also contains _control points_","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":143682,"byte_end":143758,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ which resets the slope to zero at that point, producing a \"terracing\"","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":143759,"byte_end":143832,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ effect.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":143833,"byte_end":143844,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":143845,"byte_end":143848,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ To add control points to the curve, use the `add_control_point` method.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":143849,"byte_end":143924,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":143925,"byte_end":143928,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ An application must add a minimum of two control points to the curve. If","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":143929,"byte_end":144005,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ there are less than two control points, the get() method panics. The","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":144006,"byte_end":144078,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ control points can have any value, although no two control points can","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":144079,"byte_end":144152,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ have the same value. There is no limit to the number of control points","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":144153,"byte_end":144227,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ that can be added to the curve.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":144228,"byte_end":144263,"line_start":20,"line_end":20,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":144264,"byte_end":144267,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The noise function clamps the output value from the source function if that","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":144268,"byte_end":144347,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ value is less than the value of the lowest control point or greater than","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":144348,"byte_end":144424,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ the value of the highest control point.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":144425,"byte_end":144468,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":144469,"byte_end":144472,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This noise function is often used to generate terrain features such as the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":144473,"byte_end":144551,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ stereotypical desert canyon.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":144552,"byte_end":144584,"line_start":27,"line_end":27,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":821},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":144650,"byte_end":144656,"line_start":30,"line_end":30,"column_start":9,"column_end":15},"name":"source","qualname":"::noise_fns::modifiers::terrace::Terrace::source","value":"&'a (dyn noise_fns::NoiseFn<T> + 'a)","parent":{"krate":0,"index":818},"children":[],"decl_id":null,"docs":" Outputs a value.\n","sig":null,"attributes":[{"value":"/ Outputs a value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":144621,"byte_end":144641,"line_start":29,"line_end":29,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":822},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":144783,"byte_end":144798,"line_start":34,"line_end":34,"column_start":9,"column_end":24},"name":"invert_terraces","qualname":"::noise_fns::modifiers::terrace::Terrace::invert_terraces","value":"bool","parent":{"krate":0,"index":818},"children":[],"decl_id":null,"docs":" Determines if the terrace-forming curve between all control points is\n inverted.\n","sig":null,"attributes":[{"value":"/ Determines if the terrace-forming curve between all control points is","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":144683,"byte_end":144756,"line_start":32,"line_end":32,"column_start":5,"column_end":78}},{"value":"/ inverted.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":144761,"byte_end":144774,"line_start":33,"line_end":33,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":827},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":144924,"byte_end":144927,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<Terrace>::new","value":"fn (source: &'a dyn NoiseFn<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":145474,"byte_end":145491,"line_start":56,"line_end":56,"column_start":12,"column_end":29},"name":"add_control_point","qualname":"<Terrace>::add_control_point","value":"fn (mut self, control_point: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a control point to the terrace-forming curve.","sig":null,"attributes":[{"value":"/ Adds a control point to the terrace-forming curve.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":145112,"byte_end":145166,"line_start":49,"line_end":49,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":145171,"byte_end":145174,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Two or more control points define the terrace-forming curve. The start","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":145179,"byte_end":145253,"line_start":51,"line_end":51,"column_start":5,"column_end":79}},{"value":"/ of this curve has a slope of zero; its slope then smoothly increases.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":145258,"byte_end":145331,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ At the control points, its slope resets to zero.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":145336,"byte_end":145388,"line_start":53,"line_end":53,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":145393,"byte_end":145396,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ It does not matter which order these points are added in.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":145401,"byte_end":145462,"line_start":55,"line_end":55,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":146428,"byte_end":146443,"line_start":81,"line_end":81,"column_start":12,"column_end":27},"name":"invert_terraces","qualname":"<Terrace>::invert_terraces","value":"fn (self, invert_terraces: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enables or disables the inversion of the terrain-forming curve between\n the control points.\n","sig":null,"attributes":[{"value":"/ Enables or disables the inversion of the terrain-forming curve between","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":146314,"byte_end":146388,"line_start":79,"line_end":79,"column_start":5,"column_end":79}},{"value":"/ the control points.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":146393,"byte_end":146416,"line_start":80,"line_end":80,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":846},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/blend.rs","byte_start":148984,"byte_end":148989,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Blend","qualname":"::noise_fns::selectors::blend::Blend","value":"Blend { source1, source2, control }","parent":null,"children":[{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851}],"decl_id":null,"docs":" Noise function that outputs a weighted blend of the output values from two\n source functions given the output value supplied by a control function.","sig":null,"attributes":[{"value":"/ Noise function that outputs a weighted blend of the output values from two","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/blend.rs","byte_start":148725,"byte_end":148803,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ source functions given the output value supplied by a control function.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/blend.rs","byte_start":148804,"byte_end":148879,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/blend.rs","byte_start":148880,"byte_end":148883,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This noise function uses linear interpolation to perform the blending","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/blend.rs","byte_start":148884,"byte_end":148957,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/ operation.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/blend.rs","byte_start":148958,"byte_end":148972,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":849},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/blend.rs","byte_start":149055,"byte_end":149062,"line_start":11,"line_end":11,"column_start":9,"column_end":16},"name":"source1","qualname":"::noise_fns::selectors::blend::Blend::source1","value":"&'a (dyn noise_fns::NoiseFn<T> + 'a)","parent":{"krate":0,"index":846},"children":[],"decl_id":null,"docs":" Outputs one of the values to blend.\n","sig":null,"attributes":[{"value":"/ Outputs one of the values to blend.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/blend.rs","byte_start":149007,"byte_end":149046,"line_start":10,"line_end":10,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":850},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/blend.rs","byte_start":149137,"byte_end":149144,"line_start":14,"line_end":14,"column_start":9,"column_end":16},"name":"source2","qualname":"::noise_fns::selectors::blend::Blend::source2","value":"&'a (dyn noise_fns::NoiseFn<T> + 'a)","parent":{"krate":0,"index":846},"children":[],"decl_id":null,"docs":" Outputs one of the values to blend.\n","sig":null,"attributes":[{"value":"/ Outputs one of the values to blend.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/blend.rs","byte_start":149089,"byte_end":149128,"line_start":13,"line_end":13,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":851},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/blend.rs","byte_start":149430,"byte_end":149437,"line_start":20,"line_end":20,"column_start":9,"column_end":16},"name":"control","qualname":"::noise_fns::selectors::blend::Blend::control","value":"&'a (dyn noise_fns::NoiseFn<T> + 'a)","parent":{"krate":0,"index":846},"children":[],"decl_id":null,"docs":" Determines the weight of the blending operation. Negative values weight\n the blend towards the output value from the `source1` function. Positive\n values weight the blend towards the output value from the `source2`\n function.\n","sig":null,"attributes":[{"value":"/ Determines the weight of the blending operation. Negative values weight","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/blend.rs","byte_start":149171,"byte_end":149246,"line_start":16,"line_end":16,"column_start":5,"column_end":80}},{"value":"/ the blend towards the output value from the `source1` function. Positive","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/blend.rs","byte_start":149251,"byte_end":149327,"line_start":17,"line_end":17,"column_start":5,"column_end":81}},{"value":"/ values weight the blend towards the output value from the `source2`","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/blend.rs","byte_start":149332,"byte_end":149403,"line_start":18,"line_end":18,"column_start":5,"column_end":76}},{"value":"/ function.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/blend.rs","byte_start":149408,"byte_end":149421,"line_start":19,"line_end":19,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/blend.rs","byte_start":149500,"byte_end":149503,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"new","qualname":"<Blend>::new","value":"fn (source1: &'a dyn NoiseFn<T>, source2: &'a dyn NoiseFn<T>, control: &'a dyn NoiseFn<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":863},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/select.rs","byte_start":150225,"byte_end":150231,"line_start":6,"line_end":6,"column_start":12,"column_end":18},"name":"Select","qualname":"::noise_fns::selectors::select::Select","value":"Select { source1, source2, control, bounds, falloff }","parent":null,"children":[{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870}],"decl_id":null,"docs":" Noise function that outputs the value selected from one of two source\n functions chosen by the output value from a control function.\n","sig":null,"attributes":[{"value":"/ Noise function that outputs the value selected from one of two source","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/select.rs","byte_start":150074,"byte_end":150147,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/ functions chosen by the output value from a control function.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/select.rs","byte_start":150148,"byte_end":150213,"line_start":5,"line_end":5,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":866},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/select.rs","byte_start":150278,"byte_end":150285,"line_start":8,"line_end":8,"column_start":9,"column_end":16},"name":"source1","qualname":"::noise_fns::selectors::select::Select::source1","value":"&'a (dyn noise_fns::NoiseFn<T> + 'a)","parent":{"krate":0,"index":863},"children":[],"decl_id":null,"docs":" Outputs a value.\n","sig":null,"attributes":[{"value":"/ Outputs a value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/select.rs","byte_start":150249,"byte_end":150269,"line_start":7,"line_end":7,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":867},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/select.rs","byte_start":150341,"byte_end":150348,"line_start":11,"line_end":11,"column_start":9,"column_end":16},"name":"source2","qualname":"::noise_fns::selectors::select::Select::source2","value":"&'a (dyn noise_fns::NoiseFn<T> + 'a)","parent":{"krate":0,"index":863},"children":[],"decl_id":null,"docs":" Outputs a value.\n","sig":null,"attributes":[{"value":"/ Outputs a value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/select.rs","byte_start":150312,"byte_end":150332,"line_start":10,"line_end":10,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":868},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/select.rs","byte_start":150667,"byte_end":150674,"line_start":17,"line_end":17,"column_start":9,"column_end":16},"name":"control","qualname":"::noise_fns::selectors::select::Select::control","value":"&'a (dyn noise_fns::NoiseFn<T> + 'a)","parent":{"krate":0,"index":863},"children":[],"decl_id":null,"docs":" Determines the value to select. If the output value from\n the control function is within a range of values know as the _selection\n range_, this noise function outputs the value from `source2`.\n Otherwise, this noise function outputs the value from `source1`.\n","sig":null,"attributes":[{"value":"/ Determines the value to select. If the output value from","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/select.rs","byte_start":150375,"byte_end":150435,"line_start":13,"line_end":13,"column_start":5,"column_end":65}},{"value":"/ the control function is within a range of values know as the _selection","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/select.rs","byte_start":150440,"byte_end":150515,"line_start":14,"line_end":14,"column_start":5,"column_end":80}},{"value":"/ range_, this noise function outputs the value from `source2`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/select.rs","byte_start":150520,"byte_end":150585,"line_start":15,"line_end":15,"column_start":5,"column_end":70}},{"value":"/ Otherwise, this noise function outputs the value from `source1`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/select.rs","byte_start":150590,"byte_end":150658,"line_start":16,"line_end":16,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":869},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/select.rs","byte_start":150767,"byte_end":150773,"line_start":20,"line_end":20,"column_start":9,"column_end":15},"name":"bounds","qualname":"::noise_fns::selectors::select::Select::bounds","value":"(f64, f64)","parent":{"krate":0,"index":863},"children":[],"decl_id":null,"docs":" Bounds of the selection range. Default is 0.0 to 1.0.\n","sig":null,"attributes":[{"value":"/ Bounds of the selection range. Default is 0.0 to 1.0.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/select.rs","byte_start":150701,"byte_end":150758,"line_start":19,"line_end":19,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":870},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/select.rs","byte_start":150840,"byte_end":150847,"line_start":23,"line_end":23,"column_start":9,"column_end":16},"name":"falloff","qualname":"::noise_fns::selectors::select::Select::falloff","value":"f64","parent":{"krate":0,"index":863},"children":[],"decl_id":null,"docs":" Edge falloff value. Default is 0.0.\n","sig":null,"attributes":[{"value":"/ Edge falloff value. Default is 0.0.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/select.rs","byte_start":150792,"byte_end":150831,"line_start":22,"line_end":22,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/select.rs","byte_start":150896,"byte_end":150899,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"new","qualname":"<Select>::new","value":"fn (source1: &'a dyn NoiseFn<T>, source2: &'a dyn NoiseFn<T>, control: &'a dyn NoiseFn<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/select.rs","byte_start":151194,"byte_end":151204,"line_start":41,"line_end":41,"column_start":12,"column_end":22},"name":"set_bounds","qualname":"<Select>::set_bounds","value":"fn (self, lower_bound: f64, upper_bound: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/select.rs","byte_start":151369,"byte_end":151380,"line_start":48,"line_end":48,"column_start":12,"column_end":23},"name":"set_falloff","qualname":"<Select>::set_falloff","value":"fn (self, falloff: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":893},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/displace.rs","byte_start":153523,"byte_end":153531,"line_start":6,"line_end":6,"column_start":12,"column_end":20},"name":"Displace","qualname":"::noise_fns::transformers::displace::Displace","value":"Displace { source, x_displace, y_displace, z_displace, u_displace }","parent":null,"children":[{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903}],"decl_id":null,"docs":" Noise function that uses multiple source functions to displace each coordinate\n of the input value before returning the output value from the `source` function.\n","sig":null,"attributes":[{"value":"/ Noise function that uses multiple source functions to displace each coordinate","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/displace.rs","byte_start":153344,"byte_end":153426,"line_start":4,"line_end":4,"column_start":1,"column_end":83}},{"value":"/ of the input value before returning the output value from the `source` function.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/displace.rs","byte_start":153427,"byte_end":153511,"line_start":5,"line_end":5,"column_start":1,"column_end":85}}]},{"kind":"Field","id":{"krate":0,"index":899},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/displace.rs","byte_start":153639,"byte_end":153645,"line_start":8,"line_end":8,"column_start":9,"column_end":15},"name":"source","qualname":"::noise_fns::transformers::displace::Displace::source","value":"Source","parent":{"krate":0,"index":893},"children":[],"decl_id":null,"docs":" Source function that outputs a value\n","sig":null,"attributes":[{"value":"/ Source function that outputs a value","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/displace.rs","byte_start":153590,"byte_end":153630,"line_start":7,"line_end":7,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":900},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/displace.rs","byte_start":153756,"byte_end":153766,"line_start":12,"line_end":12,"column_start":9,"column_end":19},"name":"x_displace","qualname":"::noise_fns::transformers::displace::Displace::x_displace","value":"XDisplace","parent":{"krate":0,"index":893},"children":[],"decl_id":null,"docs":" Displacement function that displaces the _x_ coordinate of the input\n value.\n","sig":null,"attributes":[{"value":"/ Displacement function that displaces the _x_ coordinate of the input","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/displace.rs","byte_start":153660,"byte_end":153732,"line_start":10,"line_end":10,"column_start":5,"column_end":77}},{"value":"/ value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/displace.rs","byte_start":153737,"byte_end":153747,"line_start":11,"line_end":11,"column_start":5,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":901},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/displace.rs","byte_start":153880,"byte_end":153890,"line_start":16,"line_end":16,"column_start":9,"column_end":19},"name":"y_displace","qualname":"::noise_fns::transformers::displace::Displace::y_displace","value":"YDisplace","parent":{"krate":0,"index":893},"children":[],"decl_id":null,"docs":" Displacement function that displaces the _y_ coordinate of the input\n value.\n","sig":null,"attributes":[{"value":"/ Displacement function that displaces the _y_ coordinate of the input","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/displace.rs","byte_start":153784,"byte_end":153856,"line_start":14,"line_end":14,"column_start":5,"column_end":77}},{"value":"/ value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/displace.rs","byte_start":153861,"byte_end":153871,"line_start":15,"line_end":15,"column_start":5,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":902},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/displace.rs","byte_start":154040,"byte_end":154050,"line_start":20,"line_end":20,"column_start":9,"column_end":19},"name":"z_displace","qualname":"::noise_fns::transformers::displace::Displace::z_displace","value":"ZDisplace","parent":{"krate":0,"index":893},"children":[],"decl_id":null,"docs":" Displacement function that displaces the _z_ coordinate of the input\n value. Only needed for 3d or higher noise.\n","sig":null,"attributes":[{"value":"/ Displacement function that displaces the _z_ coordinate of the input","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/displace.rs","byte_start":153908,"byte_end":153980,"line_start":18,"line_end":18,"column_start":5,"column_end":77}},{"value":"/ value. Only needed for 3d or higher noise.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/displace.rs","byte_start":153985,"byte_end":154031,"line_start":19,"line_end":19,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":903},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/displace.rs","byte_start":154200,"byte_end":154210,"line_start":24,"line_end":24,"column_start":9,"column_end":19},"name":"u_displace","qualname":"::noise_fns::transformers::displace::Displace::u_displace","value":"UDisplace","parent":{"krate":0,"index":893},"children":[],"decl_id":null,"docs":" Displacement function that displaces the _u_ coordinate of the input\n value. Only needed for 4d or higher noise.\n","sig":null,"attributes":[{"value":"/ Displacement function that displaces the _u_ coordinate of the input","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/displace.rs","byte_start":154068,"byte_end":154140,"line_start":22,"line_end":22,"column_start":5,"column_end":77}},{"value":"/ value. Only needed for 4d or higher noise.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/displace.rs","byte_start":154145,"byte_end":154191,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/displace.rs","byte_start":154361,"byte_end":154364,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<Displace<Source, XDisplace, YDisplace, ZDisplace, UDisplace>>::new","value":"fn (source: Source, x_displace: XDisplace, y_displace: YDisplace, z_displace: ZDisplace, u_displace: UDisplace) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":938},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":158030,"byte_end":158041,"line_start":12,"line_end":12,"column_start":12,"column_end":23},"name":"RotatePoint","qualname":"::noise_fns::transformers::rotate_point::RotatePoint","value":"RotatePoint { source, x_angle, y_angle, z_angle, u_angle }","parent":null,"children":[{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944}],"decl_id":null,"docs":" Noise function that rotates the input value around the origin before\n returning the output value from the source function.","sig":null,"attributes":[{"value":"/ Noise function that rotates the input value around the origin before","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":157576,"byte_end":157648,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ returning the output value from the source function.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":157649,"byte_end":157705,"line_start":5,"line_end":5,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":157706,"byte_end":157709,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The get() method rotates the coordinates of the input value around the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":157710,"byte_end":157784,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/ origin before returning the output value from the source function.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":157785,"byte_end":157855,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":157856,"byte_end":157859,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The coordinate system of the input value is assumed to be \"right-handed\"","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":157860,"byte_end":157936,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ (_x_ increases to the right, _y_ increases upward, and _z_ increases inward).","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":157937,"byte_end":158018,"line_start":11,"line_end":11,"column_start":1,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":940},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":158105,"byte_end":158111,"line_start":14,"line_end":14,"column_start":9,"column_end":15},"name":"source","qualname":"::noise_fns::transformers::rotate_point::RotatePoint::source","value":"Source","parent":{"krate":0,"index":938},"children":[],"decl_id":null,"docs":" Source function that outputs a value\n","sig":null,"attributes":[{"value":"/ Source function that outputs a value","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":158056,"byte_end":158096,"line_start":13,"line_end":13,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":941},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":158246,"byte_end":158253,"line_start":18,"line_end":18,"column_start":9,"column_end":16},"name":"x_angle","qualname":"::noise_fns::transformers::rotate_point::RotatePoint::x_angle","value":"f64","parent":{"krate":0,"index":938},"children":[],"decl_id":null,"docs":" _x_ rotation angle applied to the input value, in degrees. The\n default angle is set to 0.0 degrees.\n","sig":null,"attributes":[{"value":"/ _x_ rotation angle applied to the input value, in degrees. The","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":158126,"byte_end":158192,"line_start":16,"line_end":16,"column_start":5,"column_end":71}},{"value":"/ default angle is set to 0.0 degrees.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":158197,"byte_end":158237,"line_start":17,"line_end":17,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":942},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":158385,"byte_end":158392,"line_start":22,"line_end":22,"column_start":9,"column_end":16},"name":"y_angle","qualname":"::noise_fns::transformers::rotate_point::RotatePoint::y_angle","value":"f64","parent":{"krate":0,"index":938},"children":[],"decl_id":null,"docs":" _y_ rotation angle applied to the input value, in degrees. The\n default angle is set to 0.0 degrees.\n","sig":null,"attributes":[{"value":"/ _y_ rotation angle applied to the input value, in degrees. The","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":158265,"byte_end":158331,"line_start":20,"line_end":20,"column_start":5,"column_end":71}},{"value":"/ default angle is set to 0.0 degrees.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":158336,"byte_end":158376,"line_start":21,"line_end":21,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":943},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":158524,"byte_end":158531,"line_start":26,"line_end":26,"column_start":9,"column_end":16},"name":"z_angle","qualname":"::noise_fns::transformers::rotate_point::RotatePoint::z_angle","value":"f64","parent":{"krate":0,"index":938},"children":[],"decl_id":null,"docs":" _z_ rotation angle applied to the input value, in degrees. The\n default angle is set to 0.0 degrees.\n","sig":null,"attributes":[{"value":"/ _z_ rotation angle applied to the input value, in degrees. The","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":158404,"byte_end":158470,"line_start":24,"line_end":24,"column_start":5,"column_end":71}},{"value":"/ default angle is set to 0.0 degrees.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":158475,"byte_end":158515,"line_start":25,"line_end":25,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":944},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":158663,"byte_end":158670,"line_start":30,"line_end":30,"column_start":9,"column_end":16},"name":"u_angle","qualname":"::noise_fns::transformers::rotate_point::RotatePoint::u_angle","value":"f64","parent":{"krate":0,"index":938},"children":[],"decl_id":null,"docs":" _u_ rotation angle applied to the input value, in degrees. The\n default angle is set to 0.0 degrees.\n","sig":null,"attributes":[{"value":"/ _u_ rotation angle applied to the input value, in degrees. The","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":158543,"byte_end":158609,"line_start":28,"line_end":28,"column_start":5,"column_end":71}},{"value":"/ default angle is set to 0.0 degrees.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":158614,"byte_end":158654,"line_start":29,"line_end":29,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":158726,"byte_end":158729,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"new","qualname":"<RotatePoint<Source>>::new","value":"fn (source: Source) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":159012,"byte_end":159023,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"set_x_angle","qualname":"<RotatePoint<Source>>::set_x_angle","value":"fn (self, x_angle: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the rotation angle around the _x_ axis to apply to the input\n value.\n","sig":null,"attributes":[{"value":"/ Sets the rotation angle around the _x_ axis to apply to the input","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":158916,"byte_end":158985,"line_start":44,"line_end":44,"column_start":5,"column_end":74}},{"value":"/ value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":158990,"byte_end":159000,"line_start":45,"line_end":45,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":159194,"byte_end":159205,"line_start":52,"line_end":52,"column_start":12,"column_end":23},"name":"set_y_angle","qualname":"<RotatePoint<Source>>::set_y_angle","value":"fn (self, y_angle: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the rotation angle around the _y_ axis to apply to the input\n value.\n","sig":null,"attributes":[{"value":"/ Sets the rotation angle around the _y_ axis to apply to the input","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":159098,"byte_end":159167,"line_start":50,"line_end":50,"column_start":5,"column_end":74}},{"value":"/ value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":159172,"byte_end":159182,"line_start":51,"line_end":51,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":950},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":159376,"byte_end":159387,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"set_z_angle","qualname":"<RotatePoint<Source>>::set_z_angle","value":"fn (self, z_angle: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the rotation angle around the _z_ axis to apply to the input\n value.\n","sig":null,"attributes":[{"value":"/ Sets the rotation angle around the _z_ axis to apply to the input","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":159280,"byte_end":159349,"line_start":56,"line_end":56,"column_start":5,"column_end":74}},{"value":"/ value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":159354,"byte_end":159364,"line_start":57,"line_end":57,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":159558,"byte_end":159569,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"set_u_angle","qualname":"<RotatePoint<Source>>::set_u_angle","value":"fn (self, u_angle: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the rotation angle around the _u_ axis to apply to the input\n value.\n","sig":null,"attributes":[{"value":"/ Sets the rotation angle around the _u_ axis to apply to the input","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":159462,"byte_end":159531,"line_start":62,"line_end":62,"column_start":5,"column_end":74}},{"value":"/ value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":159536,"byte_end":159546,"line_start":63,"line_end":63,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":159744,"byte_end":159754,"line_start":70,"line_end":70,"column_start":12,"column_end":22},"name":"set_angles","qualname":"<RotatePoint<Source>>::set_angles","value":"fn (self, x_angle: f64, y_angle: f64, z_angle: f64, u_angle: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the rotation angles around all of the axes to apply to the input\n value.\n","sig":null,"attributes":[{"value":"/ Sets the rotation angles around all of the axes to apply to the input","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":159644,"byte_end":159717,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/ value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":159722,"byte_end":159732,"line_start":69,"line_end":69,"column_start":5,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":968},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":162491,"byte_end":162501,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"ScalePoint","qualname":"::noise_fns::transformers::scale_point::ScalePoint","value":"ScalePoint { source, x_scale, y_scale, z_scale, u_scale }","parent":null,"children":[{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974}],"decl_id":null,"docs":" Noise function that scales the coordinates of the input value before\n returning the output value from the source function.","sig":null,"attributes":[{"value":"/ Noise function that scales the coordinates of the input value before","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":162193,"byte_end":162265,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ returning the output value from the source function.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":162266,"byte_end":162322,"line_start":5,"line_end":5,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":162323,"byte_end":162326,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The get() method multiplies the coordinates of the input value with a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":162327,"byte_end":162400,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/ scaling factor before returning the output value from the source function.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":162401,"byte_end":162479,"line_start":8,"line_end":8,"column_start":1,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":970},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":162565,"byte_end":162571,"line_start":11,"line_end":11,"column_start":9,"column_end":15},"name":"source","qualname":"::noise_fns::transformers::scale_point::ScalePoint::source","value":"Source","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":" Source function that outputs a value\n","sig":null,"attributes":[{"value":"/ Source function that outputs a value","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":162516,"byte_end":162556,"line_start":10,"line_end":10,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":971},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":162713,"byte_end":162720,"line_start":15,"line_end":15,"column_start":9,"column_end":16},"name":"x_scale","qualname":"::noise_fns::transformers::scale_point::ScalePoint::x_scale","value":"f64","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":" Scaling factor applied to the _x_ coordinate of the input value. The\n default scaling factor is set to 1.0.\n","sig":null,"attributes":[{"value":"/ Scaling factor applied to the _x_ coordinate of the input value. The","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":162586,"byte_end":162658,"line_start":13,"line_end":13,"column_start":5,"column_end":77}},{"value":"/ default scaling factor is set to 1.0.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":162663,"byte_end":162704,"line_start":14,"line_end":14,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":972},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":162859,"byte_end":162866,"line_start":19,"line_end":19,"column_start":9,"column_end":16},"name":"y_scale","qualname":"::noise_fns::transformers::scale_point::ScalePoint::y_scale","value":"f64","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":" Scaling factor applied to the _y_ coordinate of the input value. The\n default scaling factor is set to 1.0.\n","sig":null,"attributes":[{"value":"/ Scaling factor applied to the _y_ coordinate of the input value. The","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":162732,"byte_end":162804,"line_start":17,"line_end":17,"column_start":5,"column_end":77}},{"value":"/ default scaling factor is set to 1.0.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":162809,"byte_end":162850,"line_start":18,"line_end":18,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":973},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":163005,"byte_end":163012,"line_start":23,"line_end":23,"column_start":9,"column_end":16},"name":"z_scale","qualname":"::noise_fns::transformers::scale_point::ScalePoint::z_scale","value":"f64","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":" Scaling factor applied to the _z_ coordinate of the input value. The\n default scaling factor is set to 1.0.\n","sig":null,"attributes":[{"value":"/ Scaling factor applied to the _z_ coordinate of the input value. The","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":162878,"byte_end":162950,"line_start":21,"line_end":21,"column_start":5,"column_end":77}},{"value":"/ default scaling factor is set to 1.0.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":162955,"byte_end":162996,"line_start":22,"line_end":22,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":974},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":163151,"byte_end":163158,"line_start":27,"line_end":27,"column_start":9,"column_end":16},"name":"u_scale","qualname":"::noise_fns::transformers::scale_point::ScalePoint::u_scale","value":"f64","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":" Scaling factor applied to the _u_ coordinate of the input value. The\n default scaling factor is set to 1.0.\n","sig":null,"attributes":[{"value":"/ Scaling factor applied to the _u_ coordinate of the input value. The","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":163024,"byte_end":163096,"line_start":25,"line_end":25,"column_start":5,"column_end":77}},{"value":"/ default scaling factor is set to 1.0.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":163101,"byte_end":163142,"line_start":26,"line_end":26,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":163213,"byte_end":163216,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<ScalePoint<Source>>::new","value":"fn (source: Source) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":163501,"byte_end":163512,"line_start":43,"line_end":43,"column_start":12,"column_end":23},"name":"set_x_scale","qualname":"<ScalePoint<Source>>::set_x_scale","value":"fn (self, x_scale: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the scaling factor to apply to the _x_ coordinate of the input\n value.\n","sig":null,"attributes":[{"value":"/ Sets the scaling factor to apply to the _x_ coordinate of the input","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":163403,"byte_end":163474,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/ value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":163479,"byte_end":163489,"line_start":42,"line_end":42,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":163685,"byte_end":163696,"line_start":49,"line_end":49,"column_start":12,"column_end":23},"name":"set_y_scale","qualname":"<ScalePoint<Source>>::set_y_scale","value":"fn (self, y_scale: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the scaling factor to apply to the _x_ coordinate of the input\n value.\n","sig":null,"attributes":[{"value":"/ Sets the scaling factor to apply to the _x_ coordinate of the input","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":163587,"byte_end":163658,"line_start":47,"line_end":47,"column_start":5,"column_end":76}},{"value":"/ value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":163663,"byte_end":163673,"line_start":48,"line_end":48,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":163869,"byte_end":163880,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"set_z_scale","qualname":"<ScalePoint<Source>>::set_z_scale","value":"fn (self, z_scale: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the scaling factor to apply to the _x_ coordinate of the input\n value.\n","sig":null,"attributes":[{"value":"/ Sets the scaling factor to apply to the _x_ coordinate of the input","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":163771,"byte_end":163842,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":163847,"byte_end":163857,"line_start":54,"line_end":54,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":164053,"byte_end":164064,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"set_u_scale","qualname":"<ScalePoint<Source>>::set_u_scale","value":"fn (self, u_scale: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the scaling factor to apply to the _x_ coordinate of the input\n value.\n","sig":null,"attributes":[{"value":"/ Sets the scaling factor to apply to the _x_ coordinate of the input","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":163955,"byte_end":164026,"line_start":59,"line_end":59,"column_start":5,"column_end":76}},{"value":"/ value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":164031,"byte_end":164041,"line_start":60,"line_end":60,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":164226,"byte_end":164235,"line_start":66,"line_end":66,"column_start":12,"column_end":21},"name":"set_scale","qualname":"<ScalePoint<Source>>::set_scale","value":"fn (self, scale: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the scaling factor to apply to all coordinates of the input value.\n","sig":null,"attributes":[{"value":"/ Sets the scaling factor to apply to all coordinates of the input value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":164139,"byte_end":164214,"line_start":65,"line_end":65,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":164538,"byte_end":164552,"line_start":78,"line_end":78,"column_start":12,"column_end":26},"name":"set_all_scales","qualname":"<ScalePoint<Source>>::set_all_scales","value":"fn (self, x_scale: f64, y_scale: f64, z_scale: f64, u_scale: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the individual scaling factors to apply to each coordinate of the\n input value.\n","sig":null,"attributes":[{"value":"/ Sets the individual scaling factors to apply to each coordinate of the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":164431,"byte_end":164505,"line_start":76,"line_end":76,"column_start":5,"column_end":79}},{"value":"/ input value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":164510,"byte_end":164526,"line_start":77,"line_end":77,"column_start":5,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":999},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":167247,"byte_end":167261,"line_start":9,"line_end":9,"column_start":12,"column_end":26},"name":"TranslatePoint","qualname":"::noise_fns::transformers::translate_point::TranslatePoint","value":"TranslatePoint { source, x_translation, y_translation, z_translation, u_translation }","parent":null,"children":[{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1005}],"decl_id":null,"docs":" Noise function that moves the coordinates of the input value before\n returning the output value from the source function.","sig":null,"attributes":[{"value":"/ Noise function that moves the coordinates of the input value before","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":166953,"byte_end":167024,"line_start":4,"line_end":4,"column_start":1,"column_end":72}},{"value":"/ returning the output value from the source function.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":167025,"byte_end":167081,"line_start":5,"line_end":5,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":167082,"byte_end":167085,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The get() method moves the coordinates of the input value by a translation","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":167086,"byte_end":167164,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ amount before returning the output value from the source function.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":167165,"byte_end":167235,"line_start":8,"line_end":8,"column_start":1,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1001},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":167325,"byte_end":167331,"line_start":11,"line_end":11,"column_start":9,"column_end":15},"name":"source","qualname":"::noise_fns::transformers::translate_point::TranslatePoint::source","value":"Source","parent":{"krate":0,"index":999},"children":[],"decl_id":null,"docs":" Source function that outputs a value\n","sig":null,"attributes":[{"value":"/ Source function that outputs a value","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":167276,"byte_end":167316,"line_start":10,"line_end":10,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":1002},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":167481,"byte_end":167494,"line_start":15,"line_end":15,"column_start":9,"column_end":22},"name":"x_translation","qualname":"::noise_fns::transformers::translate_point::TranslatePoint::x_translation","value":"f64","parent":{"krate":0,"index":999},"children":[],"decl_id":null,"docs":" Translation amount applied to the _x_ coordinate of the input value.\n The default translation amount is set to 0.0.\n","sig":null,"attributes":[{"value":"/ Translation amount applied to the _x_ coordinate of the input value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":167346,"byte_end":167418,"line_start":13,"line_end":13,"column_start":5,"column_end":77}},{"value":"/ The default translation amount is set to 0.0.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":167423,"byte_end":167472,"line_start":14,"line_end":14,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1003},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":167641,"byte_end":167654,"line_start":19,"line_end":19,"column_start":9,"column_end":22},"name":"y_translation","qualname":"::noise_fns::transformers::translate_point::TranslatePoint::y_translation","value":"f64","parent":{"krate":0,"index":999},"children":[],"decl_id":null,"docs":" Translation amount applied to the _y_ coordinate of the input value.\n The default translation amount is set to 0.0.\n","sig":null,"attributes":[{"value":"/ Translation amount applied to the _y_ coordinate of the input value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":167506,"byte_end":167578,"line_start":17,"line_end":17,"column_start":5,"column_end":77}},{"value":"/ The default translation amount is set to 0.0.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":167583,"byte_end":167632,"line_start":18,"line_end":18,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1004},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":167801,"byte_end":167814,"line_start":23,"line_end":23,"column_start":9,"column_end":22},"name":"z_translation","qualname":"::noise_fns::transformers::translate_point::TranslatePoint::z_translation","value":"f64","parent":{"krate":0,"index":999},"children":[],"decl_id":null,"docs":" Translation amount applied to the _z_ coordinate of the input value.\n The default translation amount is set to 0.0.\n","sig":null,"attributes":[{"value":"/ Translation amount applied to the _z_ coordinate of the input value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":167666,"byte_end":167738,"line_start":21,"line_end":21,"column_start":5,"column_end":77}},{"value":"/ The default translation amount is set to 0.0.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":167743,"byte_end":167792,"line_start":22,"line_end":22,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1005},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":167961,"byte_end":167974,"line_start":27,"line_end":27,"column_start":9,"column_end":22},"name":"u_translation","qualname":"::noise_fns::transformers::translate_point::TranslatePoint::u_translation","value":"f64","parent":{"krate":0,"index":999},"children":[],"decl_id":null,"docs":" Translation amount applied to the _u_ coordinate of the input value.\n The default translation amount is set to 0.0.\n","sig":null,"attributes":[{"value":"/ Translation amount applied to the _u_ coordinate of the input value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":167826,"byte_end":167898,"line_start":25,"line_end":25,"column_start":5,"column_end":77}},{"value":"/ The default translation amount is set to 0.0.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":167903,"byte_end":167952,"line_start":26,"line_end":26,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":168033,"byte_end":168036,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<TranslatePoint<Source>>::new","value":"fn (source: Source) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":168345,"byte_end":168362,"line_start":43,"line_end":43,"column_start":12,"column_end":29},"name":"set_x_translation","qualname":"<TranslatePoint<Source>>::set_x_translation","value":"fn (self, x_translation: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the scaling factor to apply to the _x_ coordinate of the input\n value.\n","sig":null,"attributes":[{"value":"/ Sets the scaling factor to apply to the _x_ coordinate of the input","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":168247,"byte_end":168318,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/ value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":168323,"byte_end":168333,"line_start":42,"line_end":42,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":168579,"byte_end":168596,"line_start":52,"line_end":52,"column_start":12,"column_end":29},"name":"set_y_translation","qualname":"<TranslatePoint<Source>>::set_y_translation","value":"fn (self, y_translation: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the scaling factor to apply to the _y_ coordinate of the input\n value.\n","sig":null,"attributes":[{"value":"/ Sets the scaling factor to apply to the _y_ coordinate of the input","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":168481,"byte_end":168552,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/ value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":168557,"byte_end":168567,"line_start":51,"line_end":51,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":168813,"byte_end":168830,"line_start":61,"line_end":61,"column_start":12,"column_end":29},"name":"set_z_translation","qualname":"<TranslatePoint<Source>>::set_z_translation","value":"fn (self, z_translation: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the scaling factor to apply to the _z_ coordinate of the input\n value.\n","sig":null,"attributes":[{"value":"/ Sets the scaling factor to apply to the _z_ coordinate of the input","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":168715,"byte_end":168786,"line_start":59,"line_end":59,"column_start":5,"column_end":76}},{"value":"/ value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":168791,"byte_end":168801,"line_start":60,"line_end":60,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":169047,"byte_end":169064,"line_start":70,"line_end":70,"column_start":12,"column_end":29},"name":"set_u_translation","qualname":"<TranslatePoint<Source>>::set_u_translation","value":"fn (self, u_translation: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the scaling factor to apply to the _u_ coordinate of the input\n value.\n","sig":null,"attributes":[{"value":"/ Sets the scaling factor to apply to the _u_ coordinate of the input","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":168949,"byte_end":169020,"line_start":68,"line_end":68,"column_start":5,"column_end":76}},{"value":"/ value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":169025,"byte_end":169035,"line_start":69,"line_end":69,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":169274,"byte_end":169289,"line_start":78,"line_end":78,"column_start":12,"column_end":27},"name":"set_translation","qualname":"<TranslatePoint<Source>>::set_translation","value":"fn (self, scale: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the translation amount to apply to all coordinates of the input value.\n","sig":null,"attributes":[{"value":"/ Sets the translation amount to apply to all coordinates of the input value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":169183,"byte_end":169262,"line_start":77,"line_end":77,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":169620,"byte_end":169640,"line_start":90,"line_end":90,"column_start":12,"column_end":32},"name":"set_all_translations","qualname":"<TranslatePoint<Source>>::set_all_translations","value":"fn (self, x_translation: f64, y_translation: f64, z_translation: f64, u_translation: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the individual translation amounts to apply to each coordinate of\n the input value.\n","sig":null,"attributes":[{"value":"/ Sets the individual translation amounts to apply to each coordinate of","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":169509,"byte_end":169583,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ the input value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":169588,"byte_end":169608,"line_start":89,"line_end":89,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":1472},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/turbulence.rs","byte_start":171458,"byte_end":171468,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"Turbulence","qualname":"::noise_fns::transformers::turbulence::Turbulence","value":"Turbulence { source, frequency, power, roughness }","parent":null,"children":[{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":1481},{"krate":0,"index":1482}],"decl_id":null,"docs":" Noise function that randomly displaces the input value before returning the\n output value from the source function.","sig":null,"attributes":[{"value":"/ Noise function that randomly displaces the input value before returning the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/turbulence.rs","byte_start":170990,"byte_end":171069,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ output value from the source function.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/turbulence.rs","byte_start":171070,"byte_end":171112,"line_start":5,"line_end":5,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/turbulence.rs","byte_start":171113,"byte_end":171116,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ _ is the pseudo-random displacement of the input value. The","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/turbulence.rs","byte_start":171117,"byte_end":171180,"line_start":7,"line_end":7,"column_start":1,"column_end":64}},{"value":"/ get() method randomly displaces the coordinates of the input value before","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/turbulence.rs","byte_start":171181,"byte_end":171258,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ retrieving the output value from the source function. To control the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/turbulence.rs","byte_start":171259,"byte_end":171331,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/ turbulence, an application can modify its frequency, its power, and its","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/turbulence.rs","byte_start":171332,"byte_end":171407,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ roughness.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/turbulence.rs","byte_start":171408,"byte_end":171422,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":1474},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/turbulence.rs","byte_start":171533,"byte_end":171539,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"source","qualname":"::noise_fns::transformers::turbulence::Turbulence::source","value":"Source","parent":{"krate":0,"index":1472},"children":[],"decl_id":null,"docs":" Source function that outputs a value.\n","sig":null,"attributes":[{"value":"/ Source function that outputs a value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/turbulence.rs","byte_start":171483,"byte_end":171524,"line_start":14,"line_end":14,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":1475},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/turbulence.rs","byte_start":171611,"byte_end":171620,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"name":"frequency","qualname":"::noise_fns::transformers::turbulence::Turbulence::frequency","value":"f64","parent":{"krate":0,"index":1472},"children":[],"decl_id":null,"docs":" Frequency value for the Turbulence function.\n","sig":null,"attributes":[{"value":"/ Frequency value for the Turbulence function.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/turbulence.rs","byte_start":171554,"byte_end":171602,"line_start":17,"line_end":17,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":1476},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/turbulence.rs","byte_start":171735,"byte_end":171740,"line_start":22,"line_end":22,"column_start":9,"column_end":14},"name":"power","qualname":"::noise_fns::transformers::turbulence::Turbulence::power","value":"f64","parent":{"krate":0,"index":1472},"children":[],"decl_id":null,"docs":" Controls the strength of the turbulence by affecting how much each\n point is moved.\n","sig":null,"attributes":[{"value":"/ Controls the strength of the turbulence by affecting how much each","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/turbulence.rs","byte_start":171632,"byte_end":171702,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ point is moved.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/turbulence.rs","byte_start":171707,"byte_end":171726,"line_start":21,"line_end":21,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":1477},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/turbulence.rs","byte_start":171832,"byte_end":171841,"line_start":25,"line_end":25,"column_start":9,"column_end":18},"name":"roughness","qualname":"::noise_fns::transformers::turbulence::Turbulence::roughness","value":"usize","parent":{"krate":0,"index":1472},"children":[],"decl_id":null,"docs":" Affects the roughness of the turbulence. Higher values are rougher.\n","sig":null,"attributes":[{"value":"/ Affects the roughness of the turbulence. Higher values are rougher.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/turbulence.rs","byte_start":171752,"byte_end":171823,"line_start":24,"line_end":24,"column_start":5,"column_end":76}}]},{"kind":"Const","id":{"krate":0,"index":1036},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/turbulence.rs","byte_start":172033,"byte_end":172045,"line_start":35,"line_end":35,"column_start":15,"column_end":27},"name":"DEFAULT_SEED","qualname":"::noise_fns::transformers::turbulence::Turbulence::<Source>::DEFAULT_SEED","value":"u32","parent":{"krate":0,"index":1034},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1037},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/turbulence.rs","byte_start":172070,"byte_end":172087,"line_start":36,"line_end":36,"column_start":15,"column_end":32},"name":"DEFAULT_FREQUENCY","qualname":"::noise_fns::transformers::turbulence::Turbulence::<Source>::DEFAULT_FREQUENCY","value":"f64","parent":{"krate":0,"index":1034},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1038},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/turbulence.rs","byte_start":172114,"byte_end":172127,"line_start":37,"line_end":37,"column_start":15,"column_end":28},"name":"DEFAULT_POWER","qualname":"::noise_fns::transformers::turbulence::Turbulence::<Source>::DEFAULT_POWER","value":"f64","parent":{"krate":0,"index":1034},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1039},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/turbulence.rs","byte_start":172154,"byte_end":172171,"line_start":38,"line_end":38,"column_start":15,"column_end":32},"name":"DEFAULT_ROUGHNESS","qualname":"::noise_fns::transformers::turbulence::Turbulence::<Source>::DEFAULT_ROUGHNESS","value":"usize","parent":{"krate":0,"index":1034},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/turbulence.rs","byte_start":172196,"byte_end":172199,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<Turbulence<Source>>::new","value":"fn (source: Source) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/turbulence.rs","byte_start":173275,"byte_end":173288,"line_start":66,"line_end":66,"column_start":12,"column_end":25},"name":"set_frequency","qualname":"<Turbulence<Source>>::set_frequency","value":"fn (self, frequency: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/turbulence.rs","byte_start":173734,"byte_end":173743,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"set_power","qualname":"<Turbulence<Source>>::set_power","value":"fn (self, power: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/turbulence.rs","byte_start":173821,"byte_end":173834,"line_start":81,"line_end":81,"column_start":12,"column_end":25},"name":"set_roughness","qualname":"<Turbulence<Source>>::set_roughness","value":"fn (self, roughness: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1057},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/mod.rs","byte_start":14237,"byte_end":14244,"line_start":28,"line_end":28,"column_start":11,"column_end":18},"name":"NoiseFn","qualname":"::noise_fns::NoiseFn","value":"NoiseFn<T>","parent":null,"children":[{"krate":0,"index":1059}],"decl_id":null,"docs":" Base trait for noise functions.","sig":null,"attributes":[{"value":"/ Base trait for noise functions.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/mod.rs","byte_start":13652,"byte_end":13687,"line_start":15,"line_end":15,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/mod.rs","byte_start":13688,"byte_end":13691,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ A noise function is a object that calculates and outputs a value given a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/mod.rs","byte_start":13692,"byte_end":13768,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ n-Dimensional input value, where n is (2,3,4).","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/mod.rs","byte_start":13769,"byte_end":13819,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/mod.rs","byte_start":13820,"byte_end":13823,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Each type of noise function uses a specific method to calculate an output","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/mod.rs","byte_start":13824,"byte_end":13901,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ value. Some of these methods include:","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/mod.rs","byte_start":13902,"byte_end":13943,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/mod.rs","byte_start":13944,"byte_end":13947,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * Calculating a value using a coherent-noise function or some other","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/mod.rs","byte_start":13948,"byte_end":14019,"line_start":23,"line_end":23,"column_start":1,"column_end":72}},{"value":"/     mathematical function.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/mod.rs","byte_start":14020,"byte_end":14050,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ * Mathematically changing the output value from another noise function","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/mod.rs","byte_start":14051,"byte_end":14125,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/     in various ways.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/mod.rs","byte_start":14126,"byte_end":14150,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/ * Combining the output values from two noise functions in various ways.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/mod.rs","byte_start":14151,"byte_end":14226,"line_start":27,"line_end":27,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1059},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/mod.rs","byte_start":14257,"byte_end":14260,"line_start":29,"line_end":29,"column_start":8,"column_end":11},"name":"get","qualname":"::noise_fns::NoiseFn::get","value":"fn (&self, point: T) -> f64","parent":{"krate":0,"index":1057},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1065},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/mod.rs","byte_start":14513,"byte_end":14521,"line_start":40,"line_end":40,"column_start":11,"column_end":19},"name":"Seedable","qualname":"::noise_fns::Seedable","value":"Seedable","parent":null,"children":[{"krate":0,"index":1066},{"krate":0,"index":1067}],"decl_id":null,"docs":" Trait for functions that require a seed before generating their values\n","sig":null,"attributes":[{"value":"/ Trait for functions that require a seed before generating their values","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/mod.rs","byte_start":14428,"byte_end":14502,"line_start":39,"line_end":39,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/mod.rs","byte_start":14603,"byte_end":14611,"line_start":42,"line_end":42,"column_start":8,"column_end":16},"name":"set_seed","qualname":"::noise_fns::Seedable::set_seed","value":"fn (self, seed: u32) -> Self","parent":{"krate":0,"index":1065},"children":[],"decl_id":null,"docs":" Set the seed for the function implementing the `Seedable` trait\n","sig":null,"attributes":[{"value":"/ Set the seed for the function implementing the `Seedable` trait","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/mod.rs","byte_start":14528,"byte_end":14595,"line_start":41,"line_end":41,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1067},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/mod.rs","byte_start":14700,"byte_end":14704,"line_start":45,"line_end":45,"column_start":8,"column_end":12},"name":"seed","qualname":"::noise_fns::Seedable::seed","value":"fn (&self) -> u32","parent":{"krate":0,"index":1065},"children":[],"decl_id":null,"docs":" Getter to retrieve the seed from the function\n","sig":null,"attributes":[{"value":"/ Getter to retrieve the seed from the function","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/mod.rs","byte_start":14643,"byte_end":14692,"line_start":44,"line_end":44,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1489},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/permutationtable.rs","byte_start":178716,"byte_end":178732,"line_start":15,"line_end":15,"column_start":12,"column_end":28},"name":"PermutationTable","qualname":"::permutationtable::PermutationTable","value":"PermutationTable {  }","parent":null,"children":[{"krate":0,"index":1490}],"decl_id":null,"docs":" A seed table, required by all noise functions.","sig":null,"attributes":[{"value":"/ A seed table, required by all noise functions.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/permutationtable.rs","byte_start":178510,"byte_end":178560,"line_start":10,"line_end":10,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/permutationtable.rs","byte_start":178561,"byte_end":178564,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Table creation is expensive, so in most circumstances you'll only want to","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/permutationtable.rs","byte_start":178565,"byte_end":178642,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ create one of these per generator.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/permutationtable.rs","byte_start":178643,"byte_end":178681,"line_start":13,"line_end":13,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/permutationtable.rs","byte_start":179834,"byte_end":179837,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<PermutationTable>::new","value":"fn (seed: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Deterministically generates a new permutation table based on a `u32` seed value.","sig":null,"attributes":[{"value":"/ Deterministically generates a new permutation table based on a `u32` seed value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/permutationtable.rs","byte_start":179577,"byte_end":179661,"line_start":40,"line_end":40,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/permutationtable.rs","byte_start":179666,"byte_end":179669,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ Internally this uses a `XorShiftRng`, but we don't really need to worry","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/permutationtable.rs","byte_start":179674,"byte_end":179749,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ about cryptographic security when working with procedural noise.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/permutationtable.rs","byte_start":179754,"byte_end":179822,"line_start":43,"line_end":43,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/permutationtable.rs","byte_start":180240,"byte_end":180244,"line_start":57,"line_end":57,"column_start":12,"column_end":16},"name":"get1","qualname":"<PermutationTable>::get1","value":"fn (&self, x: isize) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/permutationtable.rs","byte_start":180360,"byte_end":180364,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"get2","qualname":"<PermutationTable>::get2","value":"fn (&self, pos: Point2<isize>) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/permutationtable.rs","byte_start":180515,"byte_end":180519,"line_start":67,"line_end":67,"column_start":12,"column_end":16},"name":"get3","qualname":"<PermutationTable>::get3","value":"fn (&self, pos: Point3<isize>) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1093},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/permutationtable.rs","byte_start":180680,"byte_end":180684,"line_start":72,"line_end":72,"column_start":12,"column_end":16},"name":"get4","qualname":"<PermutationTable>::get4","value":"fn (&self, pos: Point4<isize>) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1096},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"utils","qualname":"::utils","value":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/mod.rs","parent":null,"children":[{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1123},{"krate":0,"index":1176},{"krate":0,"index":1200},{"krate":0,"index":1223}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1105},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/color_gradient.rs","byte_start":181703,"byte_end":181708,"line_start":4,"line_end":4,"column_start":10,"column_end":15},"name":"Color","qualname":"::utils::color_gradient::Color","value":"[u8; 4]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1506},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/color_gradient.rs","byte_start":181862,"byte_end":181875,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"ColorGradient","qualname":"::utils::color_gradient::ColorGradient","value":"ColorGradient {  }","parent":null,"children":[{"krate":0,"index":1507}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1108},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/color_gradient.rs","byte_start":181954,"byte_end":181957,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"name":"new","qualname":"<ColorGradient>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1109},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/color_gradient.rs","byte_start":182115,"byte_end":182133,"line_start":26,"line_end":26,"column_start":12,"column_end":30},"name":"add_gradient_point","qualname":"<ColorGradient>::add_gradient_point","value":"fn (mut self, pos: f64, color: Color) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1114},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/color_gradient.rs","byte_start":182984,"byte_end":182998,"line_start":52,"line_end":52,"column_start":12,"column_end":26},"name":"clear_gradient","qualname":"<ColorGradient>::clear_gradient","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1115},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/color_gradient.rs","byte_start":183089,"byte_end":183113,"line_start":58,"line_end":58,"column_start":12,"column_end":36},"name":"build_grayscale_gradient","qualname":"<ColorGradient>::build_grayscale_gradient","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1116},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/color_gradient.rs","byte_start":183291,"byte_end":183313,"line_start":64,"line_end":64,"column_start":12,"column_end":34},"name":"build_terrain_gradient","qualname":"<ColorGradient>::build_terrain_gradient","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1117},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/color_gradient.rs","byte_start":183906,"byte_end":183928,"line_start":77,"line_end":77,"column_start":12,"column_end":34},"name":"build_rainbow_gradient","qualname":"<ColorGradient>::build_rainbow_gradient","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1118},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/color_gradient.rs","byte_start":184387,"byte_end":184396,"line_start":88,"line_end":88,"column_start":12,"column_end":21},"name":"get_color","qualname":"<ColorGradient>::get_color","value":"fn (&self, pos: f64) -> Color","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1130},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/image_renderer.rs","byte_start":188399,"byte_end":188412,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"ImageRenderer","qualname":"::utils::image_renderer::ImageRenderer","value":"ImageRenderer {  }","parent":null,"children":[{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":1134}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1136},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/image_renderer.rs","byte_start":188727,"byte_end":188730,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"new","qualname":"<ImageRenderer>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/image_renderer.rs","byte_start":188943,"byte_end":188955,"line_start":32,"line_end":32,"column_start":12,"column_end":24},"name":"set_gradient","qualname":"<ImageRenderer>::set_gradient","value":"fn (self, gradient: ColorGradient) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/image_renderer.rs","byte_start":189049,"byte_end":189057,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"gradient","qualname":"<ImageRenderer>::gradient","value":"fn (&self) -> &ColorGradient","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/image_renderer.rs","byte_start":189126,"byte_end":189138,"line_start":40,"line_end":40,"column_start":12,"column_end":24},"name":"enable_light","qualname":"<ImageRenderer>::enable_light","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/image_renderer.rs","byte_start":189205,"byte_end":189218,"line_start":44,"line_end":44,"column_start":12,"column_end":25},"name":"disable_light","qualname":"<ImageRenderer>::disable_light","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1141},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/image_renderer.rs","byte_start":189286,"byte_end":189299,"line_start":48,"line_end":48,"column_start":12,"column_end":25},"name":"light_enabled","qualname":"<ImageRenderer>::light_enabled","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1142},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/image_renderer.rs","byte_start":189362,"byte_end":189379,"line_start":52,"line_end":52,"column_start":12,"column_end":29},"name":"set_light_azimuth","qualname":"<ImageRenderer>::set_light_azimuth","value":"fn (mut self, azimuth: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1143},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/image_renderer.rs","byte_start":189494,"byte_end":189507,"line_start":58,"line_end":58,"column_start":12,"column_end":25},"name":"light_azimuth","qualname":"<ImageRenderer>::light_azimuth","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1144},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/image_renderer.rs","byte_start":189576,"byte_end":189596,"line_start":62,"line_end":62,"column_start":12,"column_end":32},"name":"set_light_brightness","qualname":"<ImageRenderer>::set_light_brightness","value":"fn (mut self, brightness: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1145},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/image_renderer.rs","byte_start":189720,"byte_end":189736,"line_start":68,"line_end":68,"column_start":12,"column_end":28},"name":"light_brightness","qualname":"<ImageRenderer>::light_brightness","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1146},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/image_renderer.rs","byte_start":189808,"byte_end":189823,"line_start":72,"line_end":72,"column_start":12,"column_end":27},"name":"set_light_color","qualname":"<ImageRenderer>::set_light_color","value":"fn (mut self, color: Color) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1147},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/image_renderer.rs","byte_start":189934,"byte_end":189945,"line_start":78,"line_end":78,"column_start":12,"column_end":23},"name":"light_color","qualname":"<ImageRenderer>::light_color","value":"fn (&self) -> Color","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1148},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/image_renderer.rs","byte_start":190014,"byte_end":190032,"line_start":82,"line_end":82,"column_start":12,"column_end":30},"name":"set_light_contrast","qualname":"<ImageRenderer>::set_light_contrast","value":"fn (mut self, contrast: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1149},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/image_renderer.rs","byte_start":190150,"byte_end":190164,"line_start":88,"line_end":88,"column_start":12,"column_end":26},"name":"light_contrast","qualname":"<ImageRenderer>::light_contrast","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1150},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/image_renderer.rs","byte_start":190234,"byte_end":190253,"line_start":92,"line_end":92,"column_start":12,"column_end":31},"name":"set_light_elevation","qualname":"<ImageRenderer>::set_light_elevation","value":"fn (mut self, elevation: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1151},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/image_renderer.rs","byte_start":190374,"byte_end":190389,"line_start":98,"line_end":98,"column_start":12,"column_end":27},"name":"light_elevation","qualname":"<ImageRenderer>::light_elevation","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1152},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/image_renderer.rs","byte_start":190460,"byte_end":190479,"line_start":102,"line_end":102,"column_start":12,"column_end":31},"name":"set_light_intensity","qualname":"<ImageRenderer>::set_light_intensity","value":"fn (mut self, intensity: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1153},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/image_renderer.rs","byte_start":190600,"byte_end":190615,"line_start":108,"line_end":108,"column_start":12,"column_end":27},"name":"light_intensity","qualname":"<ImageRenderer>::light_intensity","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1154},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/image_renderer.rs","byte_start":190686,"byte_end":190697,"line_start":112,"line_end":112,"column_start":12,"column_end":23},"name":"enable_wrap","qualname":"<ImageRenderer>::enable_wrap","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1155},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/image_renderer.rs","byte_start":190808,"byte_end":190820,"line_start":119,"line_end":119,"column_start":12,"column_end":24},"name":"wrap_enabled","qualname":"<ImageRenderer>::wrap_enabled","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1156},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/image_renderer.rs","byte_start":190882,"byte_end":190888,"line_start":123,"line_end":123,"column_start":12,"column_end":18},"name":"render","qualname":"<ImageRenderer>::render","value":"fn (&mut self, noise_map: &NoiseMap) -> NoiseImage","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1158},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/image_renderer.rs","byte_start":195046,"byte_end":195068,"line_start":231,"line_end":231,"column_start":12,"column_end":34},"name":"render_with_background","qualname":"<ImageRenderer>::render_with_background","value":"fn (&mut self, noise_map: &NoiseMap, background: &NoiseImage) -> NoiseImage","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1514},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/image_renderer.rs","byte_start":199990,"byte_end":200001,"line_start":363,"line_end":363,"column_start":12,"column_end":23},"name":"LightSource","qualname":"::utils::image_renderer::LightSource","value":"LightSource {  }","parent":null,"children":[{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1520},{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":1523},{"krate":0,"index":1524},{"krate":0,"index":1525}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1163},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/image_renderer.rs","byte_start":201077,"byte_end":201080,"line_start":403,"line_end":403,"column_start":12,"column_end":15},"name":"new","qualname":"<LightSource>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/image_renderer.rs","byte_start":201574,"byte_end":201585,"line_start":419,"line_end":419,"column_start":12,"column_end":23},"name":"set_azimuth","qualname":"<LightSource>::set_azimuth","value":"fn (&mut self, azimuth: f64) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/image_renderer.rs","byte_start":201709,"byte_end":201723,"line_start":424,"line_end":424,"column_start":12,"column_end":26},"name":"set_brightness","qualname":"<LightSource>::set_brightness","value":"fn (&mut self, brightness: f64) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1167},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/image_renderer.rs","byte_start":201856,"byte_end":201865,"line_start":429,"line_end":429,"column_start":12,"column_end":21},"name":"set_color","qualname":"<LightSource>::set_color","value":"fn (&mut self, color: Color) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/image_renderer.rs","byte_start":201939,"byte_end":201951,"line_start":433,"line_end":433,"column_start":12,"column_end":24},"name":"set_contrast","qualname":"<LightSource>::set_contrast","value":"fn (&mut self, contrast: f64) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/image_renderer.rs","byte_start":202211,"byte_end":202224,"line_start":442,"line_end":442,"column_start":12,"column_end":25},"name":"set_elevation","qualname":"<LightSource>::set_elevation","value":"fn (&mut self, elevation: f64) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/image_renderer.rs","byte_start":202354,"byte_end":202367,"line_start":447,"line_end":447,"column_start":12,"column_end":25},"name":"set_intensity","qualname":"<LightSource>::set_intensity","value":"fn (&mut self, intensity: f64) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1183},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_image.rs","byte_start":204299,"byte_end":204309,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"NoiseImage","qualname":"::utils::noise_image::NoiseImage","value":"NoiseImage {  }","parent":null,"children":[{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1186}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1188},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_image.rs","byte_start":204416,"byte_end":204419,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<NoiseImage>::new","value":"fn (width: usize, height: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1189},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_image.rs","byte_start":204528,"byte_end":204536,"line_start":23,"line_end":23,"column_start":12,"column_end":20},"name":"set_size","qualname":"<NoiseImage>::set_size","value":"fn (self, width: usize, height: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1190},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_image.rs","byte_start":205728,"byte_end":205744,"line_start":53,"line_end":53,"column_start":12,"column_end":28},"name":"set_border_color","qualname":"<NoiseImage>::set_border_color","value":"fn (self, color: Color) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1191},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_image.rs","byte_start":205870,"byte_end":205879,"line_start":60,"line_end":60,"column_start":12,"column_end":21},"name":"set_value","qualname":"<NoiseImage>::set_value","value":"fn (&mut self, x: usize, y: usize, value: Color) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1192},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_image.rs","byte_start":206147,"byte_end":206151,"line_start":70,"line_end":70,"column_start":12,"column_end":16},"name":"size","qualname":"<NoiseImage>::size","value":"fn (&self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1193},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_image.rs","byte_start":206215,"byte_end":206227,"line_start":74,"line_end":74,"column_start":12,"column_end":24},"name":"border_color","qualname":"<NoiseImage>::border_color","value":"fn (&self) -> Color","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1194},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_image.rs","byte_start":206290,"byte_end":206299,"line_start":78,"line_end":78,"column_start":12,"column_end":21},"name":"get_value","qualname":"<NoiseImage>::get_value","value":"fn (&self, x: usize, y: usize) -> Color","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1197},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_image.rs","byte_start":206709,"byte_end":206722,"line_start":97,"line_end":97,"column_start":12,"column_end":25},"name":"write_to_file","qualname":"<NoiseImage>::write_to_file","value":"fn (&self, filename: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"image\")","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_image.rs","byte_start":206672,"byte_end":206697,"line_start":96,"line_end":96,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":1207},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map.rs","byte_start":208092,"byte_end":208100,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"NoiseMap","qualname":"::utils::noise_map::NoiseMap","value":"NoiseMap {  }","parent":null,"children":[{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1210}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1212},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map.rs","byte_start":208201,"byte_end":208204,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<NoiseMap>::new","value":"fn (width: usize, height: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1213},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map.rs","byte_start":208313,"byte_end":208321,"line_start":24,"line_end":24,"column_start":12,"column_end":20},"name":"set_size","qualname":"<NoiseMap>::set_size","value":"fn (self, width: usize, height: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1214},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map.rs","byte_start":209508,"byte_end":209512,"line_start":54,"line_end":54,"column_start":12,"column_end":16},"name":"size","qualname":"<NoiseMap>::size","value":"fn (&self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1215},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map.rs","byte_start":209576,"byte_end":209592,"line_start":58,"line_end":58,"column_start":12,"column_end":28},"name":"set_border_value","qualname":"<NoiseMap>::set_border_value","value":"fn (self, border_value: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1216},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map.rs","byte_start":209716,"byte_end":209728,"line_start":65,"line_end":65,"column_start":12,"column_end":24},"name":"border_value","qualname":"<NoiseMap>::border_value","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1217},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map.rs","byte_start":209789,"byte_end":209798,"line_start":69,"line_end":69,"column_start":12,"column_end":21},"name":"set_value","qualname":"<NoiseMap>::set_value","value":"fn (&mut self, x: usize, y: usize, value: f64) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1218},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map.rs","byte_start":210064,"byte_end":210073,"line_start":79,"line_end":79,"column_start":12,"column_end":21},"name":"get_value","qualname":"<NoiseMap>::get_value","value":"fn (&self, x: usize, y: usize) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1219},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map.rs","byte_start":210330,"byte_end":210343,"line_start":90,"line_end":90,"column_start":12,"column_end":25},"name":"write_to_file","qualname":"<NoiseMap>::write_to_file","value":"fn (&self, filename: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"image\")","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map.rs","byte_start":210293,"byte_end":210318,"line_start":89,"line_end":89,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":1227},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map_builder.rs","byte_start":211717,"byte_end":211732,"line_start":5,"line_end":5,"column_start":11,"column_end":26},"name":"NoiseMapBuilder","qualname":"::utils::noise_map_builder::NoiseMapBuilder","value":"NoiseMapBuilder<'a>","parent":null,"children":[{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1232},{"krate":0,"index":1233}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1229},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map_builder.rs","byte_start":211746,"byte_end":211754,"line_start":6,"line_end":6,"column_start":8,"column_end":16},"name":"set_size","qualname":"::utils::noise_map_builder::NoiseMapBuilder::set_size","value":"fn (self, width: usize, height: usize) -> Self","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1230},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map_builder.rs","byte_start":211807,"byte_end":211824,"line_start":8,"line_end":8,"column_start":8,"column_end":25},"name":"set_source_module","qualname":"::utils::noise_map_builder::NoiseMapBuilder::set_source_module","value":"fn (self, source_module: &'a dyn NoiseFn<[f64; 3]>) -> Self","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1232},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map_builder.rs","byte_start":211890,"byte_end":211894,"line_start":10,"line_end":10,"column_start":8,"column_end":12},"name":"size","qualname":"::utils::noise_map_builder::NoiseMapBuilder::size","value":"fn (&self) -> (usize, usize)","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1233},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map_builder.rs","byte_start":211929,"byte_end":211934,"line_start":12,"line_end":12,"column_start":8,"column_end":13},"name":"build","qualname":"::utils::noise_map_builder::NoiseMapBuilder::build","value":"fn (&self) -> NoiseMap","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1234},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map_builder.rs","byte_start":211969,"byte_end":211987,"line_start":15,"line_end":15,"column_start":12,"column_end":30},"name":"CylinderMapBuilder","qualname":"::utils::noise_map_builder::CylinderMapBuilder","value":"CylinderMapBuilder {  }","parent":null,"children":[{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1239}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1243},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map_builder.rs","byte_start":212175,"byte_end":212178,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"new","qualname":"<CylinderMapBuilder>::new","value":"fn (source_module: &'a dyn NoiseFn<[f64; 3]>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1245},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map_builder.rs","byte_start":212426,"byte_end":212442,"line_start":32,"line_end":32,"column_start":12,"column_end":28},"name":"set_angle_bounds","qualname":"<CylinderMapBuilder>::set_angle_bounds","value":"fn (self, lower_bound: f64, upper_bound: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1246},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map_builder.rs","byte_start":212927,"byte_end":212944,"line_start":49,"line_end":49,"column_start":12,"column_end":29},"name":"set_height_bounds","qualname":"<CylinderMapBuilder>::set_height_bounds","value":"fn (self, lower_bound: f64, upper_bound: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1247},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map_builder.rs","byte_start":213431,"byte_end":213443,"line_start":66,"line_end":66,"column_start":12,"column_end":24},"name":"angle_bounds","qualname":"<CylinderMapBuilder>::angle_bounds","value":"fn (&self) -> (f64, f64)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1248},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map_builder.rs","byte_start":213511,"byte_end":213524,"line_start":70,"line_end":70,"column_start":12,"column_end":25},"name":"height_bounds","qualname":"<CylinderMapBuilder>::height_bounds","value":"fn (&self) -> (f64, f64)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1256},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map_builder.rs","byte_start":215147,"byte_end":215162,"line_start":129,"line_end":129,"column_start":12,"column_end":27},"name":"PlaneMapBuilder","qualname":"::utils::noise_map_builder::PlaneMapBuilder","value":"PlaneMapBuilder {  }","parent":null,"children":[{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1262}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1266},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map_builder.rs","byte_start":215361,"byte_end":215364,"line_start":138,"line_end":138,"column_start":12,"column_end":15},"name":"new","qualname":"<PlaneMapBuilder>::new","value":"fn (source_module: &'a dyn NoiseFn<[f64; 3]>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1268},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map_builder.rs","byte_start":215630,"byte_end":215645,"line_start":148,"line_end":148,"column_start":12,"column_end":27},"name":"set_is_seamless","qualname":"<PlaneMapBuilder>::set_is_seamless","value":"fn (self, is_seamless: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1269},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map_builder.rs","byte_start":215779,"byte_end":215791,"line_start":155,"line_end":155,"column_start":12,"column_end":24},"name":"set_x_bounds","qualname":"<PlaneMapBuilder>::set_x_bounds","value":"fn (self, lower_x_bound: f64, upper_x_bound: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1270},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map_builder.rs","byte_start":215975,"byte_end":215987,"line_start":162,"line_end":162,"column_start":12,"column_end":24},"name":"set_y_bounds","qualname":"<PlaneMapBuilder>::set_y_bounds","value":"fn (self, lower_y_bound: f64, upper_y_bound: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1271},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map_builder.rs","byte_start":216171,"byte_end":216179,"line_start":169,"line_end":169,"column_start":12,"column_end":20},"name":"x_bounds","qualname":"<PlaneMapBuilder>::x_bounds","value":"fn (&self) -> (f64, f64)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1272},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map_builder.rs","byte_start":216243,"byte_end":216251,"line_start":173,"line_end":173,"column_start":12,"column_end":20},"name":"y_bounds","qualname":"<PlaneMapBuilder>::y_bounds","value":"fn (&self) -> (f64, f64)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1280},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map_builder.rs","byte_start":218528,"byte_end":218544,"line_start":245,"line_end":245,"column_start":12,"column_end":28},"name":"SphereMapBuilder","qualname":"::utils::noise_map_builder::SphereMapBuilder","value":"SphereMapBuilder {  }","parent":null,"children":[{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1285}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1289},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map_builder.rs","byte_start":218736,"byte_end":218739,"line_start":253,"line_end":253,"column_start":12,"column_end":15},"name":"new","qualname":"<SphereMapBuilder>::new","value":"fn (source_module: &'a dyn NoiseFn<[f64; 3]>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1291},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map_builder.rs","byte_start":218989,"byte_end":219008,"line_start":262,"line_end":262,"column_start":12,"column_end":31},"name":"set_latitude_bounds","qualname":"<SphereMapBuilder>::set_latitude_bounds","value":"fn (self, min_lat_bound: f64, max_lat_bound: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1292},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map_builder.rs","byte_start":219200,"byte_end":219220,"line_start":269,"line_end":269,"column_start":12,"column_end":32},"name":"set_longitude_bounds","qualname":"<SphereMapBuilder>::set_longitude_bounds","value":"fn (self, min_lon_bound: f64, max_lon_bound: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1293},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map_builder.rs","byte_start":219413,"byte_end":219423,"line_start":276,"line_end":276,"column_start":12,"column_end":22},"name":"set_bounds","qualname":"<SphereMapBuilder>::set_bounds","value":"fn (self, min_lat_bound: f64, max_lat_bound: f64, min_lon_bound: f64, max_lon_bound: f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1294},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map_builder.rs","byte_start":219764,"byte_end":219779,"line_start":290,"line_end":290,"column_start":12,"column_end":27},"name":"latitude_bounds","qualname":"<SphereMapBuilder>::latitude_bounds","value":"fn (&self) -> (f64, f64)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1295},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map_builder.rs","byte_start":219850,"byte_end":219866,"line_start":294,"line_end":294,"column_start":12,"column_end":28},"name":"longitude_bounds","qualname":"<SphereMapBuilder>::longitude_bounds","value":"fn (&self) -> (f64, f64)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/cache.rs","byte_start":15701,"byte_end":15706,"line_start":28,"line_end":28,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/cache.rs","byte_start":15932,"byte_end":15937,"line_start":38,"line_end":38,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/cache.rs","byte_start":16517,"byte_end":16522,"line_start":59,"line_end":59,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/cache.rs","byte_start":17102,"byte_end":17107,"line_start":80,"line_end":80,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/add.rs","byte_start":18109,"byte_end":18112,"line_start":13,"line_end":13,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/add.rs","byte_start":18275,"byte_end":18278,"line_start":19,"line_end":19,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/max.rs","byte_start":18703,"byte_end":18706,"line_start":13,"line_end":13,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/max.rs","byte_start":18869,"byte_end":18872,"line_start":19,"line_end":19,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/min.rs","byte_start":19303,"byte_end":19306,"line_start":13,"line_end":13,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/min.rs","byte_start":19469,"byte_end":19472,"line_start":19,"line_end":19,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/multiply.rs","byte_start":19908,"byte_end":19916,"line_start":13,"line_end":13,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/multiply.rs","byte_start":20079,"byte_end":20087,"line_start":19,"line_end":19,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/power.rs","byte_start":20562,"byte_end":20567,"line_start":13,"line_end":13,"column_start":13,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/power.rs","byte_start":20730,"byte_end":20735,"line_start":19,"line_end":19,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/checkerboard.rs","byte_start":21918,"byte_end":21930,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/checkerboard.rs","byte_start":22243,"byte_end":22255,"line_start":40,"line_end":40,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/checkerboard.rs","byte_start":22464,"byte_end":22476,"line_start":48,"line_end":48,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/checkerboard.rs","byte_start":22615,"byte_end":22627,"line_start":54,"line_end":54,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/checkerboard.rs","byte_start":22766,"byte_end":22778,"line_start":60,"line_end":60,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/constant.rs","byte_start":23566,"byte_end":23574,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/constant.rs","byte_start":23675,"byte_end":23683,"line_start":22,"line_end":22,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/cylinders.rs","byte_start":24224,"byte_end":24233,"line_start":15,"line_end":15,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/cylinders.rs","byte_start":24498,"byte_end":24507,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/cylinders.rs","byte_start":24596,"byte_end":24605,"line_start":35,"line_end":35,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/cylinders.rs","byte_start":24746,"byte_end":24755,"line_start":41,"line_end":41,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/cylinders.rs","byte_start":24896,"byte_end":24905,"line_start":47,"line_end":47,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":28297,"byte_end":28307,"line_start":50,"line_end":50,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":28989,"byte_end":28999,"line_start":70,"line_end":70,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":29080,"byte_end":29090,"line_start":76,"line_end":76,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":29764,"byte_end":29774,"line_start":106,"line_end":106,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":30141,"byte_end":30151,"line_start":125,"line_end":125,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":31136,"byte_end":31146,"line_start":155,"line_end":155,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":32131,"byte_end":32141,"line_start":185,"line_end":185,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":34830,"byte_end":34836,"line_start":46,"line_end":46,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":35533,"byte_end":35539,"line_start":66,"line_end":66,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":35620,"byte_end":35626,"line_start":72,"line_end":72,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":36300,"byte_end":36306,"line_start":102,"line_end":102,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":368},{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":36667,"byte_end":36673,"line_start":121,"line_end":121,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":37554,"byte_end":37560,"line_start":151,"line_end":151,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":38441,"byte_end":38447,"line_start":181,"line_end":181,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":41491,"byte_end":41494,"line_start":56,"line_end":56,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":42191,"byte_end":42194,"line_start":76,"line_end":76,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":42275,"byte_end":42278,"line_start":82,"line_end":82,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":42952,"byte_end":42955,"line_start":112,"line_end":112,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":43313,"byte_end":43316,"line_start":131,"line_end":131,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":44128,"byte_end":44131,"line_start":158,"line_end":158,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":44943,"byte_end":44946,"line_start":185,"line_end":185,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":47314,"byte_end":47325,"line_start":44,"line_end":44,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":48008,"byte_end":48019,"line_start":64,"line_end":64,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":48100,"byte_end":48111,"line_start":70,"line_end":70,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":48785,"byte_end":48796,"line_start":100,"line_end":100,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":440},{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":49164,"byte_end":49175,"line_start":119,"line_end":119,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":50295,"byte_end":50306,"line_start":153,"line_end":153,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":51426,"byte_end":51437,"line_start":187,"line_end":187,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":55080,"byte_end":55091,"line_start":61,"line_end":61,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":56023,"byte_end":56034,"line_start":90,"line_end":90,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":56115,"byte_end":56126,"line_start":96,"line_end":96,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":56800,"byte_end":56811,"line_start":126,"line_end":126,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":479},{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":57179,"byte_end":57190,"line_start":145,"line_end":145,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":58702,"byte_end":58713,"line_start":191,"line_end":191,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":60225,"byte_end":60236,"line_start":237,"line_end":237,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/open_simplex.rs","byte_start":62834,"byte_end":62845,"line_start":29,"line_end":29,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":519},{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/open_simplex.rs","byte_start":63065,"byte_end":63076,"line_start":40,"line_end":40,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/open_simplex.rs","byte_start":63153,"byte_end":63164,"line_start":46,"line_end":46,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/open_simplex.rs","byte_start":63848,"byte_end":63859,"line_start":69,"line_end":69,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/open_simplex.rs","byte_start":66943,"byte_end":66954,"line_start":150,"line_end":150,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/open_simplex.rs","byte_start":72667,"byte_end":72678,"line_start":284,"line_end":284,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/perlin.rs","byte_start":85797,"byte_end":85803,"line_start":13,"line_end":13,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/perlin.rs","byte_start":86027,"byte_end":86033,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/perlin.rs","byte_start":86110,"byte_end":86116,"line_start":30,"line_end":30,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/perlin.rs","byte_start":86649,"byte_end":86655,"line_start":51,"line_end":51,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/perlin.rs","byte_start":88333,"byte_end":88339,"line_start":102,"line_end":102,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/perlin.rs","byte_start":91016,"byte_end":91022,"line_start":177,"line_end":177,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/super_simplex.rs","byte_start":101837,"byte_end":101849,"line_start":97,"line_end":97,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":594},{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/super_simplex.rs","byte_start":102073,"byte_end":102085,"line_start":108,"line_end":108,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/super_simplex.rs","byte_start":102162,"byte_end":102174,"line_start":114,"line_end":114,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":599},{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/super_simplex.rs","byte_start":102721,"byte_end":102733,"line_start":135,"line_end":135,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/super_simplex.rs","byte_start":104710,"byte_end":104722,"line_start":177,"line_end":177,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/value.rs","byte_start":108579,"byte_end":108584,"line_start":13,"line_end":13,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":621},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/value.rs","byte_start":108808,"byte_end":108813,"line_start":24,"line_end":24,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/value.rs","byte_start":108890,"byte_end":108895,"line_start":30,"line_end":30,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":626},{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/value.rs","byte_start":109426,"byte_end":109431,"line_start":51,"line_end":51,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/value.rs","byte_start":110444,"byte_end":110449,"line_start":76,"line_end":76,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/value.rs","byte_start":112418,"byte_end":112423,"line_start":133,"line_end":133,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":117503,"byte_end":117509,"line_start":33,"line_end":33,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":118839,"byte_end":118845,"line_start":80,"line_end":80,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":118922,"byte_end":118928,"line_start":86,"line_end":86,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":661},{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":121958,"byte_end":121964,"line_start":190,"line_end":190,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":124452,"byte_end":124458,"line_start":268,"line_end":268,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":687}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":128260,"byte_end":128266,"line_start":378,"line_end":378,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/abs.rs","byte_start":134431,"byte_end":134434,"line_start":10,"line_end":10,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/abs.rs","byte_start":134557,"byte_end":134560,"line_start":16,"line_end":16,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/clamp.rs","byte_start":134985,"byte_end":134990,"line_start":14,"line_end":14,"column_start":13,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/clamp.rs","byte_start":135664,"byte_end":135669,"line_start":44,"line_end":44,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/curve.rs","byte_start":136890,"byte_end":136895,"line_start":33,"line_end":33,"column_start":13,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":752},{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/curve.rs","byte_start":138029,"byte_end":138034,"line_start":70,"line_end":70,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/exponent.rs","byte_start":141043,"byte_end":141051,"line_start":21,"line_end":21,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":774},{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/exponent.rs","byte_start":141318,"byte_end":141326,"line_start":34,"line_end":34,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/invert.rs","byte_start":141778,"byte_end":141784,"line_start":9,"line_end":9,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":789}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/invert.rs","byte_start":141909,"byte_end":141915,"line_start":15,"line_end":15,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":793}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/scale_bias.rs","byte_start":142672,"byte_end":142681,"line_start":21,"line_end":21,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/scale_bias.rs","byte_start":143043,"byte_end":143052,"line_start":39,"line_end":39,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":144896,"byte_end":144903,"line_start":40,"line_end":40,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":832}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":146595,"byte_end":146602,"line_start":89,"line_end":89,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/blend.rs","byte_start":149474,"byte_end":149479,"line_start":23,"line_end":23,"column_start":13,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/blend.rs","byte_start":149757,"byte_end":149762,"line_start":37,"line_end":37,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":859}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/select.rs","byte_start":150869,"byte_end":150875,"line_start":26,"line_end":26,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/select.rs","byte_start":151482,"byte_end":151488,"line_start":53,"line_end":53,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/displace.rs","byte_start":154287,"byte_end":154295,"line_start":28,"line_end":28,"column_start":5,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":910}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/displace.rs","byte_start":154766,"byte_end":154774,"line_start":48,"line_end":48,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/displace.rs","byte_start":155572,"byte_end":155580,"line_start":68,"line_end":68,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/displace.rs","byte_start":156553,"byte_end":156561,"line_start":91,"line_end":91,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":931}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":158693,"byte_end":158704,"line_start":33,"line_end":33,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":160002,"byte_end":160013,"line_start":81,"line_end":81,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":955}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":160599,"byte_end":160610,"line_start":101,"line_end":101,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":958}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":161953,"byte_end":161964,"line_start":135,"line_end":135,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":163181,"byte_end":163191,"line_start":30,"line_end":30,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":164800,"byte_end":164810,"line_start":89,"line_end":89,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":165044,"byte_end":165054,"line_start":99,"line_end":99,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":989}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":165347,"byte_end":165357,"line_start":112,"line_end":112,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":167997,"byte_end":168011,"line_start":30,"line_end":30,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":169983,"byte_end":169997,"line_start":107,"line_end":107,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":170243,"byte_end":170257,"line_start":117,"line_end":117,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":170568,"byte_end":170582,"line_start":130,"line_end":130,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1023}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/turbulence.rs","byte_start":171998,"byte_end":172008,"line_start":34,"line_end":34,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/turbulence.rs","byte_start":174291,"byte_end":174301,"line_start":93,"line_end":93,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1046},{"krate":0,"index":1047}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/turbulence.rs","byte_start":174817,"byte_end":174827,"line_start":110,"line_end":110,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/turbulence.rs","byte_start":175615,"byte_end":175625,"line_start":131,"line_end":131,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/turbulence.rs","byte_start":176761,"byte_end":176771,"line_start":159,"line_end":159,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1056}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/permutationtable.rs","byte_start":178808,"byte_end":178816,"line_start":19,"line_end":19,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1083}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/permutationtable.rs","byte_start":179554,"byte_end":179570,"line_start":39,"line_end":39,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1088},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/permutationtable.rs","byte_start":180864,"byte_end":180880,"line_start":78,"line_end":78,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/color_gradient.rs","byte_start":181927,"byte_end":181940,"line_start":17,"line_end":17,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1111},{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1118}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/image_renderer.rs","byte_start":188700,"byte_end":188713,"line_start":22,"line_end":22,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1136},{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1144},{"krate":0,"index":1145},{"krate":0,"index":1146},{"krate":0,"index":1147},{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1150},{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1159}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/image_renderer.rs","byte_start":199875,"byte_end":199888,"line_start":356,"line_end":356,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1161}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/image_renderer.rs","byte_start":201052,"byte_end":201063,"line_start":402,"line_end":402,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1163},{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1171}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_image.rs","byte_start":204392,"byte_end":204402,"line_start":18,"line_end":18,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1191},{"krate":0,"index":1192},{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1197}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_image.rs","byte_start":207774,"byte_end":207784,"line_start":131,"line_end":131,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1199}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map.rs","byte_start":208179,"byte_end":208187,"line_start":19,"line_end":19,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218},{"krate":0,"index":1219},{"krate":0,"index":1220}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map.rs","byte_start":211553,"byte_end":211561,"line_start":130,"line_end":130,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1222}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map_builder.rs","byte_start":212139,"byte_end":212157,"line_start":22,"line_end":22,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1243},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1248}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map_builder.rs","byte_start":213617,"byte_end":213635,"line_start":75,"line_end":75,"column_start":34,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1254},{"krate":0,"index":1255}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map_builder.rs","byte_start":215328,"byte_end":215343,"line_start":137,"line_end":137,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1266},{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map_builder.rs","byte_start":216339,"byte_end":216354,"line_start":178,"line_end":178,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1278},{"krate":0,"index":1279}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map_builder.rs","byte_start":218702,"byte_end":218718,"line_start":252,"line_end":252,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1289},{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1295}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map_builder.rs","byte_start":219962,"byte_end":219978,"line_start":299,"line_end":299,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1298},{"krate":0,"index":1299},{"krate":0,"index":1301},{"krate":0,"index":1302}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/lib.rs","byte_start":448,"byte_end":453,"line_start":25,"line_end":25,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1096}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/cache.rs","byte_start":15701,"byte_end":15706,"line_start":28,"line_end":28,"column_start":14,"column_end":19},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/cache.rs","byte_start":15932,"byte_end":15937,"line_start":38,"line_end":38,"column_start":39,"column_end":44},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1313},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/cache.rs","byte_start":16517,"byte_end":16522,"line_start":59,"line_end":59,"column_start":39,"column_end":44},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1313},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/cache.rs","byte_start":17102,"byte_end":17107,"line_start":80,"line_end":80,"column_start":39,"column_end":44},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1313},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/add.rs","byte_start":18109,"byte_end":18112,"line_start":13,"line_end":13,"column_start":13,"column_end":16},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/add.rs","byte_start":18275,"byte_end":18278,"line_start":19,"line_end":19,"column_start":28,"column_end":31},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":167},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/max.rs","byte_start":18703,"byte_end":18706,"line_start":13,"line_end":13,"column_start":13,"column_end":16},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/max.rs","byte_start":18869,"byte_end":18872,"line_start":19,"line_end":19,"column_start":28,"column_end":31},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":182},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/min.rs","byte_start":19303,"byte_end":19306,"line_start":13,"line_end":13,"column_start":13,"column_end":16},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/min.rs","byte_start":19469,"byte_end":19472,"line_start":19,"line_end":19,"column_start":28,"column_end":31},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":197},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/multiply.rs","byte_start":19908,"byte_end":19916,"line_start":13,"line_end":13,"column_start":13,"column_end":21},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":212},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/multiply.rs","byte_start":20079,"byte_end":20087,"line_start":19,"line_end":19,"column_start":28,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":212},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/power.rs","byte_start":20562,"byte_end":20567,"line_start":13,"line_end":13,"column_start":13,"column_end":18},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":227},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/combiners/power.rs","byte_start":20730,"byte_end":20735,"line_start":19,"line_end":19,"column_start":28,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":227},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/checkerboard.rs","byte_start":21918,"byte_end":21930,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/checkerboard.rs","byte_start":22243,"byte_end":22255,"line_start":40,"line_end":40,"column_start":18,"column_end":30},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1324},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/checkerboard.rs","byte_start":22464,"byte_end":22476,"line_start":48,"line_end":48,"column_start":31,"column_end":43},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1324},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/checkerboard.rs","byte_start":22615,"byte_end":22627,"line_start":54,"line_end":54,"column_start":31,"column_end":43},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1324},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/checkerboard.rs","byte_start":22766,"byte_end":22778,"line_start":60,"line_end":60,"column_start":31,"column_end":43},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1324},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/constant.rs","byte_start":23566,"byte_end":23574,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/constant.rs","byte_start":23675,"byte_end":23683,"line_start":22,"line_end":22,"column_start":30,"column_end":38},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1332},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/cylinders.rs","byte_start":24224,"byte_end":24233,"line_start":15,"line_end":15,"column_start":6,"column_end":15},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/cylinders.rs","byte_start":24498,"byte_end":24507,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1339},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/cylinders.rs","byte_start":24596,"byte_end":24605,"line_start":35,"line_end":35,"column_start":31,"column_end":40},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1339},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/cylinders.rs","byte_start":24746,"byte_end":24755,"line_start":41,"line_end":41,"column_start":31,"column_end":40},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1339},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/cylinders.rs","byte_start":24896,"byte_end":24905,"line_start":47,"line_end":47,"column_start":31,"column_end":40},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1339},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":28297,"byte_end":28307,"line_start":50,"line_end":50,"column_start":6,"column_end":16},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":28989,"byte_end":28999,"line_start":70,"line_end":70,"column_start":18,"column_end":28},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1346},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":29080,"byte_end":29090,"line_start":76,"line_end":76,"column_start":23,"column_end":33},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1346},"to":{"krate":0,"index":490}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":29764,"byte_end":29774,"line_start":106,"line_end":106,"column_start":19,"column_end":29},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1346},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":30141,"byte_end":30151,"line_start":125,"line_end":125,"column_start":31,"column_end":41},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1346},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":31136,"byte_end":31146,"line_start":155,"line_end":155,"column_start":31,"column_end":41},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1346},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/basicmulti.rs","byte_start":32131,"byte_end":32141,"line_start":185,"line_end":185,"column_start":31,"column_end":41},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1346},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":34830,"byte_end":34836,"line_start":46,"line_end":46,"column_start":6,"column_end":12},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":35533,"byte_end":35539,"line_start":66,"line_end":66,"column_start":18,"column_end":24},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1357},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":35620,"byte_end":35626,"line_start":72,"line_end":72,"column_start":23,"column_end":29},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1357},"to":{"krate":0,"index":490}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":36300,"byte_end":36306,"line_start":102,"line_end":102,"column_start":19,"column_end":25},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1357},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":36667,"byte_end":36673,"line_start":121,"line_end":121,"column_start":31,"column_end":37},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1357},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":37554,"byte_end":37560,"line_start":151,"line_end":151,"column_start":31,"column_end":37},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1357},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/billow.rs","byte_start":38441,"byte_end":38447,"line_start":181,"line_end":181,"column_start":31,"column_end":37},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1357},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":41491,"byte_end":41494,"line_start":56,"line_end":56,"column_start":6,"column_end":9},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":42191,"byte_end":42194,"line_start":76,"line_end":76,"column_start":18,"column_end":21},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1368},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":42275,"byte_end":42278,"line_start":82,"line_end":82,"column_start":23,"column_end":26},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1368},"to":{"krate":0,"index":490}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":42952,"byte_end":42955,"line_start":112,"line_end":112,"column_start":19,"column_end":22},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1368},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":43313,"byte_end":43316,"line_start":131,"line_end":131,"column_start":31,"column_end":34},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1368},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":44128,"byte_end":44131,"line_start":158,"line_end":158,"column_start":31,"column_end":34},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1368},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/fbm.rs","byte_start":44943,"byte_end":44946,"line_start":185,"line_end":185,"column_start":31,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1368},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":47314,"byte_end":47325,"line_start":44,"line_end":44,"column_start":6,"column_end":17},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1379},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":48008,"byte_end":48019,"line_start":64,"line_end":64,"column_start":18,"column_end":29},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1379},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":48100,"byte_end":48111,"line_start":70,"line_end":70,"column_start":23,"column_end":34},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1379},"to":{"krate":0,"index":490}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":48785,"byte_end":48796,"line_start":100,"line_end":100,"column_start":19,"column_end":30},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1379},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":49164,"byte_end":49175,"line_start":119,"line_end":119,"column_start":31,"column_end":42},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1379},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":50295,"byte_end":50306,"line_start":153,"line_end":153,"column_start":31,"column_end":42},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1379},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/hybridmulti.rs","byte_start":51426,"byte_end":51437,"line_start":187,"line_end":187,"column_start":31,"column_end":42},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1379},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":55080,"byte_end":55091,"line_start":61,"line_end":61,"column_start":6,"column_end":17},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":56023,"byte_end":56034,"line_start":90,"line_end":90,"column_start":18,"column_end":29},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1390},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":56115,"byte_end":56126,"line_start":96,"line_end":96,"column_start":23,"column_end":34},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1390},"to":{"krate":0,"index":490}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":56800,"byte_end":56811,"line_start":126,"line_end":126,"column_start":19,"column_end":30},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1390},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":57179,"byte_end":57190,"line_start":145,"line_end":145,"column_start":31,"column_end":42},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1390},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":58702,"byte_end":58713,"line_start":191,"line_end":191,"column_start":31,"column_end":42},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1390},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/fractals/ridgedmulti.rs","byte_start":60225,"byte_end":60236,"line_start":237,"line_end":237,"column_start":31,"column_end":42},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1390},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/open_simplex.rs","byte_start":62834,"byte_end":62845,"line_start":29,"line_end":29,"column_start":6,"column_end":17},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/open_simplex.rs","byte_start":63065,"byte_end":63076,"line_start":40,"line_end":40,"column_start":18,"column_end":29},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1402},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/open_simplex.rs","byte_start":63153,"byte_end":63164,"line_start":46,"line_end":46,"column_start":19,"column_end":30},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1402},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/open_simplex.rs","byte_start":63848,"byte_end":63859,"line_start":69,"line_end":69,"column_start":31,"column_end":42},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1402},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/open_simplex.rs","byte_start":66943,"byte_end":66954,"line_start":150,"line_end":150,"column_start":31,"column_end":42},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1402},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/open_simplex.rs","byte_start":72667,"byte_end":72678,"line_start":284,"line_end":284,"column_start":31,"column_end":42},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1402},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/perlin.rs","byte_start":85797,"byte_end":85803,"line_start":13,"line_end":13,"column_start":6,"column_end":12},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1410},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/perlin.rs","byte_start":86027,"byte_end":86033,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1410},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/perlin.rs","byte_start":86110,"byte_end":86116,"line_start":30,"line_end":30,"column_start":19,"column_end":25},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1410},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/perlin.rs","byte_start":86649,"byte_end":86655,"line_start":51,"line_end":51,"column_start":31,"column_end":37},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1410},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/perlin.rs","byte_start":88333,"byte_end":88339,"line_start":102,"line_end":102,"column_start":31,"column_end":37},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1410},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/perlin.rs","byte_start":91016,"byte_end":91022,"line_start":177,"line_end":177,"column_start":31,"column_end":37},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1410},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/super_simplex.rs","byte_start":101837,"byte_end":101849,"line_start":97,"line_end":97,"column_start":6,"column_end":18},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/super_simplex.rs","byte_start":102073,"byte_end":102085,"line_start":108,"line_end":108,"column_start":18,"column_end":30},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1425},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/super_simplex.rs","byte_start":102162,"byte_end":102174,"line_start":114,"line_end":114,"column_start":19,"column_end":31},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1425},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/super_simplex.rs","byte_start":102721,"byte_end":102733,"line_start":135,"line_end":135,"column_start":31,"column_end":43},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1425},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/super_simplex.rs","byte_start":104710,"byte_end":104722,"line_start":177,"line_end":177,"column_start":31,"column_end":43},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1425},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/value.rs","byte_start":108579,"byte_end":108584,"line_start":13,"line_end":13,"column_start":6,"column_end":11},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1433},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/value.rs","byte_start":108808,"byte_end":108813,"line_start":24,"line_end":24,"column_start":18,"column_end":23},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1433},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/value.rs","byte_start":108890,"byte_end":108895,"line_start":30,"line_end":30,"column_start":19,"column_end":24},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1433},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/value.rs","byte_start":109426,"byte_end":109431,"line_start":51,"line_end":51,"column_start":31,"column_end":36},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1433},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/value.rs","byte_start":110444,"byte_end":110449,"line_start":76,"line_end":76,"column_start":31,"column_end":36},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1433},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/value.rs","byte_start":112418,"byte_end":112423,"line_start":133,"line_end":133,"column_start":31,"column_end":36},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1433},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":117503,"byte_end":117509,"line_start":33,"line_end":33,"column_start":6,"column_end":12},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1441},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":118839,"byte_end":118845,"line_start":80,"line_end":80,"column_start":18,"column_end":24},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1441},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":118922,"byte_end":118928,"line_start":86,"line_end":86,"column_start":19,"column_end":25},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1441},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":121958,"byte_end":121964,"line_start":190,"line_end":190,"column_start":31,"column_end":37},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1441},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":124452,"byte_end":124458,"line_start":268,"line_end":268,"column_start":31,"column_end":37},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1441},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/generators/worley.rs","byte_start":128260,"byte_end":128266,"line_start":378,"line_end":378,"column_start":31,"column_end":37},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1441},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/abs.rs","byte_start":134431,"byte_end":134434,"line_start":10,"line_end":10,"column_start":13,"column_end":16},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":704},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/abs.rs","byte_start":134557,"byte_end":134560,"line_start":16,"line_end":16,"column_start":28,"column_end":31},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":704},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/clamp.rs","byte_start":134985,"byte_end":134990,"line_start":14,"line_end":14,"column_start":13,"column_end":18},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":719},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/clamp.rs","byte_start":135664,"byte_end":135669,"line_start":44,"line_end":44,"column_start":28,"column_end":33},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":719},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/curve.rs","byte_start":136890,"byte_end":136895,"line_start":33,"line_end":33,"column_start":13,"column_end":18},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/curve.rs","byte_start":138029,"byte_end":138034,"line_start":70,"line_end":70,"column_start":28,"column_end":33},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":740},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/exponent.rs","byte_start":141043,"byte_end":141051,"line_start":21,"line_end":21,"column_start":13,"column_end":21},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":766},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/exponent.rs","byte_start":141318,"byte_end":141326,"line_start":34,"line_end":34,"column_start":28,"column_end":36},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":766},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/invert.rs","byte_start":141778,"byte_end":141784,"line_start":9,"line_end":9,"column_start":13,"column_end":19},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/invert.rs","byte_start":141909,"byte_end":141915,"line_start":15,"line_end":15,"column_start":28,"column_end":34},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":782},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/scale_bias.rs","byte_start":142672,"byte_end":142681,"line_start":21,"line_end":21,"column_start":13,"column_end":22},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":796},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/scale_bias.rs","byte_start":143043,"byte_end":143052,"line_start":39,"line_end":39,"column_start":28,"column_end":37},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":796},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":144896,"byte_end":144903,"line_start":40,"line_end":40,"column_start":13,"column_end":20},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":818},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/modifiers/terrace.rs","byte_start":146595,"byte_end":146602,"line_start":89,"line_end":89,"column_start":28,"column_end":35},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":818},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/blend.rs","byte_start":149474,"byte_end":149479,"line_start":23,"line_end":23,"column_start":13,"column_end":18},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/blend.rs","byte_start":149757,"byte_end":149762,"line_start":37,"line_end":37,"column_start":28,"column_end":33},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":846},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/select.rs","byte_start":150869,"byte_end":150875,"line_start":26,"line_end":26,"column_start":13,"column_end":19},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":863},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/selectors/select.rs","byte_start":151482,"byte_end":151488,"line_start":53,"line_end":53,"column_start":28,"column_end":34},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":863},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/displace.rs","byte_start":154287,"byte_end":154295,"line_start":28,"line_end":28,"column_start":5,"column_end":13},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":893},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/displace.rs","byte_start":154766,"byte_end":154774,"line_start":48,"line_end":48,"column_start":9,"column_end":17},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":893},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/displace.rs","byte_start":155572,"byte_end":155580,"line_start":68,"line_end":68,"column_start":9,"column_end":17},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":893},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/displace.rs","byte_start":156553,"byte_end":156561,"line_start":91,"line_end":91,"column_start":9,"column_end":17},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":893},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":158693,"byte_end":158704,"line_start":33,"line_end":33,"column_start":14,"column_end":25},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":160002,"byte_end":160013,"line_start":81,"line_end":81,"column_start":39,"column_end":50},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":938},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":160599,"byte_end":160610,"line_start":101,"line_end":101,"column_start":39,"column_end":50},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":938},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/rotate_point.rs","byte_start":161953,"byte_end":161964,"line_start":135,"line_end":135,"column_start":39,"column_end":50},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":938},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":163181,"byte_end":163191,"line_start":30,"line_end":30,"column_start":14,"column_end":24},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":968},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":164800,"byte_end":164810,"line_start":89,"line_end":89,"column_start":39,"column_end":49},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":968},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":165044,"byte_end":165054,"line_start":99,"line_end":99,"column_start":39,"column_end":49},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":968},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/scale_point.rs","byte_start":165347,"byte_end":165357,"line_start":112,"line_end":112,"column_start":39,"column_end":49},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":968},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":167997,"byte_end":168011,"line_start":30,"line_end":30,"column_start":14,"column_end":28},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":999},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":169983,"byte_end":169997,"line_start":107,"line_end":107,"column_start":39,"column_end":53},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":999},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":170243,"byte_end":170257,"line_start":117,"line_end":117,"column_start":39,"column_end":53},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":999},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/translate_point.rs","byte_start":170568,"byte_end":170582,"line_start":130,"line_end":130,"column_start":39,"column_end":53},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":999},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/turbulence.rs","byte_start":171998,"byte_end":172008,"line_start":34,"line_end":34,"column_start":14,"column_end":24},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/turbulence.rs","byte_start":174291,"byte_end":174301,"line_start":93,"line_end":93,"column_start":27,"column_end":37},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1472},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/turbulence.rs","byte_start":174817,"byte_end":174827,"line_start":110,"line_end":110,"column_start":39,"column_end":49},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1472},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/turbulence.rs","byte_start":175615,"byte_end":175625,"line_start":131,"line_end":131,"column_start":39,"column_end":49},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1472},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/noise_fns/transformers/turbulence.rs","byte_start":176761,"byte_end":176771,"line_start":159,"line_end":159,"column_start":39,"column_end":49},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1472},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/permutationtable.rs","byte_start":178808,"byte_end":178816,"line_start":19,"line_end":19,"column_start":41,"column_end":49},"kind":{"Impl":{"id":129}},"from":{"krate":47,"index":1915},"to":{"krate":47,"index":349}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/permutationtable.rs","byte_start":179554,"byte_end":179570,"line_start":39,"line_end":39,"column_start":6,"column_end":22},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/permutationtable.rs","byte_start":180864,"byte_end":180880,"line_start":78,"line_end":78,"column_start":21,"column_end":37},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1489},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/color_gradient.rs","byte_start":181927,"byte_end":181940,"line_start":17,"line_end":17,"column_start":6,"column_end":19},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1506},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/image_renderer.rs","byte_start":188700,"byte_end":188713,"line_start":22,"line_end":22,"column_start":6,"column_end":19},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/image_renderer.rs","byte_start":199875,"byte_end":199888,"line_start":356,"line_end":356,"column_start":18,"column_end":31},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1130},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/image_renderer.rs","byte_start":201052,"byte_end":201063,"line_start":402,"line_end":402,"column_start":6,"column_end":17},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1514},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_image.rs","byte_start":204392,"byte_end":204402,"line_start":18,"line_end":18,"column_start":6,"column_end":16},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_image.rs","byte_start":207774,"byte_end":207784,"line_start":131,"line_end":131,"column_start":18,"column_end":28},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1183},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map.rs","byte_start":208179,"byte_end":208187,"line_start":19,"line_end":19,"column_start":6,"column_end":14},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1207},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map.rs","byte_start":211553,"byte_end":211561,"line_start":130,"line_end":130,"column_start":18,"column_end":26},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1207},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map_builder.rs","byte_start":212139,"byte_end":212157,"line_start":22,"line_end":22,"column_start":10,"column_end":28},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map_builder.rs","byte_start":213617,"byte_end":213635,"line_start":75,"line_end":75,"column_start":34,"column_end":52},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1234},"to":{"krate":0,"index":1227}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map_builder.rs","byte_start":215328,"byte_end":215343,"line_start":137,"line_end":137,"column_start":10,"column_end":25},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map_builder.rs","byte_start":216339,"byte_end":216354,"line_start":178,"line_end":178,"column_start":34,"column_end":49},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1256},"to":{"krate":0,"index":1227}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map_builder.rs","byte_start":218702,"byte_end":218718,"line_start":252,"line_end":252,"column_start":10,"column_end":26},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/noise-0.6.0/src/utils/noise_map_builder.rs","byte_start":219962,"byte_end":219978,"line_start":299,"line_end":299,"column_start":34,"column_end":50},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1280},"to":{"krate":0,"index":1227}}]}