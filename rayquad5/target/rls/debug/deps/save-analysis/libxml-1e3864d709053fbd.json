{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3","program":"/home/dapx/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","xml","/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=1e3864d709053fbd","-C","extra-filename=-1e3864d709053fbd","--out-dir","/home/dapx/Sources/rust/nannou-sketches/rayquad4/target/rls/debug/deps","-L","dependency=/home/dapx/Sources/rust/nannou-sketches/rayquad4/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/dapx/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/dapx/Sources/rust/nannou-sketches/rayquad4/target/rls/debug/deps/libxml-1e3864d709053fbd.rmeta"},"prelude":{"crate_id":{"name":"xml","disambiguator":[15017834915304358724,772194227792966984]},"crate_root":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src","external_crates":[{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6528836112941390771,2028724122443642861]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14673858572786541001,1892137737928154225]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17117278319981904138,16406771668640906211]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11917984669602857069,6489053565454986112]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12362109612685904499,382626321872987168]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4151571022625212401,1888722734493896023]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4322023011642103678,14222697504055880771]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8420579222726968489,9136630199856205157]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[13745492306750544571,5475822973716876235]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14030493773096865675,2651053314204399788]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[8310449678941769819,14748581810882876583]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17983290995241619958,6056021938633518527]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2836549575564442446,8627689666430273126]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7274711288869898279,15671112109327640352]}}],"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/lib.rs","byte_start":24,"byte_end":571,"line_start":2,"line_end":29,"column_start":1,"column_end":10}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":632},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/lib.rs","byte_start":326,"byte_end":337,"line_start":16,"line_end":16,"column_start":17,"column_end":28},"alias_span":null,"name":"EventReader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1229},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/lib.rs","byte_start":355,"byte_end":367,"line_start":17,"line_end":17,"column_start":17,"column_end":29},"alias_span":null,"name":"ParserConfig","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":822},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/lib.rs","byte_start":385,"byte_end":396,"line_start":18,"line_end":18,"column_start":17,"column_end":28},"alias_span":null,"name":"EventWriter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1361},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/lib.rs","byte_start":414,"byte_end":427,"line_start":19,"line_end":19,"column_start":17,"column_end":30},"alias_span":null,"name":"EmitterConfig","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1229},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":37992,"byte_end":38004,"line_start":11,"line_end":11,"column_start":23,"column_end":35},"alias_span":null,"name":"ParserConfig","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":1266},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":38028,"byte_end":38036,"line_start":12,"line_end":12,"column_start":23,"column_end":31},"alias_span":null,"name":"XmlEvent","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":1315},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":38151,"byte_end":38156,"line_start":22,"line_end":22,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":1301},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":38158,"byte_end":38167,"line_start":22,"line_end":22,"column_start":30,"column_end":39},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":704},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":143536,"byte_end":143542,"line_start":6,"line_end":6,"column_start":24,"column_end":30},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":668}},{"kind":"Use","ref_id":{"krate":0,"index":1329},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":143567,"byte_end":143579,"line_start":7,"line_end":7,"column_start":24,"column_end":36},"alias_span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":143583,"byte_end":143588,"line_start":7,"line_end":7,"column_start":40,"column_end":45},"name":"Error","value":"","parent":{"krate":0,"index":668}},{"kind":"Use","ref_id":{"krate":0,"index":1361},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":143612,"byte_end":143625,"line_start":8,"line_end":8,"column_start":23,"column_end":36},"alias_span":null,"name":"EmitterConfig","value":"","parent":{"krate":0,"index":668}},{"kind":"Use","ref_id":{"krate":0,"index":1403},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":143649,"byte_end":143657,"line_start":9,"line_end":9,"column_start":23,"column_end":31},"alias_span":null,"name":"XmlEvent","value":"","parent":{"krate":0,"index":668}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/lib.rs","byte_start":24,"byte_end":571,"line_start":2,"line_end":29,"column_start":1,"column_end":10},"name":"","qualname":"::","value":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":67},{"krate":0,"index":86},{"krate":0,"index":109},{"krate":0,"index":141},{"krate":0,"index":243},{"krate":0,"index":668},{"krate":0,"index":835}],"decl_id":null,"docs":" This crate currently provides an almost XML 1.0/1.1-compliant pull parser.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/lib.rs","byte_start":24,"byte_end":44,"line_start":2,"line_end":2,"column_start":1,"column_end":21}},{"value":"allow(unused_variables)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/lib.rs","byte_start":45,"byte_end":72,"line_start":3,"line_end":3,"column_start":1,"column_end":28}},{"value":"forbid(non_camel_case_types)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/lib.rs","byte_start":73,"byte_end":105,"line_start":4,"line_end":4,"column_start":1,"column_end":33}},{"value":"forbid(unsafe_code)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/lib.rs","byte_start":106,"byte_end":129,"line_start":5,"line_end":5,"column_start":1,"column_end":24}},{"value":"! This crate currently provides an almost XML 1.0/1.1-compliant pull parser.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/lib.rs","byte_start":131,"byte_end":209,"line_start":7,"line_end":7,"column_start":1,"column_end":79}}]},{"kind":"Mod","id":{"krate":0,"index":7},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/macros.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/macros.rs","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":9}],"decl_id":null,"docs":" Contains several macros used in this crate.\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/macros.rs","byte_start":573,"byte_end":586,"line_start":1,"line_end":1,"column_start":1,"column_end":14}},{"value":"! Contains several macros used in this crate.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/macros.rs","byte_start":588,"byte_end":635,"line_start":3,"line_end":3,"column_start":1,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":10},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"name","qualname":"::name","value":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","parent":null,"children":[{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":852},{"krate":0,"index":878},{"krate":0,"index":875},{"krate":0,"index":869},{"krate":0,"index":871},{"krate":0,"index":864},{"krate":0,"index":866},{"krate":0,"index":860},{"krate":0,"index":857},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":34},{"krate":0,"index":39},{"krate":0,"index":880},{"krate":0,"index":896},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":886},{"krate":0,"index":884},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":60},{"krate":0,"index":63}],"decl_id":null,"docs":" Contains XML qualified names manipulation types and functions.","sig":null,"attributes":[{"value":"! Contains XML qualified names manipulation types and functions.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":1448,"byte_end":1514,"line_start":1,"line_end":1,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":1515,"byte_end":1518,"line_start":2,"line_end":2,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":852},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":3469,"byte_end":3473,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"name":"Name","qualname":"::name::Name","value":"Name { local_name, namespace, prefix }","parent":null,"children":[{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856}],"decl_id":null,"docs":" Represents a qualified XML name.","sig":null,"attributes":[{"value":"/ Represents a qualified XML name.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":1588,"byte_end":1624,"line_start":9,"line_end":9,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":1625,"byte_end":1628,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ A qualified name always consists at least of a local name. It can optionally contain","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":1629,"byte_end":1717,"line_start":11,"line_end":11,"column_start":1,"column_end":89}},{"value":"/ a prefix; when reading an XML document, if it contains a prefix, it must also contain a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":1718,"byte_end":1809,"line_start":12,"line_end":12,"column_start":1,"column_end":92}},{"value":"/ namespace URI, but this is not enforced statically; see below. The name can contain a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":1810,"byte_end":1899,"line_start":13,"line_end":13,"column_start":1,"column_end":90}},{"value":"/ namespace without a prefix; in that case a default, empty prefix is assumed.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":1900,"byte_end":1980,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":1981,"byte_end":1984,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ When writing XML documents, it is possible to omit the namespace URI, leaving only","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":1985,"byte_end":2071,"line_start":16,"line_end":16,"column_start":1,"column_end":87}},{"value":"/ the prefix. In this case the writer will check that the specifed prefix is bound to some","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":2072,"byte_end":2164,"line_start":17,"line_end":17,"column_start":1,"column_end":93}},{"value":"/ URI in the current namespace context. If both prefix and namespace URI are specified,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":2165,"byte_end":2254,"line_start":18,"line_end":18,"column_start":1,"column_end":90}},{"value":"/ it is checked that the current namespace context contains this exact correspondence","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":2255,"byte_end":2342,"line_start":19,"line_end":19,"column_start":1,"column_end":88}},{"value":"/ between prefix and namespace URI.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":2343,"byte_end":2380,"line_start":20,"line_end":20,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":2381,"byte_end":2384,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Prefixes and URIs","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":2385,"byte_end":2408,"line_start":22,"line_end":22,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":2409,"byte_end":2412,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ A qualified name with a prefix must always contain a proper namespace URI --- names with","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":2413,"byte_end":2505,"line_start":24,"line_end":24,"column_start":1,"column_end":93}},{"value":"/ a prefix but without a namespace associated with that prefix are meaningless. However,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":2506,"byte_end":2596,"line_start":25,"line_end":25,"column_start":1,"column_end":91}},{"value":"/ it is impossible to obtain proper namespace URI by a prefix without a context, and such","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":2597,"byte_end":2688,"line_start":26,"line_end":26,"column_start":1,"column_end":92}},{"value":"/ context is only available when parsing a document (or it can be constructed manually","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":2689,"byte_end":2777,"line_start":27,"line_end":27,"column_start":1,"column_end":89}},{"value":"/ when writing a document). Tying a name to a context statically seems impractical. This","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":2778,"byte_end":2868,"line_start":28,"line_end":28,"column_start":1,"column_end":91}},{"value":"/ may change in future, though.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":2869,"byte_end":2902,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":2903,"byte_end":2906,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Conversions","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":2907,"byte_end":2924,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":2925,"byte_end":2928,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ `Name` implements some `From` instances for conversion from strings and tuples. For example:","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":2929,"byte_end":3025,"line_start":33,"line_end":33,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":3026,"byte_end":3029,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":3030,"byte_end":3041,"line_start":35,"line_end":35,"column_start":1,"column_end":12}},{"value":"/ # use xml::name::Name;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":3042,"byte_end":3068,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/ let n1: Name = \"p:some-name\".into();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":3069,"byte_end":3109,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ let n2: Name = (\"p\", \"some-name\").into();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":3110,"byte_end":3155,"line_start":38,"line_end":38,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":3156,"byte_end":3159,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(n1, n2);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":3160,"byte_end":3183,"line_start":40,"line_end":40,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(n1.local_name, \"some-name\");","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":3184,"byte_end":3227,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(n1.prefix, Some(\"p\"));","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":3228,"byte_end":3265,"line_start":42,"line_end":42,"column_start":1,"column_end":38}},{"value":"/ assert!(n1.namespace.is_none());","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":3266,"byte_end":3302,"line_start":43,"line_end":43,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":3303,"byte_end":3310,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":3311,"byte_end":3314,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ This is added to support easy specification of XML elements when writing XML documents.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":3315,"byte_end":3406,"line_start":46,"line_end":46,"column_start":1,"column_end":92}}]},{"kind":"Field","id":{"krate":0,"index":854},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":3541,"byte_end":3551,"line_start":50,"line_end":50,"column_start":9,"column_end":19},"name":"local_name","qualname":"::name::Name::local_name","value":"&'a str","parent":{"krate":0,"index":852},"children":[],"decl_id":null,"docs":" A local name, e.g. `string` in `xsi:string`.\n","sig":null,"attributes":[{"value":"/ A local name, e.g. `string` in `xsi:string`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":3484,"byte_end":3532,"line_start":49,"line_end":49,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":855},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":3634,"byte_end":3643,"line_start":53,"line_end":53,"column_start":9,"column_end":18},"name":"namespace","qualname":"::name::Name::namespace","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":852},"children":[],"decl_id":null,"docs":" A namespace URI, e.g. `http://www.w3.org/2000/xmlns/`.\n","sig":null,"attributes":[{"value":"/ A namespace URI, e.g. `http://www.w3.org/2000/xmlns/`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":3567,"byte_end":3625,"line_start":52,"line_end":52,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":856},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":3722,"byte_end":3728,"line_start":56,"line_end":56,"column_start":9,"column_end":15},"name":"prefix","qualname":"::name::Name::prefix","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":852},"children":[],"decl_id":null,"docs":" A name prefix, e.g. `xsi` in `xsi:string`.\n","sig":null,"attributes":[{"value":"/ A name prefix, e.g. `xsi` in `xsi:string`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":3667,"byte_end":3713,"line_start":55,"line_end":55,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":4685,"byte_end":4693,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"to_owned","qualname":"<Name>::to_owned","value":"fn (&self) -> OwnedName","parent":null,"children":[],"decl_id":null,"docs":" Returns an owned variant of the qualified name.\n","sig":null,"attributes":[{"value":"/ Returns an owned variant of the qualified name.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":4622,"byte_end":4673,"line_start":91,"line_end":91,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":5002,"byte_end":5007,"line_start":102,"line_end":102,"column_start":12,"column_end":17},"name":"local","qualname":"<Name>::local","value":"fn (local_name: &str) -> Name","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Name` instance representing plain local name.\n","sig":null,"attributes":[{"value":"/ Returns a new `Name` instance representing plain local name.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":4912,"byte_end":4976,"line_start":100,"line_end":100,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":4981,"byte_end":4990,"line_start":101,"line_end":101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":5247,"byte_end":5255,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"prefixed","qualname":"<Name>::prefixed","value":"fn (local_name: &'a str, prefix: &'a str) -> Name<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Name` instance with the given local name and prefix.\n","sig":null,"attributes":[{"value":"/ Returns a new `Name` instance with the given local name and prefix.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":5150,"byte_end":5221,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":5226,"byte_end":5235,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":5578,"byte_end":5587,"line_start":123,"line_end":123,"column_start":12,"column_end":21},"name":"qualified","qualname":"<Name>::qualified","value":"fn (local_name: &'a str, namespace: &'a str, prefix: Option<&'a str>) -> Name<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Name` instance representing a qualified name with or without a prefix and\n with a namespace URI.\n","sig":null,"attributes":[{"value":"/ Returns a new `Name` instance representing a qualified name with or without a prefix and","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":5430,"byte_end":5522,"line_start":120,"line_end":120,"column_start":5,"column_end":97}},{"value":"/ with a namespace URI.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":5527,"byte_end":5552,"line_start":121,"line_end":121,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":5557,"byte_end":5566,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":6016,"byte_end":6023,"line_start":135,"line_end":135,"column_start":12,"column_end":19},"name":"to_repr","qualname":"<Name>::to_repr","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns a correct XML representation of this local name and prefix.","sig":null,"attributes":[{"value":"/ Returns a correct XML representation of this local name and prefix.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":5788,"byte_end":5859,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":5864,"byte_end":5867,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This method is different from the autoimplemented `to_string()` because it does not","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":5872,"byte_end":5959,"line_start":133,"line_end":133,"column_start":5,"column_end":92}},{"value":"/ include namespace URI in the result.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":5964,"byte_end":6004,"line_start":134,"line_end":134,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":6356,"byte_end":6368,"line_start":145,"line_end":145,"column_start":12,"column_end":24},"name":"repr_display","qualname":"<Name>::repr_display","value":"fn (&self) -> ReprDisplay","parent":null,"children":[],"decl_id":null,"docs":" Returns a structure which can be displayed with `std::fmt` machinery to obtain this\n local name and prefix.","sig":null,"attributes":[{"value":"/ Returns a structure which can be displayed with `std::fmt` machinery to obtain this","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":6094,"byte_end":6181,"line_start":139,"line_end":139,"column_start":5,"column_end":92}},{"value":"/ local name and prefix.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":6186,"byte_end":6212,"line_start":140,"line_end":140,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":6217,"byte_end":6220,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This method is needed for efficiency purposes in order not to create unnecessary","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":6225,"byte_end":6309,"line_start":142,"line_end":142,"column_start":5,"column_end":89}},{"value":"/ allocations.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":6314,"byte_end":6330,"line_start":143,"line_end":143,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":6335,"byte_end":6344,"line_start":144,"line_end":144,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":6535,"byte_end":6546,"line_start":151,"line_end":151,"column_start":12,"column_end":23},"name":"prefix_repr","qualname":"<Name>::prefix_repr","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns either a prefix of this name or `namespace::NS_NO_PREFIX` constant.\n","sig":null,"attributes":[{"value":"/ Returns either a prefix of this name or `namespace::NS_NO_PREFIX` constant.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":6430,"byte_end":6509,"line_start":149,"line_end":149,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":6514,"byte_end":6523,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":34},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":6754,"byte_end":6765,"line_start":158,"line_end":158,"column_start":12,"column_end":23},"name":"ReprDisplay","qualname":"::name::ReprDisplay","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper around `Name` whose `Display` implementation prints the wrapped name as it is\n displayed in an XML document.\n","sig":null,"attributes":[{"value":"/ A wrapper around `Name` whose `Display` implementation prints the wrapped name as it is","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":6617,"byte_end":6708,"line_start":156,"line_end":156,"column_start":1,"column_end":92}},{"value":"/ displayed in an XML document.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":6709,"byte_end":6742,"line_start":157,"line_end":157,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":880},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":7241,"byte_end":7250,"line_start":173,"line_end":173,"column_start":12,"column_end":21},"name":"OwnedName","qualname":"::name::OwnedName","value":"OwnedName { local_name, namespace, prefix }","parent":null,"children":[{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883}],"decl_id":null,"docs":" An owned variant of `Name`.","sig":null,"attributes":[{"value":"/ An owned variant of `Name`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":7086,"byte_end":7117,"line_start":169,"line_end":169,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":7118,"byte_end":7121,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ Everything about `Name` applies to this structure as well.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":7122,"byte_end":7184,"line_start":171,"line_end":171,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":881},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":7314,"byte_end":7324,"line_start":175,"line_end":175,"column_start":9,"column_end":19},"name":"local_name","qualname":"::name::OwnedName::local_name","value":"std::string::String","parent":{"krate":0,"index":880},"children":[],"decl_id":null,"docs":" A local name, e.g. `string` in `xsi:string`.\n","sig":null,"attributes":[{"value":"/ A local name, e.g. `string` in `xsi:string`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":7257,"byte_end":7305,"line_start":174,"line_end":174,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":882},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":7406,"byte_end":7415,"line_start":178,"line_end":178,"column_start":9,"column_end":18},"name":"namespace","qualname":"::name::OwnedName::namespace","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":880},"children":[],"decl_id":null,"docs":" A namespace URI, e.g. `http://www.w3.org/2000/xmlns/`.\n","sig":null,"attributes":[{"value":"/ A namespace URI, e.g. `http://www.w3.org/2000/xmlns/`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":7339,"byte_end":7397,"line_start":177,"line_end":177,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":883},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":7493,"byte_end":7499,"line_start":181,"line_end":181,"column_start":9,"column_end":15},"name":"prefix","qualname":"::name::OwnedName::prefix","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":880},"children":[],"decl_id":null,"docs":" A name prefix, e.g. `xsi` in `xsi:string`.\n","sig":null,"attributes":[{"value":"/ A name prefix, e.g. `xsi` in `xsi:string`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":7438,"byte_end":7484,"line_start":180,"line_end":180,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":7772,"byte_end":7778,"line_start":193,"line_end":193,"column_start":12,"column_end":18},"name":"borrow","qualname":"<OwnedName>::borrow","value":"fn (&self) -> Name","parent":null,"children":[],"decl_id":null,"docs":" Constructs a borrowed `Name` based on this owned name.\n","sig":null,"attributes":[{"value":"/ Constructs a borrowed `Name` based on this owned name.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":7702,"byte_end":7760,"line_start":192,"line_end":192,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":8090,"byte_end":8095,"line_start":203,"line_end":203,"column_start":12,"column_end":17},"name":"local","qualname":"<OwnedName>::local","value":"fn <S> (local_name: S) -> OwnedName","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `OwnedName` instance representing a plain local name.\n","sig":null,"attributes":[{"value":"/ Returns a new `OwnedName` instance representing a plain local name.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":7993,"byte_end":8064,"line_start":201,"line_end":201,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":8069,"byte_end":8078,"line_start":202,"line_end":202,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":8443,"byte_end":8452,"line_start":214,"line_end":214,"column_start":12,"column_end":21},"name":"qualified","qualname":"<OwnedName>::qualified","value":"fn <S1, S2, S3> (local_name: S1, namespace: S2, prefix: Option<S3>) -> OwnedName","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `OwnedName` instance representing a qualified name with or without\n a prefix and with a namespace URI.\n","sig":null,"attributes":[{"value":"/ Returns a new `OwnedName` instance representing a qualified name with or without","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":8290,"byte_end":8374,"line_start":211,"line_end":211,"column_start":5,"column_end":89}},{"value":"/ a prefix and with a namespace URI.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":8379,"byte_end":8417,"line_start":212,"line_end":212,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":8422,"byte_end":8431,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":8916,"byte_end":8926,"line_start":227,"line_end":227,"column_start":12,"column_end":22},"name":"prefix_ref","qualname":"<OwnedName>::prefix_ref","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns an optional prefix by reference, equivalent to `self.borrow().prefix`\n but avoids extra work.\n","sig":null,"attributes":[{"value":"/ Returns an optional prefix by reference, equivalent to `self.borrow().prefix`","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":8778,"byte_end":8859,"line_start":224,"line_end":224,"column_start":5,"column_end":86}},{"value":"/ but avoids extra work.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":8864,"byte_end":8890,"line_start":225,"line_end":225,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":8895,"byte_end":8904,"line_start":226,"line_end":226,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":9149,"byte_end":9162,"line_start":234,"line_end":234,"column_start":12,"column_end":25},"name":"namespace_ref","qualname":"<OwnedName>::namespace_ref","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns an optional namespace by reference, equivalen to `self.borrow().namespace`\n but avoids extra work.\n","sig":null,"attributes":[{"value":"/ Returns an optional namespace by reference, equivalen to `self.borrow().namespace`","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":9006,"byte_end":9092,"line_start":231,"line_end":231,"column_start":5,"column_end":91}},{"value":"/ but avoids extra work.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":9097,"byte_end":9123,"line_start":232,"line_end":232,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":9128,"byte_end":9137,"line_start":233,"line_end":233,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":67},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/attribute.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"attribute","qualname":"::attribute","value":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/attribute.rs","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":898},{"krate":0,"index":923},{"krate":0,"index":920},{"krate":0,"index":915},{"krate":0,"index":917},{"krate":0,"index":909},{"krate":0,"index":911},{"krate":0,"index":905},{"krate":0,"index":902},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":925},{"krate":0,"index":940},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":930},{"krate":0,"index":928},{"krate":0,"index":80},{"krate":0,"index":84}],"decl_id":null,"docs":" Contains XML attributes manipulation types and functions.","sig":null,"attributes":[{"value":"! Contains XML attributes manipulation types and functions.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/attribute.rs","byte_start":11312,"byte_end":11373,"line_start":1,"line_end":1,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/attribute.rs","byte_start":11374,"byte_end":11377,"line_start":2,"line_end":2,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":898},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/attribute.rs","byte_start":11639,"byte_end":11648,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"Attribute","qualname":"::attribute::Attribute","value":"Attribute { name, value }","parent":null,"children":[{"krate":0,"index":900},{"krate":0,"index":901}],"decl_id":null,"docs":" A borrowed version of an XML attribute.","sig":null,"attributes":[{"value":"/ A borrowed version of an XML attribute.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/attribute.rs","byte_start":11458,"byte_end":11501,"line_start":9,"line_end":9,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/attribute.rs","byte_start":11502,"byte_end":11505,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Consists of a borrowed qualified name and a borrowed string value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/attribute.rs","byte_start":11506,"byte_end":11576,"line_start":11,"line_end":11,"column_start":1,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":900},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/attribute.rs","byte_start":11687,"byte_end":11691,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"name","qualname":"::attribute::Attribute::name","value":"name::Name<'a>","parent":{"krate":0,"index":898},"children":[],"decl_id":null,"docs":" Attribute name.\n","sig":null,"attributes":[{"value":"/ Attribute name.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/attribute.rs","byte_start":11659,"byte_end":11678,"line_start":14,"line_end":14,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":901},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/attribute.rs","byte_start":11737,"byte_end":11742,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"name":"value","qualname":"::attribute::Attribute::value","value":"&'a str","parent":{"krate":0,"index":898},"children":[],"decl_id":null,"docs":" Attribute value.\n","sig":null,"attributes":[{"value":"/ Attribute value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/attribute.rs","byte_start":11708,"byte_end":11728,"line_start":17,"line_end":17,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/attribute.rs","byte_start":12052,"byte_end":12060,"line_start":30,"line_end":30,"column_start":12,"column_end":20},"name":"to_owned","qualname":"<Attribute>::to_owned","value":"fn (&self) -> OwnedAttribute","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned attribute out of this borrowed one.\n","sig":null,"attributes":[{"value":"/ Creates an owned attribute out of this borrowed one.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/attribute.rs","byte_start":11970,"byte_end":12026,"line_start":28,"line_end":28,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/attribute.rs","byte_start":12031,"byte_end":12040,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/attribute.rs","byte_start":12328,"byte_end":12331,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Attribute>::new","value":"fn (name: Name<'a>, value: &'a str) -> Attribute<'a>","parent":null,"children":[],"decl_id":null,"docs":" Creates a borrowed attribute using the provided borrowed name and a borrowed string value.\n","sig":null,"attributes":[{"value":"/ Creates a borrowed attribute using the provided borrowed name and a borrowed string value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/attribute.rs","byte_start":12208,"byte_end":12302,"line_start":37,"line_end":37,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/attribute.rs","byte_start":12307,"byte_end":12316,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":925},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/attribute.rs","byte_start":12596,"byte_end":12610,"line_start":48,"line_end":48,"column_start":12,"column_end":26},"name":"OwnedAttribute","qualname":"::attribute::OwnedAttribute","value":"OwnedAttribute { name, value }","parent":null,"children":[{"krate":0,"index":926},{"krate":0,"index":927}],"decl_id":null,"docs":" An owned version of an XML attribute.","sig":null,"attributes":[{"value":"/ An owned version of an XML attribute.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/attribute.rs","byte_start":12427,"byte_end":12468,"line_start":44,"line_end":44,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/attribute.rs","byte_start":12469,"byte_end":12472,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Consists of an owned qualified name and an owned string value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/attribute.rs","byte_start":12473,"byte_end":12539,"line_start":46,"line_end":46,"column_start":1,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":926},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/attribute.rs","byte_start":12645,"byte_end":12649,"line_start":50,"line_end":50,"column_start":9,"column_end":13},"name":"name","qualname":"::attribute::OwnedAttribute::name","value":"name::OwnedName","parent":{"krate":0,"index":925},"children":[],"decl_id":null,"docs":" Attribute name.\n","sig":null,"attributes":[{"value":"/ Attribute name.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/attribute.rs","byte_start":12617,"byte_end":12636,"line_start":49,"line_end":49,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":927},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/attribute.rs","byte_start":12696,"byte_end":12701,"line_start":53,"line_end":53,"column_start":9,"column_end":14},"name":"value","qualname":"::attribute::OwnedAttribute::value","value":"std::string::String","parent":{"krate":0,"index":925},"children":[],"decl_id":null,"docs":" Attribute value.\n","sig":null,"attributes":[{"value":"/ Attribute value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/attribute.rs","byte_start":12667,"byte_end":12687,"line_start":52,"line_end":52,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/attribute.rs","byte_start":12808,"byte_end":12814,"line_start":58,"line_end":58,"column_start":12,"column_end":18},"name":"borrow","qualname":"<OwnedAttribute>::borrow","value":"fn (&self) -> Attribute","parent":null,"children":[],"decl_id":null,"docs":" Returns a borrowed `Attribute` out of this owned one.\n","sig":null,"attributes":[{"value":"/ Returns a borrowed `Attribute` out of this owned one.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/attribute.rs","byte_start":12739,"byte_end":12796,"line_start":57,"line_end":57,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/attribute.rs","byte_start":13065,"byte_end":13068,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"new","qualname":"<OwnedAttribute>::new","value":"fn <S> (name: OwnedName, value: S) -> OwnedAttribute","parent":null,"children":[],"decl_id":null,"docs":" Creates a new owned attribute using the provided owned name and an owned string value.\n","sig":null,"attributes":[{"value":"/ Creates a new owned attribute using the provided owned name and an owned string value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/attribute.rs","byte_start":12949,"byte_end":13039,"line_start":65,"line_end":65,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/attribute.rs","byte_start":13044,"byte_end":13053,"line_start":66,"line_end":66,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":86},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"common","qualname":"::common","value":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":942},{"krate":0,"index":954},{"krate":0,"index":952},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":88},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":955},{"krate":0,"index":968},{"krate":0,"index":966},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108}],"decl_id":null,"docs":" Contains common types and functions used throughout the library.\n","sig":null,"attributes":[{"value":"! Contains common types and functions used throughout the library.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":13875,"byte_end":13943,"line_start":1,"line_end":1,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":942},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":14065,"byte_end":14077,"line_start":7,"line_end":7,"column_start":12,"column_end":24},"name":"TextPosition","qualname":"::common::TextPosition","value":"TextPosition { row, column }","parent":null,"children":[{"krate":0,"index":943},{"krate":0,"index":944}],"decl_id":null,"docs":" Represents a position inside some textual document.\n","sig":null,"attributes":[{"value":"/ Represents a position inside some textual document.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":13960,"byte_end":14015,"line_start":5,"line_end":5,"column_start":1,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":943},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":14117,"byte_end":14120,"line_start":9,"line_end":9,"column_start":9,"column_end":12},"name":"row","qualname":"::common::TextPosition::row","value":"u64","parent":{"krate":0,"index":942},"children":[],"decl_id":null,"docs":" Row, counting from 0\n","sig":null,"attributes":[{"value":"/ Row, counting from 0","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":14084,"byte_end":14108,"line_start":8,"line_end":8,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":944},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":14167,"byte_end":14173,"line_start":11,"line_end":11,"column_start":9,"column_end":15},"name":"column","qualname":"::common::TextPosition::column","value":"u64","parent":{"krate":0,"index":942},"children":[],"decl_id":null,"docs":" Column, counting from 0\n","sig":null,"attributes":[{"value":"/ Column, counting from 0","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":14131,"byte_end":14158,"line_start":10,"line_end":10,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":14304,"byte_end":14307,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"new","qualname":"<TextPosition>::new","value":"fn () -> TextPosition","parent":null,"children":[],"decl_id":null,"docs":" Creates a new position initialized to the beginning of the document\n","sig":null,"attributes":[{"value":"/ Creates a new position initialized to the beginning of the document","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":14207,"byte_end":14278,"line_start":15,"line_end":15,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":14283,"byte_end":14292,"line_start":16,"line_end":16,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":14443,"byte_end":14450,"line_start":23,"line_end":23,"column_start":12,"column_end":19},"name":"advance","qualname":"<TextPosition>::advance","value":"fn (&mut self, count: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Advances the position in a line\n","sig":null,"attributes":[{"value":"/ Advances the position in a line","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":14382,"byte_end":14417,"line_start":21,"line_end":21,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":14422,"byte_end":14431,"line_start":22,"line_end":22,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":14609,"byte_end":14623,"line_start":29,"line_end":29,"column_start":12,"column_end":26},"name":"advance_to_tab","qualname":"<TextPosition>::advance_to_tab","value":"fn (&mut self, width: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Advances the position in a line to the next tab position\n","sig":null,"attributes":[{"value":"/ Advances the position in a line to the next tab position","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":14523,"byte_end":14583,"line_start":27,"line_end":27,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":14588,"byte_end":14597,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":14829,"byte_end":14837,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"new_line","qualname":"<TextPosition>::new_line","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Advances the position to the beginning of the next line\n","sig":null,"attributes":[{"value":"/ Advances the position to the beginning of the next line","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":14744,"byte_end":14803,"line_start":34,"line_end":34,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":14808,"byte_end":14817,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":97},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":15400,"byte_end":15408,"line_start":59,"line_end":59,"column_start":11,"column_end":19},"name":"Position","qualname":"::common::Position","value":"Position","parent":null,"children":[{"krate":0,"index":98}],"decl_id":null,"docs":" Get the position in the document corresponding to the object","sig":null,"attributes":[{"value":"/ Get the position in the document corresponding to the object","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":15260,"byte_end":15324,"line_start":56,"line_end":56,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":15325,"byte_end":15328,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ This trait is implemented by parsers, lexers and errors.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":15329,"byte_end":15389,"line_start":58,"line_end":58,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":15498,"byte_end":15506,"line_start":61,"line_end":61,"column_start":8,"column_end":16},"name":"position","qualname":"::common::Position::position","value":"fn (&self) -> TextPosition","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":" Returns the current position or a position corresponding to the object.\n","sig":null,"attributes":[{"value":"/ Returns the current position or a position corresponding to the object.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":15415,"byte_end":15490,"line_start":60,"line_end":60,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":956},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":15763,"byte_end":15772,"line_start":75,"line_end":75,"column_start":5,"column_end":14},"name":"Version10","qualname":"::common::XmlVersion::Version10","value":"XmlVersion::Version10","parent":{"krate":0,"index":955},"children":[],"decl_id":null,"docs":" XML version 1.0.\n","sig":null,"attributes":[{"value":"/ XML version 1.0.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":15738,"byte_end":15758,"line_start":74,"line_end":74,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":958},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":15804,"byte_end":15813,"line_start":78,"line_end":78,"column_start":5,"column_end":14},"name":"Version11","qualname":"::common::XmlVersion::Version11","value":"XmlVersion::Version11","parent":{"krate":0,"index":955},"children":[],"decl_id":null,"docs":" XML version 1.1.\n","sig":null,"attributes":[{"value":"/ XML version 1.1.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":15779,"byte_end":15799,"line_start":77,"line_end":77,"column_start":5,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":955},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":15721,"byte_end":15731,"line_start":73,"line_end":73,"column_start":10,"column_end":20},"name":"XmlVersion","qualname":"::common::XmlVersion","value":"XmlVersion::{Version10, Version11}","parent":null,"children":[{"krate":0,"index":956},{"krate":0,"index":958}],"decl_id":null,"docs":" XML version enumeration.\n","sig":null,"attributes":[{"value":"/ XML version enumeration.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":15645,"byte_end":15673,"line_start":71,"line_end":71,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":105},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":16412,"byte_end":16430,"line_start":100,"line_end":100,"column_start":8,"column_end":26},"name":"is_whitespace_char","qualname":"::common::is_whitespace_char","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the given character is a white space character (`S`)\n as is defined by XML 1.1 specification, [section 2.3][1].","sig":null,"attributes":[{"value":"/ Checks whether the given character is a white space character (`S`)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":16197,"byte_end":16268,"line_start":96,"line_end":96,"column_start":1,"column_end":72}},{"value":"/ as is defined by XML 1.1 specification, [section 2.3][1].","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":16269,"byte_end":16330,"line_start":97,"line_end":97,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":16331,"byte_end":16334,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ [1]: http://www.w3.org/TR/2006/REC-xml11-20060816/#sec-common-syn","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":16335,"byte_end":16404,"line_start":99,"line_end":99,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":106},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":16720,"byte_end":16737,"line_start":110,"line_end":110,"column_start":8,"column_end":25},"name":"is_whitespace_str","qualname":"::common::is_whitespace_str","value":"fn (s: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the given string is compound only by white space\n characters (`S`) using the previous is_whitespace_char to check\n all characters of this string\n","sig":null,"attributes":[{"value":"/ Checks whether the given string is compound only by white space","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":16543,"byte_end":16610,"line_start":107,"line_end":107,"column_start":1,"column_end":68}},{"value":"/ characters (`S`) using the previous is_whitespace_char to check","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":16611,"byte_end":16678,"line_start":108,"line_end":108,"column_start":1,"column_end":68}},{"value":"/ all characters of this string","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":16679,"byte_end":16712,"line_start":109,"line_end":109,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":107},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":17024,"byte_end":17042,"line_start":118,"line_end":118,"column_start":8,"column_end":26},"name":"is_name_start_char","qualname":"::common::is_name_start_char","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the given character is a name start character (`NameStartChar`)\n as is defined by XML 1.1 specification, [section 2.3][1].","sig":null,"attributes":[{"value":"/ Checks whether the given character is a name start character (`NameStartChar`)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":16798,"byte_end":16880,"line_start":114,"line_end":114,"column_start":1,"column_end":83}},{"value":"/ as is defined by XML 1.1 specification, [section 2.3][1].","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":16881,"byte_end":16942,"line_start":115,"line_end":115,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":16943,"byte_end":16946,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ [1]: http://www.w3.org/TR/2006/REC-xml11-20060816/#sec-common-syn","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":16947,"byte_end":17016,"line_start":117,"line_end":117,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":108},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":17718,"byte_end":17730,"line_start":135,"line_end":135,"column_start":8,"column_end":20},"name":"is_name_char","qualname":"::common::is_name_char","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the given character is a name character (`NameChar`)\n as is defined by XML 1.1 specification, [section 2.3][1].","sig":null,"attributes":[{"value":"/ Checks whether the given character is a name character (`NameChar`)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":17503,"byte_end":17574,"line_start":131,"line_end":131,"column_start":1,"column_end":72}},{"value":"/ as is defined by XML 1.1 specification, [section 2.3][1].","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":17575,"byte_end":17636,"line_start":132,"line_end":132,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":17637,"byte_end":17640,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ [1]: http://www.w3.org/TR/2006/REC-xml11-20060816/#sec-common-syn","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":17641,"byte_end":17710,"line_start":134,"line_end":134,"column_start":1,"column_end":70}}]},{"kind":"Mod","id":{"krate":0,"index":109},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/escape.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"escape","qualname":"::escape","value":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/escape.rs","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":118},{"krate":0,"index":121},{"krate":0,"index":129},{"krate":0,"index":133},{"krate":0,"index":137},{"krate":0,"index":139},{"krate":0,"index":140}],"decl_id":null,"docs":" Contains functions for performing XML special characters escaping.\n","sig":null,"attributes":[{"value":"! Contains functions for performing XML special characters escaping.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/escape.rs","byte_start":17944,"byte_end":18014,"line_start":1,"line_end":1,"column_start":1,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":139},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/escape.rs","byte_start":20503,"byte_end":20523,"line_start":94,"line_end":94,"column_start":8,"column_end":28},"name":"escape_str_attribute","qualname":"::escape::escape_str_attribute","value":"fn (s: &str) -> Cow<str>","parent":null,"children":[],"decl_id":null,"docs":" Performs escaping of common XML characters inside an attribute value.","sig":null,"attributes":[{"value":"/ Performs escaping of common XML characters inside an attribute value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/escape.rs","byte_start":20005,"byte_end":20078,"line_start":79,"line_end":79,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/escape.rs","byte_start":20079,"byte_end":20082,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ This function replaces several important markup characters with their","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/escape.rs","byte_start":20083,"byte_end":20156,"line_start":81,"line_end":81,"column_start":1,"column_end":74}},{"value":"/ entity equivalents:","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/escape.rs","byte_start":20157,"byte_end":20180,"line_start":82,"line_end":82,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/escape.rs","byte_start":20181,"byte_end":20184,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ * `<` → `&lt;`","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/escape.rs","byte_start":20185,"byte_end":20205,"line_start":84,"line_end":84,"column_start":1,"column_end":19}},{"value":"/ * `>` → `&gt;`","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/escape.rs","byte_start":20206,"byte_end":20226,"line_start":85,"line_end":85,"column_start":1,"column_end":19}},{"value":"/ * `\"` → `&quot;`","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/escape.rs","byte_start":20227,"byte_end":20249,"line_start":86,"line_end":86,"column_start":1,"column_end":21}},{"value":"/ * `'` → `&apos;`","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/escape.rs","byte_start":20250,"byte_end":20272,"line_start":87,"line_end":87,"column_start":1,"column_end":21}},{"value":"/ * `&` → `&amp;`","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/escape.rs","byte_start":20273,"byte_end":20294,"line_start":88,"line_end":88,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/escape.rs","byte_start":20295,"byte_end":20298,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ The resulting string is safe to use inside XML attribute values or in PCDATA sections.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/escape.rs","byte_start":20299,"byte_end":20389,"line_start":90,"line_end":90,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/escape.rs","byte_start":20390,"byte_end":20393,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ Does not perform allocations if the given string does not contain escapable characters.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/escape.rs","byte_start":20394,"byte_end":20485,"line_start":92,"line_end":92,"column_start":1,"column_end":92}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/escape.rs","byte_start":20486,"byte_end":20495,"line_start":93,"line_end":93,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":140},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/escape.rs","byte_start":21023,"byte_end":21040,"line_start":110,"line_end":110,"column_start":8,"column_end":25},"name":"escape_str_pcdata","qualname":"::escape::escape_str_pcdata","value":"fn (s: &str) -> Cow<str>","parent":null,"children":[],"decl_id":null,"docs":" Performs escaping of common XML characters inside PCDATA.","sig":null,"attributes":[{"value":"/ Performs escaping of common XML characters inside PCDATA.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/escape.rs","byte_start":20599,"byte_end":20660,"line_start":98,"line_end":98,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/escape.rs","byte_start":20661,"byte_end":20664,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ This function replaces several important markup characters with their","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/escape.rs","byte_start":20665,"byte_end":20738,"line_start":100,"line_end":100,"column_start":1,"column_end":74}},{"value":"/ entity equivalents:","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/escape.rs","byte_start":20739,"byte_end":20762,"line_start":101,"line_end":101,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/escape.rs","byte_start":20763,"byte_end":20766,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ * `<` → `&lt;`","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/escape.rs","byte_start":20767,"byte_end":20787,"line_start":103,"line_end":103,"column_start":1,"column_end":19}},{"value":"/ * `&` → `&amp;`","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/escape.rs","byte_start":20788,"byte_end":20809,"line_start":104,"line_end":104,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/escape.rs","byte_start":20810,"byte_end":20813,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ The resulting string is safe to use inside PCDATA sections but NOT inside attribute values.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/escape.rs","byte_start":20814,"byte_end":20909,"line_start":106,"line_end":106,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/escape.rs","byte_start":20910,"byte_end":20913,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ Does not perform allocations if the given string does not contain escapable characters.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/escape.rs","byte_start":20914,"byte_end":21005,"line_start":108,"line_end":108,"column_start":1,"column_end":92}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/escape.rs","byte_start":21006,"byte_end":21015,"line_start":109,"line_end":109,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":141},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"namespace","qualname":"::namespace","value":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":969},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":974},{"krate":0,"index":972},{"krate":0,"index":157},{"krate":0,"index":174},{"krate":0,"index":177},{"krate":0,"index":983},{"krate":0,"index":995},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":986},{"krate":0,"index":184},{"krate":0,"index":206},{"krate":0,"index":211},{"krate":0,"index":215},{"krate":0,"index":219},{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":230},{"krate":0,"index":234},{"krate":0,"index":238}],"decl_id":null,"docs":" Contains namespace manipulation types and functions.\n","sig":null,"attributes":[{"value":"! Contains namespace manipulation types and functions.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":21412,"byte_end":21468,"line_start":1,"line_end":1,"column_start":1,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":151},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":21845,"byte_end":21860,"line_start":14,"line_end":14,"column_start":11,"column_end":26},"name":"NS_XMLNS_PREFIX","qualname":"::namespace::NS_XMLNS_PREFIX","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" Designates prefix for namespace definitions.","sig":null,"attributes":[{"value":"/ Designates prefix for namespace definitions.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":21653,"byte_end":21701,"line_start":9,"line_end":9,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":21702,"byte_end":21705,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ See [Namespaces in XML][namespace] spec for more information.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":21706,"byte_end":21771,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":21772,"byte_end":21775,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/   [namespace]: http://www.w3.org/TR/xml-names/#ns-decl","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":21776,"byte_end":21834,"line_start":13,"line_end":13,"column_start":1,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":152},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":22079,"byte_end":22091,"line_start":21,"line_end":21,"column_start":11,"column_end":23},"name":"NS_XMLNS_URI","qualname":"::namespace::NS_XMLNS_URI","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" Designates the standard URI for `xmlns` prefix.","sig":null,"attributes":[{"value":"/ Designates the standard URI for `xmlns` prefix.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":21887,"byte_end":21938,"line_start":16,"line_end":16,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":21939,"byte_end":21942,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ See [A Namespace Name for xmlns Attributes][1] for more information.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":21943,"byte_end":22015,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":22016,"byte_end":22019,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/   [namespace]: http://www.w3.org/2000/xmlns/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":22020,"byte_end":22068,"line_start":20,"line_end":20,"column_start":1,"column_end":49}}]},{"kind":"Const","id":{"krate":0,"index":153},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":22602,"byte_end":22615,"line_start":32,"line_end":32,"column_start":11,"column_end":24},"name":"NS_XML_PREFIX","qualname":"::namespace::NS_XML_PREFIX","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" Designates prefix for a namespace containing several special predefined attributes.","sig":null,"attributes":[{"value":"/ Designates prefix for a namespace containing several special predefined attributes.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":22145,"byte_end":22232,"line_start":23,"line_end":23,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":22233,"byte_end":22236,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ See [2.10 White Space handling][1],  [2.1 Language Identification][2],","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":22237,"byte_end":22311,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ [XML Base specification][3] and [xml:id specification][4] for more information.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":22312,"byte_end":22395,"line_start":26,"line_end":26,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":22396,"byte_end":22399,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/   [1]: http://www.w3.org/TR/REC-xml/#sec-white-space","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":22400,"byte_end":22456,"line_start":28,"line_end":28,"column_start":1,"column_end":57}},{"value":"/   [2]: http://www.w3.org/TR/REC-xml/#sec-lang-tag","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":22457,"byte_end":22510,"line_start":29,"line_end":29,"column_start":1,"column_end":54}},{"value":"/   [3]: http://www.w3.org/TR/xmlbase/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":22511,"byte_end":22551,"line_start":30,"line_end":30,"column_start":1,"column_end":41}},{"value":"/   [4]: http://www.w3.org/TR/xml-id/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":22552,"byte_end":22591,"line_start":31,"line_end":31,"column_start":1,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":154},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":22766,"byte_end":22776,"line_start":37,"line_end":37,"column_start":11,"column_end":21},"name":"NS_XML_URI","qualname":"::namespace::NS_XML_URI","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" Designates the standard URI for `xml` prefix.","sig":null,"attributes":[{"value":"/ Designates the standard URI for `xml` prefix.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":22642,"byte_end":22691,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":22692,"byte_end":22695,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ See `NS_XML_PREFIX` documentation for more information.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":22696,"byte_end":22755,"line_start":36,"line_end":36,"column_start":1,"column_end":60}}]},{"kind":"Const","id":{"krate":0,"index":155},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":23554,"byte_end":23566,"line_start":55,"line_end":55,"column_start":11,"column_end":23},"name":"NS_NO_PREFIX","qualname":"::namespace::NS_NO_PREFIX","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" Designates the absence of prefix in a qualified name.","sig":null,"attributes":[{"value":"/ Designates the absence of prefix in a qualified name.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":22839,"byte_end":22896,"line_start":39,"line_end":39,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":22897,"byte_end":22900,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ This constant should be used to define or query default namespace which should be used","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":22901,"byte_end":22991,"line_start":41,"line_end":41,"column_start":1,"column_end":91}},{"value":"/ for element or attribute names without prefix. For example, if a namespace mapping","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":22992,"byte_end":23078,"line_start":42,"line_end":42,"column_start":1,"column_end":87}},{"value":"/ at a particular point in the document contains correspondence like","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":23079,"byte_end":23149,"line_start":43,"line_end":43,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":23150,"byte_end":23153,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```none","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":23154,"byte_end":23165,"line_start":45,"line_end":45,"column_start":1,"column_end":12}},{"value":"/   NS_NO_PREFIX  -->  urn:some:namespace","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":23166,"byte_end":23209,"line_start":46,"line_end":46,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":23210,"byte_end":23217,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":23218,"byte_end":23221,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ then all names declared without an explicit prefix `urn:some:namespace` is assumed as","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":23222,"byte_end":23311,"line_start":49,"line_end":49,"column_start":1,"column_end":90}},{"value":"/ a namespace URI.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":23312,"byte_end":23332,"line_start":50,"line_end":50,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":23333,"byte_end":23336,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ By default empty prefix corresponds to absence of namespace, but this can change either","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":23337,"byte_end":23428,"line_start":52,"line_end":52,"column_start":1,"column_end":92}},{"value":"/ when writing an XML document (manually) or when reading an XML document (based on namespace","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":23429,"byte_end":23524,"line_start":53,"line_end":53,"column_start":1,"column_end":96}},{"value":"/ declarations).","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":23525,"byte_end":23543,"line_start":54,"line_end":54,"column_start":1,"column_end":19}}]},{"kind":"Const","id":{"krate":0,"index":156},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":24004,"byte_end":24016,"line_start":63,"line_end":63,"column_start":11,"column_end":23},"name":"NS_EMPTY_URI","qualname":"::namespace::NS_EMPTY_URI","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" Designates an empty namespace URI, which is equivalent to absence of namespace.","sig":null,"attributes":[{"value":"/ Designates an empty namespace URI, which is equivalent to absence of namespace.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":23591,"byte_end":23674,"line_start":57,"line_end":57,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":23675,"byte_end":23678,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ This constant should not usually be used directly; it is used to designate that","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":23679,"byte_end":23762,"line_start":59,"line_end":59,"column_start":1,"column_end":84}},{"value":"/ empty prefix corresponds to absent namespace in `NamespaceStack` instances created with","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":23763,"byte_end":23854,"line_start":60,"line_end":60,"column_start":1,"column_end":92}},{"value":"/ `NamespaceStack::default()`. Therefore, it can be used to restore `NS_NO_PREFIX` mapping","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":23855,"byte_end":23947,"line_start":61,"line_end":61,"column_start":1,"column_end":93}},{"value":"/ in a namespace back to its default value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":23948,"byte_end":23993,"line_start":62,"line_end":62,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":969},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":24232,"byte_end":24241,"line_start":69,"line_end":69,"column_start":12,"column_end":21},"name":"Namespace","qualname":"::namespace::Namespace","value":"","parent":null,"children":[],"decl_id":null,"docs":" Namespace is a map from prefixes to namespace URIs.","sig":null,"attributes":[{"value":"/ Namespace is a map from prefixes to namespace URIs.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":24041,"byte_end":24096,"line_start":65,"line_end":65,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":24097,"byte_end":24100,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ No prefix (i.e. default namespace) is designated by `NS_NO_PREFIX` constant.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":24101,"byte_end":24181,"line_start":67,"line_end":67,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":24352,"byte_end":24357,"line_start":74,"line_end":74,"column_start":12,"column_end":17},"name":"empty","qualname":"<Namespace>::empty","value":"fn () -> Namespace","parent":null,"children":[],"decl_id":null,"docs":" Returns an empty namespace.\n","sig":null,"attributes":[{"value":"/ Returns an empty namespace.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":24295,"byte_end":24326,"line_start":72,"line_end":72,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":24331,"byte_end":24340,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":24478,"byte_end":24486,"line_start":78,"line_end":78,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Namespace>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this namespace is empty.\n","sig":null,"attributes":[{"value":"/ Checks whether this namespace is empty.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":24409,"byte_end":24452,"line_start":76,"line_end":76,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":24457,"byte_end":24466,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":24676,"byte_end":24696,"line_start":84,"line_end":84,"column_start":12,"column_end":32},"name":"is_essentially_empty","qualname":"<Namespace>::is_essentially_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this namespace is essentially empty, that is, it does not contain\n anything but default mappings.\n","sig":null,"attributes":[{"value":"/ Checks whether this namespace is essentially empty, that is, it does not contain","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":24541,"byte_end":24625,"line_start":82,"line_end":82,"column_start":5,"column_end":89}},{"value":"/ anything but default mappings.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":24630,"byte_end":24664,"line_start":83,"line_end":83,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":25364,"byte_end":25372,"line_start":104,"line_end":104,"column_start":12,"column_end":20},"name":"contains","qualname":"<Namespace>::contains","value":"fn <P> (&self, prefix: &P) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this namespace mapping contains the given prefix.","sig":null,"attributes":[{"value":"/ Checks whether this namespace mapping contains the given prefix.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":25089,"byte_end":25157,"line_start":96,"line_end":96,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":25162,"byte_end":25165,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":25170,"byte_end":25186,"line_start":98,"line_end":98,"column_start":5,"column_end":21}},{"value":"/ * `prefix`  --- namespace prefix.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":25191,"byte_end":25228,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":25233,"byte_end":25236,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":25241,"byte_end":25259,"line_start":101,"line_end":101,"column_start":5,"column_end":23}},{"value":"/ `true` if this namespace contains the given prefix, `false` otherwise.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":25264,"byte_end":25338,"line_start":102,"line_end":102,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":25343,"byte_end":25352,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":25986,"byte_end":25989,"line_start":122,"line_end":122,"column_start":12,"column_end":15},"name":"put","qualname":"<Namespace>::put","value":"fn <P, U> (&mut self, prefix: P, uri: U) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Puts a mapping into this namespace.","sig":null,"attributes":[{"value":"/ Puts a mapping into this namespace.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":25480,"byte_end":25519,"line_start":108,"line_end":108,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":25524,"byte_end":25527,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ This method does not override any already existing mappings.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":25532,"byte_end":25596,"line_start":110,"line_end":110,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":25601,"byte_end":25604,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ Returns a boolean flag indicating whether the map already contained","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":25609,"byte_end":25680,"line_start":112,"line_end":112,"column_start":5,"column_end":76}},{"value":"/ the given prefix.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":25685,"byte_end":25706,"line_start":113,"line_end":113,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":25711,"byte_end":25714,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":25719,"byte_end":25735,"line_start":115,"line_end":115,"column_start":5,"column_end":21}},{"value":"/ * `prefix` --- namespace prefix;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":25740,"byte_end":25776,"line_start":116,"line_end":116,"column_start":5,"column_end":41}},{"value":"/ * `uri`    --- namespace URI.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":25781,"byte_end":25814,"line_start":117,"line_end":117,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":25819,"byte_end":25822,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":25827,"byte_end":25845,"line_start":119,"line_end":119,"column_start":5,"column_end":23}},{"value":"/ `true` if `prefix` has been inserted successfully; `false` if the `prefix`","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":25850,"byte_end":25928,"line_start":120,"line_end":120,"column_start":5,"column_end":83}},{"value":"/ was already present in the namespace.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":25933,"byte_end":25974,"line_start":121,"line_end":121,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":26837,"byte_end":26846,"line_start":147,"line_end":147,"column_start":12,"column_end":21},"name":"force_put","qualname":"<Namespace>::force_put","value":"fn <P, U> (&mut self, prefix: P, uri: U) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Puts a mapping into this namespace forcefully.","sig":null,"attributes":[{"value":"/ Puts a mapping into this namespace forcefully.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":26302,"byte_end":26352,"line_start":134,"line_end":134,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":26357,"byte_end":26360,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ This method, unlike `put()`, does replace an already existing mapping.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":26365,"byte_end":26439,"line_start":136,"line_end":136,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":26444,"byte_end":26447,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ Returns previous URI which was assigned to the given prefix, if it is present.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":26452,"byte_end":26534,"line_start":138,"line_end":138,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":26539,"byte_end":26542,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":26547,"byte_end":26563,"line_start":140,"line_end":140,"column_start":5,"column_end":21}},{"value":"/ * `prefix` --- namespace prefix;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":26568,"byte_end":26604,"line_start":141,"line_end":141,"column_start":5,"column_end":41}},{"value":"/ * `uri`    --- namespace URI.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":26609,"byte_end":26642,"line_start":142,"line_end":142,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":26647,"byte_end":26650,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":26655,"byte_end":26673,"line_start":144,"line_end":144,"column_start":5,"column_end":23}},{"value":"/ `Some(uri)` with `uri` being a previous URI assigned to the `prefix`, or","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":26678,"byte_end":26754,"line_start":145,"line_end":145,"column_start":5,"column_end":81}},{"value":"/ `None` if such prefix was not present in the namespace before.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":26759,"byte_end":26825,"line_start":146,"line_end":146,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":27249,"byte_end":27252,"line_start":160,"line_end":160,"column_start":12,"column_end":15},"name":"get","qualname":"<Namespace>::get","value":"fn <'a, P> (&'a self, prefix: &P) -> Option<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Queries the namespace for the given prefix.","sig":null,"attributes":[{"value":"/ Queries the namespace for the given prefix.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":27014,"byte_end":27061,"line_start":153,"line_end":153,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":27066,"byte_end":27069,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":27074,"byte_end":27090,"line_start":155,"line_end":155,"column_start":5,"column_end":21}},{"value":"/ * `prefix` --- namespace prefix.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":27095,"byte_end":27131,"line_start":156,"line_end":156,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":27136,"byte_end":27139,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":27144,"byte_end":27162,"line_start":158,"line_end":158,"column_start":5,"column_end":23}},{"value":"/ Namespace URI corresponding to the given prefix, if it is present.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":27167,"byte_end":27237,"line_start":159,"line_end":159,"column_start":5,"column_end":75}}]},{"kind":"Type","id":{"krate":0,"index":174},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":27470,"byte_end":27487,"line_start":166,"line_end":166,"column_start":10,"column_end":27},"name":"NamespaceMappings","qualname":"::namespace::NamespaceMappings","value":"Map<Entries<'a, String, String>,\n    for<'b>fn((&'b String, &'b String)) -> UriMapping<'b>>","parent":null,"children":[],"decl_id":null,"docs":" An alias for iterator type for namespace mappings contained in a namespace.\n","sig":null,"attributes":[{"value":"/ An alias for iterator type for namespace mappings contained in a namespace.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":27381,"byte_end":27460,"line_start":165,"line_end":165,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":983},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":28147,"byte_end":28161,"line_start":188,"line_end":188,"column_start":12,"column_end":26},"name":"NamespaceStack","qualname":"::namespace::NamespaceStack","value":"","parent":null,"children":[],"decl_id":null,"docs":" Namespace stack is a sequence of namespaces.","sig":null,"attributes":[{"value":"/ Namespace stack is a sequence of namespaces.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":27922,"byte_end":27970,"line_start":183,"line_end":183,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":27971,"byte_end":27974,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ Namespace stack is used to represent cumulative namespace consisting of","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":27975,"byte_end":28050,"line_start":185,"line_end":185,"column_start":1,"column_end":76}},{"value":"/ combined namespaces from nested elements.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":28051,"byte_end":28096,"line_start":186,"line_end":186,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":28273,"byte_end":28278,"line_start":193,"line_end":193,"column_start":12,"column_end":17},"name":"empty","qualname":"<NamespaceStack>::empty","value":"fn () -> NamespaceStack","parent":null,"children":[],"decl_id":null,"docs":" Returns an empty namespace stack.\n","sig":null,"attributes":[{"value":"/ Returns an empty namespace stack.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":28210,"byte_end":28247,"line_start":191,"line_end":191,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":28252,"byte_end":28261,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":28599,"byte_end":28606,"line_start":202,"line_end":202,"column_start":12,"column_end":19},"name":"default","qualname":"<NamespaceStack>::default","value":"fn () -> NamespaceStack","parent":null,"children":[],"decl_id":null,"docs":" Returns a namespace stack with default items in it.","sig":null,"attributes":[{"value":"/ Returns a namespace stack with default items in it.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":28346,"byte_end":28401,"line_start":195,"line_end":195,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":28406,"byte_end":28409,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ Default items are the following:","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":28414,"byte_end":28450,"line_start":197,"line_end":197,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":28455,"byte_end":28458,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ * `xml` → `http://www.w3.org/XML/1998/namespace`;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":28463,"byte_end":28518,"line_start":199,"line_end":199,"column_start":5,"column_end":58}},{"value":"/ * `xmlns` → `http://www.w3.org/2000/xmlns/`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":28523,"byte_end":28573,"line_start":200,"line_end":200,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":28578,"byte_end":28587,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":29020,"byte_end":29030,"line_start":216,"line_end":216,"column_start":12,"column_end":22},"name":"push_empty","qualname":"<NamespaceStack>::push_empty","value":"fn (&mut self) -> &mut NamespaceStack","parent":null,"children":[],"decl_id":null,"docs":" Adds an empty namespace to the top of this stack.\n","sig":null,"attributes":[{"value":"/ Adds an empty namespace to the top of this stack.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":28941,"byte_end":28994,"line_start":214,"line_end":214,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":28999,"byte_end":29008,"line_start":215,"line_end":215,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":29252,"byte_end":29255,"line_start":225,"line_end":225,"column_start":12,"column_end":15},"name":"pop","qualname":"<NamespaceStack>::pop","value":"fn (&mut self) -> Namespace","parent":null,"children":[],"decl_id":null,"docs":" Removes the topmost namespace in this stack.","sig":null,"attributes":[{"value":"/ Removes the topmost namespace in this stack.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":29132,"byte_end":29180,"line_start":221,"line_end":221,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":29185,"byte_end":29188,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Panics if the stack is empty.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":29193,"byte_end":29226,"line_start":223,"line_end":223,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":29231,"byte_end":29240,"line_start":224,"line_end":224,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":29488,"byte_end":29495,"line_start":233,"line_end":233,"column_start":12,"column_end":19},"name":"try_pop","qualname":"<NamespaceStack>::try_pop","value":"fn (&mut self) -> Option<Namespace>","parent":null,"children":[],"decl_id":null,"docs":" Removes the topmost namespace in this stack.","sig":null,"attributes":[{"value":"/ Removes the topmost namespace in this stack.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":29323,"byte_end":29371,"line_start":229,"line_end":229,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":29376,"byte_end":29379,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ Returns `Some(namespace)` if this stack is not empty and `None` otherwise.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":29384,"byte_end":29462,"line_start":231,"line_end":231,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":29467,"byte_end":29476,"line_start":232,"line_end":232,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":29702,"byte_end":29710,"line_start":241,"line_end":241,"column_start":12,"column_end":20},"name":"peek_mut","qualname":"<NamespaceStack>::peek_mut","value":"fn (&mut self) -> &mut Namespace","parent":null,"children":[],"decl_id":null,"docs":" Borrows the topmost namespace mutably, leaving the stack intact.","sig":null,"attributes":[{"value":"/ Borrows the topmost namespace mutably, leaving the stack intact.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":29562,"byte_end":29630,"line_start":237,"line_end":237,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":29635,"byte_end":29638,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ Panics if the stack is empty.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":29643,"byte_end":29676,"line_start":239,"line_end":239,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":29681,"byte_end":29690,"line_start":240,"line_end":240,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":29930,"byte_end":29934,"line_start":249,"line_end":249,"column_start":12,"column_end":16},"name":"peek","qualname":"<NamespaceStack>::peek","value":"fn (&self) -> &Namespace","parent":null,"children":[],"decl_id":null,"docs":" Borrows the topmost namespace immutably, leaving the stack intact.","sig":null,"attributes":[{"value":"/ Borrows the topmost namespace immutably, leaving the stack intact.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":29788,"byte_end":29858,"line_start":245,"line_end":245,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":29863,"byte_end":29866,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ Panics if the stack is empty.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":29871,"byte_end":29904,"line_start":247,"line_end":247,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":29909,"byte_end":29918,"line_start":248,"line_end":248,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":30654,"byte_end":30665,"line_start":266,"line_end":266,"column_start":12,"column_end":23},"name":"put_checked","qualname":"<NamespaceStack>::put_checked","value":"fn <P, U> (&mut self, prefix: P, uri: U) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Puts a mapping into the topmost namespace if this stack does not already contain one.","sig":null,"attributes":[{"value":"/ Puts a mapping into the topmost namespace if this stack does not already contain one.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":30000,"byte_end":30089,"line_start":253,"line_end":253,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":30094,"byte_end":30097,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ Returns a boolean flag indicating whether the insertion has completed successfully.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":30102,"byte_end":30189,"line_start":255,"line_end":255,"column_start":5,"column_end":92}},{"value":"/ Note that both key and value are matched and the mapping is inserted if either","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":30194,"byte_end":30276,"line_start":256,"line_end":256,"column_start":5,"column_end":87}},{"value":"/ namespace prefix is not already mapped, or if it is mapped, but to a different URI.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":30281,"byte_end":30368,"line_start":257,"line_end":257,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":30373,"byte_end":30376,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":30381,"byte_end":30397,"line_start":259,"line_end":259,"column_start":5,"column_end":21}},{"value":"/ * `prefix` --- namespace prefix;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":30402,"byte_end":30438,"line_start":260,"line_end":260,"column_start":5,"column_end":41}},{"value":"/ * `uri`    --- namespace URI.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":30443,"byte_end":30476,"line_start":261,"line_end":261,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":30481,"byte_end":30484,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":30489,"byte_end":30507,"line_start":263,"line_end":263,"column_start":5,"column_end":23}},{"value":"/ `true` if `prefix` has been inserted successfully; `false` if the `prefix`","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":30512,"byte_end":30590,"line_start":264,"line_end":264,"column_start":5,"column_end":83}},{"value":"/ was already present in the namespace stack.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":30595,"byte_end":30642,"line_start":265,"line_end":265,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":31698,"byte_end":31701,"line_start":294,"line_end":294,"column_start":12,"column_end":15},"name":"put","qualname":"<NamespaceStack>::put","value":"fn <P, U> (&mut self, prefix: P, uri: U) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Puts a mapping into the topmost namespace in this stack.","sig":null,"attributes":[{"value":"/ Puts a mapping into the topmost namespace in this stack.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":30986,"byte_end":31046,"line_start":278,"line_end":278,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":31051,"byte_end":31054,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ This method does not override a mapping in the topmost namespace if it is","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":31059,"byte_end":31136,"line_start":280,"line_end":280,"column_start":5,"column_end":82}},{"value":"/ already present, however, it does not depend on other namespaces in the stack,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":31141,"byte_end":31223,"line_start":281,"line_end":281,"column_start":5,"column_end":87}},{"value":"/ so it is possible to put a mapping which is present in lower namespaces.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":31228,"byte_end":31304,"line_start":282,"line_end":282,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":31309,"byte_end":31312,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ Returns a boolean flag indicating whether the insertion has completed successfully.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":31317,"byte_end":31404,"line_start":284,"line_end":284,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":31409,"byte_end":31412,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":31417,"byte_end":31433,"line_start":286,"line_end":286,"column_start":5,"column_end":21}},{"value":"/ * `prefix` --- namespace prefix;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":31438,"byte_end":31474,"line_start":287,"line_end":287,"column_start":5,"column_end":41}},{"value":"/ * `uri`    --- namespace URI.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":31479,"byte_end":31512,"line_start":288,"line_end":288,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":31517,"byte_end":31520,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":31525,"byte_end":31543,"line_start":290,"line_end":290,"column_start":5,"column_end":23}},{"value":"/ `true` if `prefix` has been inserted successfully; `false` if the `prefix`","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":31548,"byte_end":31626,"line_start":291,"line_end":291,"column_start":5,"column_end":83}},{"value":"/ was already present in the namespace.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":31631,"byte_end":31672,"line_start":292,"line_end":292,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":31677,"byte_end":31686,"line_start":293,"line_end":293,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":32222,"byte_end":32225,"line_start":309,"line_end":309,"column_start":12,"column_end":15},"name":"get","qualname":"<NamespaceStack>::get","value":"fn <'a, P> (&'a self, prefix: &P) -> Option<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Performs a search for the given prefix in the whole stack.","sig":null,"attributes":[{"value":"/ Performs a search for the given prefix in the whole stack.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":31862,"byte_end":31924,"line_start":300,"line_end":300,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":31929,"byte_end":31932,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ This method walks the stack from top to bottom, querying each namespace","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":31937,"byte_end":32012,"line_start":302,"line_end":302,"column_start":5,"column_end":80}},{"value":"/ in order for the given prefix. If none of the namespaces contains the prefix,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":32017,"byte_end":32098,"line_start":303,"line_end":303,"column_start":5,"column_end":86}},{"value":"/ `None` is returned.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":32103,"byte_end":32126,"line_start":304,"line_end":304,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":32131,"byte_end":32134,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":32139,"byte_end":32155,"line_start":306,"line_end":306,"column_start":5,"column_end":21}},{"value":"/ * `prefix` --- namespace prefix.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":32160,"byte_end":32196,"line_start":307,"line_end":307,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":32201,"byte_end":32210,"line_start":308,"line_end":308,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":32733,"byte_end":32739,"line_start":324,"line_end":324,"column_start":12,"column_end":18},"name":"squash","qualname":"<NamespaceStack>::squash","value":"fn (&self) -> Namespace","parent":null,"children":[],"decl_id":null,"docs":" Combines this stack of namespaces into a single namespace.","sig":null,"attributes":[{"value":"/ Combines this stack of namespaces into a single namespace.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":32515,"byte_end":32577,"line_start":320,"line_end":320,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":32582,"byte_end":32585,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Namespaces are combined in left-to-right order, that is, rightmost namespace","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":32590,"byte_end":32670,"line_start":322,"line_end":322,"column_start":5,"column_end":85}},{"value":"/ elements take priority over leftmost ones.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":32675,"byte_end":32721,"line_start":323,"line_end":323,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":33135,"byte_end":33149,"line_start":336,"line_end":336,"column_start":12,"column_end":26},"name":"checked_target","qualname":"<NamespaceStack>::checked_target","value":"fn (&mut self) -> CheckedTarget","parent":null,"children":[],"decl_id":null,"docs":" Returns an object which implements `Extend` using `put_checked()` instead of `put()`.","sig":null,"attributes":[{"value":"/ Returns an object which implements `Extend` using `put_checked()` instead of `put()`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":32962,"byte_end":33051,"line_start":332,"line_end":332,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":33056,"byte_end":33059,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ See `CheckedTarget` for more information.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":33064,"byte_end":33109,"line_start":334,"line_end":334,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":33114,"byte_end":33123,"line_start":335,"line_end":335,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":33311,"byte_end":33315,"line_start":342,"line_end":342,"column_start":12,"column_end":16},"name":"iter","qualname":"<NamespaceStack>::iter","value":"fn (&self) -> NamespaceStackMappings","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all mappings in this namespace stack.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over all mappings in this namespace stack.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":33219,"byte_end":33285,"line_start":340,"line_end":340,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":33290,"byte_end":33299,"line_start":341,"line_end":341,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":206},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":33820,"byte_end":33842,"line_start":361,"line_end":361,"column_start":12,"column_end":34},"name":"NamespaceStackMappings","qualname":"::namespace::NamespaceStackMappings","value":"NamespaceStackMappings {  }","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210}],"decl_id":null,"docs":" An iterator over mappings from prefixes to URIs in a namespace stack.","sig":null,"attributes":[{"value":"/ An iterator over mappings from prefixes to URIs in a namespace stack.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":33385,"byte_end":33458,"line_start":347,"line_end":347,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":33459,"byte_end":33462,"line_start":348,"line_end":348,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":33463,"byte_end":33476,"line_start":349,"line_end":349,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":33477,"byte_end":33484,"line_start":350,"line_end":350,"column_start":1,"column_end":8}},{"value":"/ # use xml::namespace::NamespaceStack;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":33485,"byte_end":33526,"line_start":351,"line_end":351,"column_start":1,"column_end":42}},{"value":"/ let mut nst = NamespaceStack::empty();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":33527,"byte_end":33569,"line_start":352,"line_end":352,"column_start":1,"column_end":43}},{"value":"/ nst.push_empty();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":33570,"byte_end":33591,"line_start":353,"line_end":353,"column_start":1,"column_end":22}},{"value":"/ nst.put(\"a\", \"urn:A\");","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":33592,"byte_end":33618,"line_start":354,"line_end":354,"column_start":1,"column_end":27}},{"value":"/ nst.put(\"b\", \"urn:B\");","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":33619,"byte_end":33645,"line_start":355,"line_end":355,"column_start":1,"column_end":27}},{"value":"/ nst.push_empty();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":33646,"byte_end":33667,"line_start":356,"line_end":356,"column_start":1,"column_end":22}},{"value":"/ nst.put(\"c\", \"urn:C\");","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":33668,"byte_end":33694,"line_start":357,"line_end":357,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":33695,"byte_end":33698,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(vec![(\"c\", \"urn:C\"), (\"a\", \"urn:A\"), (\"b\", \"urn:B\")], nst.iter().collect::<Vec<_>>());","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":33699,"byte_end":33800,"line_start":359,"line_end":359,"column_start":1,"column_end":102}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":33801,"byte_end":33808,"line_start":360,"line_end":360,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":224},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":35820,"byte_end":35830,"line_start":421,"line_end":421,"column_start":10,"column_end":20},"name":"UriMapping","qualname":"::namespace::UriMapping","value":"(&'a str, &'a str)","parent":null,"children":[],"decl_id":null,"docs":" A type alias for a pair of `(prefix, uri)` values returned by namespace iterators.\n","sig":null,"attributes":[{"value":"/ A type alias for a pair of `(prefix, uri)` values returned by namespace iterators.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":35724,"byte_end":35810,"line_start":420,"line_end":420,"column_start":1,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":234},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":37405,"byte_end":37418,"line_start":477,"line_end":477,"column_start":12,"column_end":25},"name":"CheckedTarget","qualname":"::namespace::CheckedTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper around `NamespaceStack` which implements `Extend` using `put_checked()`.","sig":null,"attributes":[{"value":"/ A wrapper around `NamespaceStack` which implements `Extend` using `put_checked()`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":36319,"byte_end":36405,"line_start":439,"line_end":439,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":36406,"byte_end":36409,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":36410,"byte_end":36423,"line_start":441,"line_end":441,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":36424,"byte_end":36427,"line_start":442,"line_end":442,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":36428,"byte_end":36435,"line_start":443,"line_end":443,"column_start":1,"column_end":8}},{"value":"/ # use xml::namespace::NamespaceStack;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":36436,"byte_end":36477,"line_start":444,"line_end":444,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":36478,"byte_end":36481,"line_start":445,"line_end":445,"column_start":1,"column_end":4}},{"value":"/ let mut nst = NamespaceStack::empty();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":36482,"byte_end":36524,"line_start":446,"line_end":446,"column_start":1,"column_end":43}},{"value":"/ nst.push_empty();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":36525,"byte_end":36546,"line_start":447,"line_end":447,"column_start":1,"column_end":22}},{"value":"/ nst.put(\"a\", \"urn:A\");","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":36547,"byte_end":36573,"line_start":448,"line_end":448,"column_start":1,"column_end":27}},{"value":"/ nst.put(\"b\", \"urn:B\");","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":36574,"byte_end":36600,"line_start":449,"line_end":449,"column_start":1,"column_end":27}},{"value":"/ nst.push_empty();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":36601,"byte_end":36622,"line_start":450,"line_end":450,"column_start":1,"column_end":22}},{"value":"/ nst.put(\"c\", \"urn:C\");","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":36623,"byte_end":36649,"line_start":451,"line_end":451,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":36650,"byte_end":36653,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/ nst.checked_target().extend(vec![(\"a\", \"urn:Z\"), (\"b\", \"urn:B\"), (\"c\", \"urn:Y\"), (\"d\", \"urn:D\")]);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":36654,"byte_end":36756,"line_start":453,"line_end":453,"column_start":1,"column_end":103}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":36757,"byte_end":36772,"line_start":454,"line_end":454,"column_start":1,"column_end":16}},{"value":"/     vec![(\"a\", \"urn:Z\"), (\"c\", \"urn:C\"), (\"d\", \"urn:D\"), (\"b\", \"urn:B\")],","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":36773,"byte_end":36850,"line_start":455,"line_end":455,"column_start":1,"column_end":78}},{"value":"/     nst.iter().collect::<Vec<_>>()","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":36851,"byte_end":36889,"line_start":456,"line_end":456,"column_start":1,"column_end":39}},{"value":"/ );","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":36890,"byte_end":36896,"line_start":457,"line_end":457,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":36897,"byte_end":36904,"line_start":458,"line_end":458,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":36905,"byte_end":36908,"line_start":459,"line_end":459,"column_start":1,"column_end":4}},{"value":"/ Compare:","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":36909,"byte_end":36921,"line_start":460,"line_end":460,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":36922,"byte_end":36925,"line_start":461,"line_end":461,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":36926,"byte_end":36933,"line_start":462,"line_end":462,"column_start":1,"column_end":8}},{"value":"/ # use xml::namespace::NamespaceStack;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":36934,"byte_end":36975,"line_start":463,"line_end":463,"column_start":1,"column_end":42}},{"value":"/ # let mut nst = NamespaceStack::empty();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":36976,"byte_end":37020,"line_start":464,"line_end":464,"column_start":1,"column_end":45}},{"value":"/ # nst.push_empty();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":37021,"byte_end":37044,"line_start":465,"line_end":465,"column_start":1,"column_end":24}},{"value":"/ # nst.put(\"a\", \"urn:A\");","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":37045,"byte_end":37073,"line_start":466,"line_end":466,"column_start":1,"column_end":29}},{"value":"/ # nst.put(\"b\", \"urn:B\");","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":37074,"byte_end":37102,"line_start":467,"line_end":467,"column_start":1,"column_end":29}},{"value":"/ # nst.push_empty();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":37103,"byte_end":37126,"line_start":468,"line_end":468,"column_start":1,"column_end":24}},{"value":"/ # nst.put(\"c\", \"urn:C\");","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":37127,"byte_end":37155,"line_start":469,"line_end":469,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":37156,"byte_end":37159,"line_start":470,"line_end":470,"column_start":1,"column_end":4}},{"value":"/ nst.extend(vec![(\"a\", \"urn:Z\"), (\"b\", \"urn:B\"), (\"c\", \"urn:Y\"), (\"d\", \"urn:D\")]);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":37160,"byte_end":37245,"line_start":471,"line_end":471,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":37246,"byte_end":37261,"line_start":472,"line_end":472,"column_start":1,"column_end":16}},{"value":"/     vec![(\"a\", \"urn:Z\"), (\"b\", \"urn:B\"), (\"c\", \"urn:C\"), (\"d\", \"urn:D\")],","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":37262,"byte_end":37339,"line_start":473,"line_end":473,"column_start":1,"column_end":78}},{"value":"/     nst.iter().collect::<Vec<_>>()","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":37340,"byte_end":37378,"line_start":474,"line_end":474,"column_start":1,"column_end":39}},{"value":"/ );","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":37379,"byte_end":37385,"line_start":475,"line_end":475,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":37386,"byte_end":37393,"line_start":476,"line_end":476,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":243},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"reader","qualname":"::reader","value":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":356},{"krate":0,"index":562},{"krate":0,"index":575},{"krate":0,"index":589},{"krate":0,"index":627},{"krate":0,"index":630},{"krate":0,"index":632},{"krate":0,"index":636},{"krate":0,"index":644},{"krate":0,"index":647},{"krate":0,"index":652},{"krate":0,"index":656},{"krate":0,"index":661},{"krate":0,"index":665}],"decl_id":null,"docs":" Contains high-level interface for a pull-based XML parser.","sig":null,"attributes":[{"value":"! Contains high-level interface for a pull-based XML parser.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":37699,"byte_end":37761,"line_start":1,"line_end":1,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":37762,"byte_end":37765,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The most important type in this module is `EventReader`, which provides an iterator","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":37766,"byte_end":37853,"line_start":3,"line_end":3,"column_start":1,"column_end":88}},{"value":"! view for events in XML document.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":37854,"byte_end":37890,"line_start":4,"line_end":4,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1229},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":124303,"byte_end":124315,"line_start":12,"line_end":12,"column_start":12,"column_end":24},"name":"ParserConfig","qualname":"::reader::config::ParserConfig","value":"ParserConfig { trim_whitespace, whitespace_to_characters, cdata_to_characters, ignore_comments, coalesce_characters, extra_entities, ignore_end_of_stream, replace_unknown_entity_references, ignore_root_level_whitespace }","parent":null,"children":[{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1238}],"decl_id":null,"docs":" Parser configuration structure.","sig":null,"attributes":[{"value":"/ Parser configuration structure.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":124114,"byte_end":124149,"line_start":7,"line_end":7,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":124150,"byte_end":124153,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This structure contains various configuration options which affect","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":124154,"byte_end":124224,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ behavior of the parser.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":124225,"byte_end":124252,"line_start":10,"line_end":10,"column_start":1,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":1230},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":125018,"byte_end":125033,"line_start":24,"line_end":24,"column_start":9,"column_end":24},"name":"trim_whitespace","qualname":"::reader::config::ParserConfig::trim_whitespace","value":"bool","parent":{"krate":0,"index":1229},"children":[],"decl_id":null,"docs":" Whether or not should whitespace in textual events be removed. Default is false.","sig":null,"attributes":[{"value":"/ Whether or not should whitespace in textual events be removed. Default is false.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":124322,"byte_end":124406,"line_start":13,"line_end":13,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":124411,"byte_end":124414,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ When true, all standalone whitespace will be removed (this means no","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":124419,"byte_end":124490,"line_start":15,"line_end":15,"column_start":5,"column_end":76}},{"value":"/ `Whitespace` events will ve emitted), and leading and trailing whitespace","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":124495,"byte_end":124572,"line_start":16,"line_end":16,"column_start":5,"column_end":82}},{"value":"/ from `Character` events will be deleted. If after trimming `Characters`","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":124577,"byte_end":124652,"line_start":17,"line_end":17,"column_start":5,"column_end":80}},{"value":"/ event will be empty, it will also be omitted from output stream. This is","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":124657,"byte_end":124733,"line_start":18,"line_end":18,"column_start":5,"column_end":81}},{"value":"/ possible, however, only if `whitespace_to_characters` or","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":124738,"byte_end":124798,"line_start":19,"line_end":19,"column_start":5,"column_end":65}},{"value":"/ `cdata_to_characters` options are set.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":124803,"byte_end":124845,"line_start":20,"line_end":20,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":124850,"byte_end":124853,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ This option does not affect CDATA events, unless `cdata_to_characters`","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":124858,"byte_end":124932,"line_start":22,"line_end":22,"column_start":5,"column_end":79}},{"value":"/ option is also set. In that case CDATA content will also be trimmed.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":124937,"byte_end":125009,"line_start":23,"line_end":23,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":1231},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":125383,"byte_end":125407,"line_start":32,"line_end":32,"column_start":9,"column_end":33},"name":"whitespace_to_characters","qualname":"::reader::config::ParserConfig::whitespace_to_characters","value":"bool","parent":{"krate":0,"index":1229},"children":[],"decl_id":null,"docs":" Whether or not should whitespace be converted to characters.\n Default is false.","sig":null,"attributes":[{"value":"/ Whether or not should whitespace be converted to characters.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":125046,"byte_end":125110,"line_start":26,"line_end":26,"column_start":5,"column_end":69}},{"value":"/ Default is false.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":125115,"byte_end":125136,"line_start":27,"line_end":27,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":125141,"byte_end":125144,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ If true, instead of `Whitespace` events `Characters` events with the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":125149,"byte_end":125221,"line_start":29,"line_end":29,"column_start":5,"column_end":77}},{"value":"/ same content will be emitted. If `trim_whitespace` is also true, these","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":125226,"byte_end":125300,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ events will be trimmed to nothing and, consequently, not emitted.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":125305,"byte_end":125374,"line_start":31,"line_end":31,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":1232},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":125814,"byte_end":125833,"line_start":41,"line_end":41,"column_start":9,"column_end":28},"name":"cdata_to_characters","qualname":"::reader::config::ParserConfig::cdata_to_characters","value":"bool","parent":{"krate":0,"index":1229},"children":[],"decl_id":null,"docs":" Whether or not should CDATA be converted to characters.\n Default is false.","sig":null,"attributes":[{"value":"/ Whether or not should CDATA be converted to characters.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":125420,"byte_end":125479,"line_start":34,"line_end":34,"column_start":5,"column_end":64}},{"value":"/ Default is false.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":125484,"byte_end":125505,"line_start":35,"line_end":35,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":125510,"byte_end":125513,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ If true, instead of `CData` events `Characters` events with the same","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":125518,"byte_end":125590,"line_start":37,"line_end":37,"column_start":5,"column_end":77}},{"value":"/ content will be emitted. If `trim_whitespace` is also true, these events","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":125595,"byte_end":125671,"line_start":38,"line_end":38,"column_start":5,"column_end":81}},{"value":"/ will be trimmed. If corresponding CDATA contained nothing but whitespace,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":125676,"byte_end":125753,"line_start":39,"line_end":39,"column_start":5,"column_end":82}},{"value":"/ this event will be omitted from the stream.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":125758,"byte_end":125805,"line_start":40,"line_end":40,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1233},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":125988,"byte_end":126003,"line_start":46,"line_end":46,"column_start":9,"column_end":24},"name":"ignore_comments","qualname":"::reader::config::ParserConfig::ignore_comments","value":"bool","parent":{"krate":0,"index":1229},"children":[],"decl_id":null,"docs":" Whether or not should comments be omitted. Default is true.","sig":null,"attributes":[{"value":"/ Whether or not should comments be omitted. Default is true.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":125846,"byte_end":125909,"line_start":43,"line_end":43,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":125914,"byte_end":125917,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ If true, `Comment` events will not be emitted at all.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":125922,"byte_end":125979,"line_start":45,"line_end":45,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":1234},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":126489,"byte_end":126508,"line_start":57,"line_end":57,"column_start":9,"column_end":28},"name":"coalesce_characters","qualname":"::reader::config::ParserConfig::coalesce_characters","value":"bool","parent":{"krate":0,"index":1229},"children":[],"decl_id":null,"docs":" Whether or not should sequential `Characters` events be merged.\n Default is true.","sig":null,"attributes":[{"value":"/ Whether or not should sequential `Characters` events be merged.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":126016,"byte_end":126083,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/ Default is true.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":126088,"byte_end":126108,"line_start":49,"line_end":49,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":126113,"byte_end":126116,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If true, multiple sequential `Characters` events will be merged into","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":126121,"byte_end":126193,"line_start":51,"line_end":51,"column_start":5,"column_end":77}},{"value":"/ a single event, that is, their data will be concatenated.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":126198,"byte_end":126259,"line_start":52,"line_end":52,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":126264,"byte_end":126267,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Multiple sequential `Characters` events are only possible if either","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":126272,"byte_end":126343,"line_start":54,"line_end":54,"column_start":5,"column_end":76}},{"value":"/ `cdata_to_characters` or `ignore_comments` are set. Otherwise character","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":126348,"byte_end":126423,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ events will always be separated by other events.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":126428,"byte_end":126480,"line_start":56,"line_end":56,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":1235},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":126934,"byte_end":126948,"line_start":65,"line_end":65,"column_start":9,"column_end":23},"name":"extra_entities","qualname":"::reader::config::ParserConfig::extra_entities","value":"std::collections::HashMap<std::string::String, std::string::String>","parent":{"krate":0,"index":1229},"children":[],"decl_id":null,"docs":" A map of extra entities recognized by the parser. Default is an empty map.","sig":null,"attributes":[{"value":"/ A map of extra entities recognized by the parser. Default is an empty map.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":126521,"byte_end":126599,"line_start":59,"line_end":59,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":126604,"byte_end":126607,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ By default the XML parser recognizes the entities defined in the XML spec. Sometimes,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":126612,"byte_end":126701,"line_start":61,"line_end":61,"column_start":5,"column_end":94}},{"value":"/ however, it is convenient to make the parser recognize additional entities which","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":126706,"byte_end":126790,"line_start":62,"line_end":62,"column_start":5,"column_end":89}},{"value":"/ are also not available through the DTD definitions (especially given that at the moment","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":126795,"byte_end":126886,"line_start":63,"line_end":63,"column_start":5,"column_end":96}},{"value":"/ DTD parsing is not supported).","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":126891,"byte_end":126925,"line_start":64,"line_end":64,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1236},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":127707,"byte_end":127727,"line_start":77,"line_end":77,"column_start":9,"column_end":29},"name":"ignore_end_of_stream","qualname":"::reader::config::ParserConfig::ignore_end_of_stream","value":"bool","parent":{"krate":0,"index":1229},"children":[],"decl_id":null,"docs":" Whether or not the parser should ignore the end of stream. Default is false.","sig":null,"attributes":[{"value":"/ Whether or not the parser should ignore the end of stream. Default is false.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":126980,"byte_end":127060,"line_start":67,"line_end":67,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":127065,"byte_end":127068,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ By default the parser will either error out when it encounters a premature end of","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":127073,"byte_end":127158,"line_start":69,"line_end":69,"column_start":5,"column_end":90}},{"value":"/ stream or complete normally if the end of stream was expected. If you want to continue","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":127163,"byte_end":127253,"line_start":70,"line_end":70,"column_start":5,"column_end":95}},{"value":"/ reading from a stream whose input is supplied progressively, you can set this option to true.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":127258,"byte_end":127355,"line_start":71,"line_end":71,"column_start":5,"column_end":102}},{"value":"/ In this case the parser will allow you to invoke the next() method even if a supposed end","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":127360,"byte_end":127453,"line_start":72,"line_end":72,"column_start":5,"column_end":98}},{"value":"/ of stream has happened.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":127458,"byte_end":127485,"line_start":73,"line_end":73,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":127490,"byte_end":127493,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that support for this functionality is incomplete; for example, the parser will fail if","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":127498,"byte_end":127594,"line_start":75,"line_end":75,"column_start":5,"column_end":101}},{"value":"/ the premature end of stream happens inside PCDATA. Therefore, use this option at your own risk.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":127599,"byte_end":127698,"line_start":76,"line_end":76,"column_start":5,"column_end":104}}]},{"kind":"Field","id":{"krate":0,"index":1237},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":128125,"byte_end":128158,"line_start":84,"line_end":84,"column_start":9,"column_end":42},"name":"replace_unknown_entity_references","qualname":"::reader::config::ParserConfig::replace_unknown_entity_references","value":"bool","parent":{"krate":0,"index":1229},"children":[],"decl_id":null,"docs":" Whether or not non-unicode entity references get replaced with the replacement character","sig":null,"attributes":[{"value":"/ Whether or not non-unicode entity references get replaced with the replacement character","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":127740,"byte_end":127832,"line_start":79,"line_end":79,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":127837,"byte_end":127840,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ When true, any decimal or hexadecimal character reference that cannot be converted from a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":127845,"byte_end":127938,"line_start":81,"line_end":81,"column_start":5,"column_end":98}},{"value":"/ u32 to a char using [std::char::from_u32](https://doc.rust-lang.org/std/char/fn.from_u32.html)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":127943,"byte_end":128041,"line_start":82,"line_end":82,"column_start":5,"column_end":103}},{"value":"/ will be converted into the unicode REPLACEMENT CHARACTER (U+FFFD).","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":128046,"byte_end":128116,"line_start":83,"line_end":83,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":1238},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":128481,"byte_end":128509,"line_start":90,"line_end":90,"column_start":9,"column_end":37},"name":"ignore_root_level_whitespace","qualname":"::reader::config::ParserConfig::ignore_root_level_whitespace","value":"bool","parent":{"krate":0,"index":1229},"children":[],"decl_id":null,"docs":" Whether or not whitespace at the root level of the document is ignored. Default is true.","sig":null,"attributes":[{"value":"/ Whether or not whitespace at the root level of the document is ignored. Default is true.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":128171,"byte_end":128263,"line_start":86,"line_end":86,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":128268,"byte_end":128271,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ By default any whitespace that is not enclosed within at least one level of elements will be","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":128276,"byte_end":128372,"line_start":88,"line_end":88,"column_start":5,"column_end":101}},{"value":"/ ignored. Setting this value to false will cause root level whitespace events to be emitted.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":128377,"byte_end":128472,"line_start":89,"line_end":89,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":128909,"byte_end":128912,"line_start":106,"line_end":106,"column_start":12,"column_end":15},"name":"new","qualname":"<ParserConfig>::new","value":"fn () -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Returns a new config with default values.","sig":null,"attributes":[{"value":"/ Returns a new config with default values.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":128544,"byte_end":128589,"line_start":94,"line_end":94,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":128594,"byte_end":128597,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ You can tweak default values using builder-like pattern:","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":128602,"byte_end":128662,"line_start":96,"line_end":96,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":128667,"byte_end":128670,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":128675,"byte_end":128686,"line_start":98,"line_end":98,"column_start":5,"column_end":16}},{"value":"/ use xml::reader::ParserConfig;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":128691,"byte_end":128725,"line_start":99,"line_end":99,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":128730,"byte_end":128733,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ let config = ParserConfig::new()","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":128738,"byte_end":128774,"line_start":101,"line_end":101,"column_start":5,"column_end":41}},{"value":"/     .trim_whitespace(true)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":128779,"byte_end":128809,"line_start":102,"line_end":102,"column_start":5,"column_end":35}},{"value":"/     .ignore_comments(true)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":128814,"byte_end":128844,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/     .coalesce_characters(false);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":128849,"byte_end":128885,"line_start":104,"line_end":104,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":128890,"byte_end":128897,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":129993,"byte_end":130006,"line_start":139,"line_end":139,"column_start":12,"column_end":25},"name":"create_reader","qualname":"<ParserConfig>::create_reader","value":"fn <R> (self, source: R) -> EventReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates an XML reader with this configuration.","sig":null,"attributes":[{"value":"/ Creates an XML reader with this configuration.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":129359,"byte_end":129409,"line_start":120,"line_end":120,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":129414,"byte_end":129417,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ This is a convenience method for configuring and creating a reader at the same time:","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":129422,"byte_end":129510,"line_start":122,"line_end":122,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":129515,"byte_end":129518,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":129523,"byte_end":129534,"line_start":124,"line_end":124,"column_start":5,"column_end":16}},{"value":"/ use xml::reader::ParserConfig;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":129539,"byte_end":129573,"line_start":125,"line_end":125,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":129578,"byte_end":129581,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ let mut source: &[u8] = b\"...\";","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":129586,"byte_end":129621,"line_start":127,"line_end":127,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":129626,"byte_end":129629,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ let reader = ParserConfig::new()","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":129634,"byte_end":129670,"line_start":129,"line_end":129,"column_start":5,"column_end":41}},{"value":"/     .trim_whitespace(true)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":129675,"byte_end":129705,"line_start":130,"line_end":130,"column_start":5,"column_end":35}},{"value":"/     .ignore_comments(true)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":129710,"byte_end":129740,"line_start":131,"line_end":131,"column_start":5,"column_end":35}},{"value":"/     .coalesce_characters(false)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":129745,"byte_end":129780,"line_start":132,"line_end":132,"column_start":5,"column_end":40}},{"value":"/     .create_reader(&mut source);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":129785,"byte_end":129821,"line_start":133,"line_end":133,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":129826,"byte_end":129833,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":129838,"byte_end":129841,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ This method is exactly equivalent to calling `EventReader::new_with_config()` with","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":129846,"byte_end":129932,"line_start":136,"line_end":136,"column_start":5,"column_end":91}},{"value":"/ this configuration object.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":129937,"byte_end":129967,"line_start":137,"line_end":137,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":129972,"byte_end":129981,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":130641,"byte_end":130651,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"add_entity","qualname":"<ParserConfig>::add_entity","value":"fn <S, T> (mut self, entity: S, value: T) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Adds a new entity mapping and returns an updated config object.","sig":null,"attributes":[{"value":"/ Adds a new entity mapping and returns an updated config object.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":130115,"byte_end":130182,"line_start":143,"line_end":143,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":130187,"byte_end":130190,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ This is a convenience method for adding external entities mappings to the XML parser.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":130195,"byte_end":130284,"line_start":145,"line_end":145,"column_start":5,"column_end":94}},{"value":"/ An example:","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":130289,"byte_end":130304,"line_start":146,"line_end":146,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":130309,"byte_end":130312,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":130317,"byte_end":130328,"line_start":148,"line_end":148,"column_start":5,"column_end":16}},{"value":"/ use xml::reader::ParserConfig;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":130333,"byte_end":130367,"line_start":149,"line_end":149,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":130372,"byte_end":130375,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let mut source: &[u8] = b\"...\";","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":130380,"byte_end":130415,"line_start":151,"line_end":151,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":130420,"byte_end":130423,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ let reader = ParserConfig::new()","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":130428,"byte_end":130464,"line_start":153,"line_end":153,"column_start":5,"column_end":41}},{"value":"/     .add_entity(\"nbsp\", \" \")","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":130469,"byte_end":130501,"line_start":154,"line_end":154,"column_start":5,"column_end":37}},{"value":"/     .add_entity(\"copy\", \"©\")","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":130506,"byte_end":130539,"line_start":155,"line_end":155,"column_start":5,"column_end":37}},{"value":"/     .add_entity(\"reg\", \"®\")","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":130544,"byte_end":130576,"line_start":156,"line_end":156,"column_start":5,"column_end":36}},{"value":"/     .create_reader(&mut source);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":130581,"byte_end":130617,"line_start":157,"line_end":157,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":130622,"byte_end":130629,"line_start":158,"line_end":158,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1251},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":130973,"byte_end":130988,"line_start":173,"line_end":173,"column_start":5,"column_end":20},"name":"trim_whitespace","qualname":"<ParserConfig>::trim_whitespace","value":"fn (mut self, value: bool) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/macros.rs","byte_start":1074,"byte_end":1149,"line_start":17,"line_end":17,"column_start":13,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1253},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":131004,"byte_end":131028,"line_start":174,"line_end":174,"column_start":5,"column_end":29},"name":"whitespace_to_characters","qualname":"<ParserConfig>::whitespace_to_characters","value":"fn (mut self, value: bool) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/macros.rs","byte_start":1074,"byte_end":1149,"line_start":17,"line_end":17,"column_start":13,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1255},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":131044,"byte_end":131063,"line_start":175,"line_end":175,"column_start":5,"column_end":24},"name":"cdata_to_characters","qualname":"<ParserConfig>::cdata_to_characters","value":"fn (mut self, value: bool) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/macros.rs","byte_start":1074,"byte_end":1149,"line_start":17,"line_end":17,"column_start":13,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1257},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":131079,"byte_end":131094,"line_start":176,"line_end":176,"column_start":5,"column_end":20},"name":"ignore_comments","qualname":"<ParserConfig>::ignore_comments","value":"fn (mut self, value: bool) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/macros.rs","byte_start":1074,"byte_end":1149,"line_start":17,"line_end":17,"column_start":13,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1259},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":131110,"byte_end":131129,"line_start":177,"line_end":177,"column_start":5,"column_end":24},"name":"coalesce_characters","qualname":"<ParserConfig>::coalesce_characters","value":"fn (mut self, value: bool) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/macros.rs","byte_start":1074,"byte_end":1149,"line_start":17,"line_end":17,"column_start":13,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1261},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":131145,"byte_end":131165,"line_start":178,"line_end":178,"column_start":5,"column_end":25},"name":"ignore_end_of_stream","qualname":"<ParserConfig>::ignore_end_of_stream","value":"fn (mut self, value: bool) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/macros.rs","byte_start":1074,"byte_end":1149,"line_start":17,"line_end":17,"column_start":13,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1263},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":131181,"byte_end":131214,"line_start":179,"line_end":179,"column_start":5,"column_end":38},"name":"replace_unknown_entity_references","qualname":"<ParserConfig>::replace_unknown_entity_references","value":"fn (mut self, value: bool) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/macros.rs","byte_start":1074,"byte_end":1149,"line_start":17,"line_end":17,"column_start":13,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1265},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":131230,"byte_end":131258,"line_start":180,"line_end":180,"column_start":5,"column_end":33},"name":"ignore_root_level_whitespace","qualname":"<ParserConfig>::ignore_root_level_whitespace","value":"fn (mut self, value: bool) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/macros.rs","byte_start":1074,"byte_end":1149,"line_start":17,"line_end":17,"column_start":13,"column_end":88}}]},{"kind":"StructVariant","id":{"krate":0,"index":1267},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":131914,"byte_end":131927,"line_start":21,"line_end":21,"column_start":5,"column_end":18},"name":"StartDocument","qualname":"::reader::events::XmlEvent::StartDocument","value":"XmlEvent::StartDocument { version, encoding, standalone }","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":" Corresponds to XML document declaration.","sig":null,"attributes":[{"value":"/ Corresponds to XML document declaration.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":131711,"byte_end":131755,"line_start":17,"line_end":17,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":131760,"byte_end":131763,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This event is always emitted before any other event. It is emitted","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":131768,"byte_end":131838,"line_start":19,"line_end":19,"column_start":5,"column_end":75}},{"value":"/ even if the actual declaration is not present in the document.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":131843,"byte_end":131909,"line_start":20,"line_end":20,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1271},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":132885,"byte_end":132896,"line_start":46,"line_end":46,"column_start":5,"column_end":16},"name":"EndDocument","qualname":"::reader::events::XmlEvent::EndDocument","value":"XmlEvent::EndDocument","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":" Denotes to the end of the document stream.","sig":null,"attributes":[{"value":"/ Denotes to the end of the document stream.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":132646,"byte_end":132692,"line_start":42,"line_end":42,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":132697,"byte_end":132700,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This event is always emitted after any other event (except `Error`). After it","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":132705,"byte_end":132786,"line_start":44,"line_end":44,"column_start":5,"column_end":86}},{"value":"/ is emitted for the first time, it will always be emitted on next event pull attempts.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":132791,"byte_end":132880,"line_start":45,"line_end":45,"column_start":5,"column_end":94}}]},{"kind":"StructVariant","id":{"krate":0,"index":1273},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":133099,"byte_end":133120,"line_start":52,"line_end":52,"column_start":5,"column_end":26},"name":"ProcessingInstruction","qualname":"::reader::events::XmlEvent::ProcessingInstruction","value":"XmlEvent::ProcessingInstruction { name, data }","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":" Denotes an XML processing instruction.","sig":null,"attributes":[{"value":"/ Denotes an XML processing instruction.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":132903,"byte_end":132945,"line_start":48,"line_end":48,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":132950,"byte_end":132953,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This event contains a processing instruction target (`name`) and opaque `data`. It","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":132958,"byte_end":133044,"line_start":50,"line_end":50,"column_start":5,"column_end":91}},{"value":"/ is up to the application to process them.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":133049,"byte_end":133094,"line_start":51,"line_end":51,"column_start":5,"column_end":50}}]},{"kind":"StructVariant","id":{"krate":0,"index":1276},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":133485,"byte_end":133497,"line_start":64,"line_end":64,"column_start":5,"column_end":17},"name":"StartElement","qualname":"::reader::events::XmlEvent::StartElement","value":"XmlEvent::StartElement { name, attributes, namespace }","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":" Denotes a beginning of an XML element.","sig":null,"attributes":[{"value":"/ Denotes a beginning of an XML element.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":133274,"byte_end":133316,"line_start":60,"line_end":60,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":133321,"byte_end":133324,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ This event is emitted after parsing opening tags or after parsing bodiless tags. In the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":133329,"byte_end":133420,"line_start":62,"line_end":62,"column_start":5,"column_end":96}},{"value":"/ latter case `EndElement` event immediately follows.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":133425,"byte_end":133480,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"StructVariant","id":{"krate":0,"index":1280},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":134109,"byte_end":134119,"line_start":81,"line_end":81,"column_start":5,"column_end":15},"name":"EndElement","qualname":"::reader::events::XmlEvent::EndElement","value":"XmlEvent::EndElement { name }","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":" Denotes an end of an XML element.","sig":null,"attributes":[{"value":"/ Denotes an end of an XML element.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":133875,"byte_end":133912,"line_start":77,"line_end":77,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":133917,"byte_end":133920,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ This event is emitted after parsing closing tags or after parsing bodiless tags. In the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":133925,"byte_end":134016,"line_start":79,"line_end":79,"column_start":5,"column_end":96}},{"value":"/ latter case it is emitted immediately after corresponding `StartElement` event.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":134021,"byte_end":134104,"line_start":80,"line_end":80,"column_start":5,"column_end":88}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1282},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":134488,"byte_end":134493,"line_start":92,"line_end":92,"column_start":5,"column_end":10},"name":"CData","qualname":"::reader::events::XmlEvent::CData","value":"XmlEvent::CData(String)","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":" Denotes CDATA content.","sig":null,"attributes":[{"value":"/ Denotes CDATA content.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":134201,"byte_end":134227,"line_start":86,"line_end":86,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":134232,"byte_end":134235,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This event contains unparsed data. No unescaping will be performed.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":134240,"byte_end":134311,"line_start":88,"line_end":88,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":134316,"byte_end":134319,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ It is possible to configure a parser to emit `Characters` event instead of `CData`. See","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":134324,"byte_end":134415,"line_start":90,"line_end":90,"column_start":5,"column_end":96}},{"value":"/ `pull::ParserConfiguration` structure for more information.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":134420,"byte_end":134483,"line_start":91,"line_end":91,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1285},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":134717,"byte_end":134724,"line_start":98,"line_end":98,"column_start":5,"column_end":12},"name":"Comment","qualname":"::reader::events::XmlEvent::Comment","value":"XmlEvent::Comment(String)","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":" Denotes a comment.","sig":null,"attributes":[{"value":"/ Denotes a comment.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":134508,"byte_end":134530,"line_start":94,"line_end":94,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":134535,"byte_end":134538,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ It is possible to configure a parser to ignore comments, so this event will never be emitted.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":134543,"byte_end":134640,"line_start":96,"line_end":96,"column_start":5,"column_end":102}},{"value":"/ See `pull::ParserConfiguration` structure for more information.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":134645,"byte_end":134712,"line_start":97,"line_end":97,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1288},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":135110,"byte_end":135120,"line_start":107,"line_end":107,"column_start":5,"column_end":15},"name":"Characters","qualname":"::reader::events::XmlEvent::Characters","value":"XmlEvent::Characters(String)","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":" Denotes character data outside of tags.","sig":null,"attributes":[{"value":"/ Denotes character data outside of tags.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":134739,"byte_end":134782,"line_start":100,"line_end":100,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":134787,"byte_end":134790,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ Contents of this event will always be unescaped, so no entities like `&lt;` or `&amp;` or `&#123;`","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":134795,"byte_end":134897,"line_start":102,"line_end":102,"column_start":5,"column_end":107}},{"value":"/ will appear in it.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":134902,"byte_end":134924,"line_start":103,"line_end":103,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":134929,"byte_end":134932,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ It is possible to configure a parser to trim leading and trailing whitespace for this event.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":134937,"byte_end":135033,"line_start":105,"line_end":105,"column_start":5,"column_end":101}},{"value":"/ See `pull::ParserConfiguration` structure for more information.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":135038,"byte_end":135105,"line_start":106,"line_end":106,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1291},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":135489,"byte_end":135499,"line_start":114,"line_end":114,"column_start":5,"column_end":15},"name":"Whitespace","qualname":"::reader::events::XmlEvent::Whitespace","value":"XmlEvent::Whitespace(String)","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":" Denotes a chunk of whitespace outside of tags.","sig":null,"attributes":[{"value":"/ Denotes a chunk of whitespace outside of tags.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":135135,"byte_end":135185,"line_start":109,"line_end":109,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":135190,"byte_end":135193,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ It is possible to configure a parser to emit `Characters` event instead of `Whitespace`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":135198,"byte_end":135290,"line_start":111,"line_end":111,"column_start":5,"column_end":97}},{"value":"/ See `pull::ParserConfiguration` structure for more information. When combined with whitespace","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":135295,"byte_end":135392,"line_start":112,"line_end":112,"column_start":5,"column_end":102}},{"value":"/ trimming, it will eliminate standalone whitespace from the event stream completely.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":135397,"byte_end":135484,"line_start":113,"line_end":113,"column_start":5,"column_end":92}}]},{"kind":"Enum","id":{"krate":0,"index":1266},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":131696,"byte_end":131704,"line_start":16,"line_end":16,"column_start":10,"column_end":18},"name":"XmlEvent","qualname":"::reader::events::XmlEvent","value":"XmlEvent::{StartDocument, EndDocument, ProcessingInstruction, StartElement, EndElement, CData, Comment, Characters, Whitespace}","parent":null,"children":[{"krate":0,"index":1267},{"krate":0,"index":1271},{"krate":0,"index":1273},{"krate":0,"index":1276},{"krate":0,"index":1280},{"krate":0,"index":1282},{"krate":0,"index":1285},{"krate":0,"index":1288},{"krate":0,"index":1291}],"decl_id":null,"docs":" An element of an XML input stream.","sig":null,"attributes":[{"value":"/ An element of an XML input stream.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":131493,"byte_end":131531,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":131532,"byte_end":131535,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Items of this enum are emitted by `reader::EventReader`. They correspond to different","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":131536,"byte_end":131625,"line_start":13,"line_end":13,"column_start":1,"column_end":90}},{"value":"/ elements of an XML document.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":131626,"byte_end":131658,"line_start":14,"line_end":14,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":138603,"byte_end":138618,"line_start":191,"line_end":191,"column_start":12,"column_end":27},"name":"as_writer_event","qualname":"<XmlEvent>::as_writer_event","value":"fn <'a> (&'a self) -> Option<::writer::events::XmlEvent<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Obtains a writer event from this reader event.","sig":null,"attributes":[{"value":"/ Obtains a writer event from this reader event.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":137178,"byte_end":137228,"line_start":153,"line_end":153,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":137233,"byte_end":137236,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ This method is useful for streaming processing of XML documents where the output","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":137241,"byte_end":137325,"line_start":155,"line_end":155,"column_start":5,"column_end":89}},{"value":"/ is also an XML document. With this method it is possible to process some events","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":137330,"byte_end":137413,"line_start":156,"line_end":156,"column_start":5,"column_end":88}},{"value":"/ while passing other events through to the writer unchanged:","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":137418,"byte_end":137481,"line_start":157,"line_end":157,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":137486,"byte_end":137489,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":137494,"byte_end":137505,"line_start":159,"line_end":159,"column_start":5,"column_end":16}},{"value":"/ use std::str;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":137510,"byte_end":137527,"line_start":160,"line_end":160,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":137532,"byte_end":137535,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ use xml::{EventReader, EventWriter};","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":137540,"byte_end":137580,"line_start":162,"line_end":162,"column_start":5,"column_end":45}},{"value":"/ use xml::reader::XmlEvent as ReaderEvent;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":137585,"byte_end":137630,"line_start":163,"line_end":163,"column_start":5,"column_end":50}},{"value":"/ use xml::writer::XmlEvent as WriterEvent;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":137635,"byte_end":137680,"line_start":164,"line_end":164,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":137685,"byte_end":137688,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let mut input: &[u8] = b\"<hello>world</hello>\";","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":137693,"byte_end":137744,"line_start":166,"line_end":166,"column_start":5,"column_end":56}},{"value":"/ let mut output: Vec<u8> = Vec::new();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":137749,"byte_end":137790,"line_start":167,"line_end":167,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":137795,"byte_end":137798,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":137803,"byte_end":137808,"line_start":169,"line_end":169,"column_start":5,"column_end":10}},{"value":"/     let mut reader = EventReader::new(&mut input);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":137813,"byte_end":137867,"line_start":170,"line_end":170,"column_start":5,"column_end":59}},{"value":"/     let mut writer = EventWriter::new(&mut output);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":137872,"byte_end":137927,"line_start":171,"line_end":171,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":137932,"byte_end":137935,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/     for e in reader {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":137940,"byte_end":137965,"line_start":173,"line_end":173,"column_start":5,"column_end":30}},{"value":"/         match e.unwrap() {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":137970,"byte_end":138000,"line_start":174,"line_end":174,"column_start":5,"column_end":35}},{"value":"/             ReaderEvent::Characters(s) =>","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":138005,"byte_end":138050,"line_start":175,"line_end":175,"column_start":5,"column_end":50}},{"value":"/                 writer.write(WriterEvent::characters(&s.to_uppercase())).unwrap(),","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":138055,"byte_end":138141,"line_start":176,"line_end":176,"column_start":5,"column_end":91}},{"value":"/             e => if let Some(e) = e.as_writer_event() {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":138146,"byte_end":138205,"line_start":177,"line_end":177,"column_start":5,"column_end":64}},{"value":"/                 writer.write(e).unwrap()","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":138210,"byte_end":138254,"line_start":178,"line_end":178,"column_start":5,"column_end":49}},{"value":"/             }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":138259,"byte_end":138276,"line_start":179,"line_end":179,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":138281,"byte_end":138294,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":138299,"byte_end":138308,"line_start":181,"line_end":181,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":138313,"byte_end":138318,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":138323,"byte_end":138326,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":138331,"byte_end":138346,"line_start":184,"line_end":184,"column_start":5,"column_end":20}},{"value":"/     str::from_utf8(&output).unwrap(),","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":138351,"byte_end":138392,"line_start":185,"line_end":185,"column_start":5,"column_end":46}},{"value":"/     r#\"<?xml version=\"1.0\" encoding=\"UTF-8\"?><hello>WORLD</hello>\"#","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":138397,"byte_end":138468,"line_start":186,"line_end":186,"column_start":5,"column_end":76}},{"value":"/ );","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":138473,"byte_end":138479,"line_start":187,"line_end":187,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":138484,"byte_end":138491,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":138496,"byte_end":138499,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that this API may change or get additions in future to improve its ergonomics.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":138504,"byte_end":138591,"line_start":190,"line_end":190,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1302},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/error.rs","byte_start":140313,"byte_end":140319,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"Syntax","qualname":"::reader::error::ErrorKind::Syntax","value":"ErrorKind::Syntax(Cow<'static, str>)","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1305},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/error.rs","byte_start":140344,"byte_end":140346,"line_start":14,"line_end":14,"column_start":5,"column_end":7},"name":"Io","qualname":"::reader::error::ErrorKind::Io","value":"ErrorKind::Io(io::Error)","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1308},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/error.rs","byte_start":140363,"byte_end":140367,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Utf8","qualname":"::reader::error::ErrorKind::Utf8","value":"ErrorKind::Utf8(str::Utf8Error)","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1311},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/error.rs","byte_start":140389,"byte_end":140402,"line_start":16,"line_end":16,"column_start":5,"column_end":18},"name":"UnexpectedEof","qualname":"::reader::error::ErrorKind::UnexpectedEof","value":"ErrorKind::UnexpectedEof","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1301},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/error.rs","byte_start":140297,"byte_end":140306,"line_start":12,"line_end":12,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::reader::error::ErrorKind","value":"ErrorKind::{Syntax, Io, Utf8, UnexpectedEof}","parent":null,"children":[{"krate":0,"index":1302},{"krate":0,"index":1305},{"krate":0,"index":1308},{"krate":0,"index":1311}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1315},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/error.rs","byte_start":140575,"byte_end":140580,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"Error","qualname":"::reader::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":1316},{"krate":0,"index":1317}],"decl_id":null,"docs":" An XML parsing error.","sig":null,"attributes":[{"value":"/ An XML parsing error.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/error.rs","byte_start":140407,"byte_end":140432,"line_start":19,"line_end":19,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/error.rs","byte_start":140433,"byte_end":140436,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Consists of a 2D position in a document and a textual message describing the error.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/error.rs","byte_start":140437,"byte_end":140524,"line_start":21,"line_end":21,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/error.rs","byte_start":140989,"byte_end":140992,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"msg","qualname":"<Error>::msg","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a message which is contained inside this error.\n","sig":null,"attributes":[{"value":"/ Returns a reference to a message which is contained inside this error.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/error.rs","byte_start":140889,"byte_end":140963,"line_start":40,"line_end":40,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/error.rs","byte_start":140968,"byte_end":140977,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/error.rs","byte_start":141309,"byte_end":141313,"line_start":52,"line_end":52,"column_start":12,"column_end":16},"name":"kind","qualname":"<Error>::kind","value":"fn (&self) -> &ErrorKind","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":630},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":38222,"byte_end":38228,"line_start":25,"line_end":25,"column_start":10,"column_end":16},"name":"Result","qualname":"::reader::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A result type yielded by `XmlReader`.\n","sig":null,"attributes":[{"value":"/ A result type yielded by `XmlReader`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":38171,"byte_end":38212,"line_start":24,"line_end":24,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":632},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":38360,"byte_end":38371,"line_start":28,"line_end":28,"column_start":12,"column_end":23},"name":"EventReader","qualname":"::reader::EventReader","value":"EventReader {  }","parent":null,"children":[{"krate":0,"index":634},{"krate":0,"index":635}],"decl_id":null,"docs":" A wrapper around an `std::io::Read` instance which provides pull-based XML parsing.\n","sig":null,"attributes":[{"value":"/ A wrapper around an `std::io::Read` instance which provides pull-based XML parsing.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":38261,"byte_end":38348,"line_start":27,"line_end":27,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":38538,"byte_end":38541,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<EventReader<R>>::new","value":"fn (source: R) -> EventReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new reader, consuming the given stream.\n","sig":null,"attributes":[{"value":"/ Creates a new reader, consuming the given stream.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":38459,"byte_end":38512,"line_start":34,"line_end":34,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":38517,"byte_end":38526,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":38760,"byte_end":38775,"line_start":42,"line_end":42,"column_start":12,"column_end":27},"name":"new_with_config","qualname":"<EventReader<R>>::new_with_config","value":"fn (source: R, config: ParserConfig) -> EventReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new reader with the provded configuration, consuming the given stream.\n","sig":null,"attributes":[{"value":"/ Creates a new reader with the provded configuration, consuming the given stream.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":38650,"byte_end":38734,"line_start":40,"line_end":40,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":38739,"byte_end":38748,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":39146,"byte_end":39150,"line_start":51,"line_end":51,"column_start":12,"column_end":16},"name":"next","qualname":"<EventReader<R>>::next","value":"fn (&mut self) -> Result<XmlEvent>","parent":null,"children":[],"decl_id":null,"docs":" Pulls and returns next XML event from the stream.","sig":null,"attributes":[{"value":"/ Pulls and returns next XML event from the stream.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":38912,"byte_end":38965,"line_start":46,"line_end":46,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":38970,"byte_end":38973,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ If returned event is `XmlEvent::Error` or `XmlEvent::EndDocument`, then","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":38978,"byte_end":39053,"line_start":48,"line_end":48,"column_start":5,"column_end":80}},{"value":"/ further calls to this method will return this event again.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":39058,"byte_end":39120,"line_start":49,"line_end":49,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":39125,"byte_end":39134,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":39245,"byte_end":39251,"line_start":55,"line_end":55,"column_start":12,"column_end":18},"name":"source","qualname":"<EventReader<R>>::source","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":39293,"byte_end":39303,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"source_mut","qualname":"<EventReader<R>>::source_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":39661,"byte_end":39671,"line_start":63,"line_end":63,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<EventReader<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `EventReader`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this `EventReader`, returning the underlying reader.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":39351,"byte_end":39415,"line_start":58,"line_end":58,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":39420,"byte_end":39423,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Note that this operation is destructive; unwrapping the reader and wrapping it","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":39428,"byte_end":39510,"line_start":60,"line_end":60,"column_start":5,"column_end":87}},{"value":"/ again with `EventReader::new()` will create a fresh reader which will attempt","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":39515,"byte_end":39596,"line_start":61,"line_end":61,"column_start":5,"column_end":86}},{"value":"/ to parse an XML document from the beginning.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":39601,"byte_end":39649,"line_start":62,"line_end":62,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":652},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":40393,"byte_end":40399,"line_start":89,"line_end":89,"column_start":12,"column_end":18},"name":"Events","qualname":"::reader::Events","value":"Events {  }","parent":null,"children":[{"krate":0,"index":654},{"krate":0,"index":655}],"decl_id":null,"docs":" An iterator over XML events created from some type implementing `Read`.","sig":null,"attributes":[{"value":"/ An iterator over XML events created from some type implementing `Read`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":40134,"byte_end":40209,"line_start":85,"line_end":85,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":40210,"byte_end":40213,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ When the next event is `xml::event::Error` or `xml::event::EndDocument`, then","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":40214,"byte_end":40295,"line_start":87,"line_end":87,"column_start":1,"column_end":82}},{"value":"/ it will be returned by the iterator once, and then it will stop producing events.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":40296,"byte_end":40381,"line_start":88,"line_end":88,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":40580,"byte_end":40590,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Events<R>>::into_inner","value":"fn (self) -> EventReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the iterator, returning the internal `EventReader`.\n","sig":null,"attributes":[{"value":"/ Unwraps the iterator, returning the internal `EventReader`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":40491,"byte_end":40554,"line_start":95,"line_end":95,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":40559,"byte_end":40568,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":40655,"byte_end":40661,"line_start":101,"line_end":101,"column_start":12,"column_end":18},"name":"source","qualname":"<Events<R>>::source","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":40710,"byte_end":40720,"line_start":102,"line_end":102,"column_start":12,"column_end":22},"name":"source_mut","qualname":"<Events<R>>::source_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":41366,"byte_end":41374,"line_start":126,"line_end":126,"column_start":12,"column_end":20},"name":"from_str","qualname":"<EventReader<&'r [u8]>>::from_str","value":"fn (source: &'r str) -> EventReader<&'r [u8]>","parent":null,"children":[],"decl_id":null,"docs":" A convenience method to create an `XmlReader` from a string slice.\n","sig":null,"attributes":[{"value":"/ A convenience method to create an `XmlReader` from a string slice.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":41270,"byte_end":41340,"line_start":124,"line_end":124,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":41345,"byte_end":41354,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":668},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"writer","qualname":"::writer","value":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","parent":null,"children":[{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":765},{"krate":0,"index":775},{"krate":0,"index":822},{"krate":0,"index":826}],"decl_id":null,"docs":" Contains high-level interface for an events-based XML emitter.","sig":null,"attributes":[{"value":"! Contains high-level interface for an events-based XML emitter.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":143317,"byte_end":143383,"line_start":1,"line_end":1,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":143384,"byte_end":143387,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The most important type in this module is `EventWriter` which allows writing an XML document","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":143388,"byte_end":143484,"line_start":3,"line_end":3,"column_start":1,"column_end":97}},{"value":"! to some output stream.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":143485,"byte_end":143511,"line_start":4,"line_end":4,"column_start":1,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1330},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/emitter.rs","byte_start":147693,"byte_end":147695,"line_start":21,"line_end":21,"column_start":5,"column_end":7},"name":"Io","qualname":"::writer::emitter::EmitterError::Io","value":"EmitterError::Io(io::Error)","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" An I/O error occured in the underlying `Write` instance.\n","sig":null,"attributes":[{"value":"/ An I/O error occured in the underlying `Write` instance.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/emitter.rs","byte_start":147628,"byte_end":147688,"line_start":20,"line_end":20,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1333},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/emitter.rs","byte_start":147789,"byte_end":147816,"line_start":24,"line_end":24,"column_start":5,"column_end":32},"name":"DocumentStartAlreadyEmitted","qualname":"::writer::emitter::EmitterError::DocumentStartAlreadyEmitted","value":"EmitterError::DocumentStartAlreadyEmitted","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" Document declaration has already been written to the output stream.\n","sig":null,"attributes":[{"value":"/ Document declaration has already been written to the output stream.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/emitter.rs","byte_start":147713,"byte_end":147784,"line_start":23,"line_end":23,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1335},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/emitter.rs","byte_start":147886,"byte_end":147913,"line_start":27,"line_end":27,"column_start":5,"column_end":32},"name":"LastElementNameNotAvailable","qualname":"::writer::emitter::EmitterError::LastElementNameNotAvailable","value":"EmitterError::LastElementNameNotAvailable","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" The name of the last opening element is not available.\n","sig":null,"attributes":[{"value":"/ The name of the last opening element is not available.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/emitter.rs","byte_start":147823,"byte_end":147881,"line_start":26,"line_end":26,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1337},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/emitter.rs","byte_start":148031,"byte_end":148077,"line_start":31,"line_end":31,"column_start":5,"column_end":51},"name":"EndElementNameIsNotEqualToLastStartElementName","qualname":"::writer::emitter::EmitterError::EndElementNameIsNotEqualToLastStartElementName","value":"EmitterError::EndElementNameIsNotEqualToLastStartElementName","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" The name of the last opening element is not equal to the name of the provided\n closing element.\n","sig":null,"attributes":[{"value":"/ The name of the last opening element is not equal to the name of the provided","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/emitter.rs","byte_start":147920,"byte_end":148001,"line_start":29,"line_end":29,"column_start":5,"column_end":86}},{"value":"/ closing element.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/emitter.rs","byte_start":148006,"byte_end":148026,"line_start":30,"line_end":30,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1339},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/emitter.rs","byte_start":148222,"byte_end":148250,"line_start":35,"line_end":35,"column_start":5,"column_end":33},"name":"EndElementNameIsNotSpecified","qualname":"::writer::emitter::EmitterError::EndElementNameIsNotSpecified","value":"EmitterError::EndElementNameIsNotSpecified","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" End element name is not specified when it is needed, for example, when automatic\n closing is not enabled in configuration.\n","sig":null,"attributes":[{"value":"/ End element name is not specified when it is needed, for example, when automatic","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/emitter.rs","byte_start":148084,"byte_end":148168,"line_start":33,"line_end":33,"column_start":5,"column_end":89}},{"value":"/ closing is not enabled in configuration.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/emitter.rs","byte_start":148173,"byte_end":148217,"line_start":34,"line_end":34,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":1329},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/emitter.rs","byte_start":147609,"byte_end":147621,"line_start":19,"line_end":19,"column_start":10,"column_end":22},"name":"EmitterError","qualname":"::writer::emitter::EmitterError","value":"EmitterError::{Io, DocumentStartAlreadyEmitted, LastElementNameNotAvailable, EndElementNameIsNotEqualToLastStartElementName, EndElementNameIsNotSpecified}","parent":null,"children":[{"krate":0,"index":1330},{"krate":0,"index":1333},{"krate":0,"index":1335},{"krate":0,"index":1337},{"krate":0,"index":1339}],"decl_id":null,"docs":" An error which may be returned by `XmlWriter` when writing XML events.\n","sig":null,"attributes":[{"value":"/ An error which may be returned by `XmlWriter` when writing XML events.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/emitter.rs","byte_start":147508,"byte_end":147582,"line_start":17,"line_end":17,"column_start":1,"column_end":75}}]},{"kind":"Type","id":{"krate":0,"index":704},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/emitter.rs","byte_start":149461,"byte_end":149467,"line_start":75,"line_end":75,"column_start":10,"column_end":16},"name":"Result","qualname":"::writer::emitter::Result","value":"result::Result<T, EmitterError>","parent":null,"children":[],"decl_id":null,"docs":" A result type yielded by `XmlWriter`.\n","sig":null,"attributes":[{"value":"/ A result type yielded by `XmlWriter`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/emitter.rs","byte_start":149410,"byte_end":149451,"line_start":74,"line_end":74,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1361},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":161429,"byte_end":161442,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"EmitterConfig","qualname":"::writer::config::EmitterConfig","value":"EmitterConfig { line_separator, indent_string, perform_indent, perform_escaping, write_document_declaration, normalize_empty_elements, cdata_to_characters, keep_element_names_stack, autopad_comments, pad_self_closing }","parent":null,"children":[{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1371}],"decl_id":null,"docs":" Emitter configuration structure.","sig":null,"attributes":[{"value":"/ Emitter configuration structure.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":161249,"byte_end":161285,"line_start":8,"line_end":8,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":161286,"byte_end":161289,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This structure contains various options which control XML document emitter behavior.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":161290,"byte_end":161378,"line_start":10,"line_end":10,"column_start":1,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":1362},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":161539,"byte_end":161553,"line_start":14,"line_end":14,"column_start":9,"column_end":23},"name":"line_separator","qualname":"::writer::config::EmitterConfig::line_separator","value":"std::borrow::Cow<'static, str>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Line separator used to separate lines in formatted output. Default is `\"\\n\"`.\n","sig":null,"attributes":[{"value":"/ Line separator used to separate lines in formatted output. Default is `\"\\n\"`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":161449,"byte_end":161530,"line_start":13,"line_end":13,"column_start":5,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":1363},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":161694,"byte_end":161707,"line_start":18,"line_end":18,"column_start":9,"column_end":22},"name":"indent_string","qualname":"::writer::config::EmitterConfig::indent_string","value":"std::borrow::Cow<'static, str>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" A string which will be used for a single level of indentation. Default is `\"  \"`\n (two spaces).\n","sig":null,"attributes":[{"value":"/ A string which will be used for a single level of indentation. Default is `\"  \"`","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":161579,"byte_end":161663,"line_start":16,"line_end":16,"column_start":5,"column_end":89}},{"value":"/ (two spaces).","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":161668,"byte_end":161685,"line_start":17,"line_end":17,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1364},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":162305,"byte_end":162319,"line_start":29,"line_end":29,"column_start":9,"column_end":23},"name":"perform_indent","qualname":"::writer::config::EmitterConfig::perform_indent","value":"bool","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Whether or not the emitted document should be indented. Default is false.","sig":null,"attributes":[{"value":"/ Whether or not the emitted document should be indented. Default is false.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":161733,"byte_end":161810,"line_start":20,"line_end":20,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":161815,"byte_end":161818,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ The emitter is capable to perform automatic indentation of the emitted XML document.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":161823,"byte_end":161911,"line_start":22,"line_end":22,"column_start":5,"column_end":93}},{"value":"/ It is done in stream-like fashion and does not require the knowledge of the whole","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":161916,"byte_end":162001,"line_start":23,"line_end":23,"column_start":5,"column_end":90}},{"value":"/ document in advance.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":162006,"byte_end":162030,"line_start":24,"line_end":24,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":162035,"byte_end":162038,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ Sometimes, however, automatic indentation is undesirable, e.g. when you want to keep","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":162043,"byte_end":162131,"line_start":26,"line_end":26,"column_start":5,"column_end":93}},{"value":"/ existing layout when processing an existing XML document. Also the indentiation algorithm","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":162136,"byte_end":162229,"line_start":27,"line_end":27,"column_start":5,"column_end":98}},{"value":"/ is not thoroughly tested. Hence by default it is disabled.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":162234,"byte_end":162296,"line_start":28,"line_end":28,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":1365},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":162908,"byte_end":162924,"line_start":40,"line_end":40,"column_start":9,"column_end":25},"name":"perform_escaping","qualname":"::writer::config::EmitterConfig::perform_escaping","value":"bool","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Whether or not characters in output events will be escaped. Default is true.","sig":null,"attributes":[{"value":"/ Whether or not characters in output events will be escaped. Default is true.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":162332,"byte_end":162412,"line_start":31,"line_end":31,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":162417,"byte_end":162420,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ The emitter can automatically escape characters which can't appear in PCDATA sections","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":162425,"byte_end":162514,"line_start":33,"line_end":33,"column_start":5,"column_end":94}},{"value":"/ or element attributes of an XML document, like `<` or `\"` (in attributes). This may","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":162519,"byte_end":162606,"line_start":34,"line_end":34,"column_start":5,"column_end":92}},{"value":"/ introduce some overhead because then every corresponding piece of character data","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":162611,"byte_end":162695,"line_start":35,"line_end":35,"column_start":5,"column_end":89}},{"value":"/ should be scanned for invalid characters.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":162700,"byte_end":162745,"line_start":36,"line_end":36,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":162750,"byte_end":162753,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ If this option is disabled, the XML writer may produce non-well-formed documents, so","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":162758,"byte_end":162846,"line_start":38,"line_end":38,"column_start":5,"column_end":93}},{"value":"/ use `false` value for this option with care.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":162851,"byte_end":162899,"line_start":39,"line_end":39,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":1366},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":163244,"byte_end":163270,"line_start":47,"line_end":47,"column_start":9,"column_end":35},"name":"write_document_declaration","qualname":"::writer::config::EmitterConfig::write_document_declaration","value":"bool","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Whether or not to write XML document declaration at the beginning of a document.\n Default is true.","sig":null,"attributes":[{"value":"/ Whether or not to write XML document declaration at the beginning of a document.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":162937,"byte_end":163021,"line_start":42,"line_end":42,"column_start":5,"column_end":89}},{"value":"/ Default is true.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":163026,"byte_end":163046,"line_start":43,"line_end":43,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":163051,"byte_end":163054,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This option controls whether the document declaration should be emitted automatically","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":163059,"byte_end":163148,"line_start":45,"line_end":45,"column_start":5,"column_end":94}},{"value":"/ before a root element is written if it was not emitted explicitly by the user.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":163153,"byte_end":163235,"line_start":46,"line_end":46,"column_start":5,"column_end":87}}]},{"kind":"Field","id":{"krate":0,"index":1367},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":163525,"byte_end":163549,"line_start":53,"line_end":53,"column_start":9,"column_end":33},"name":"normalize_empty_elements","qualname":"::writer::config::EmitterConfig::normalize_empty_elements","value":"bool","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Whether or not to convert elements with empty content to empty elements. Default is true.","sig":null,"attributes":[{"value":"/ Whether or not to convert elements with empty content to empty elements. Default is true.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":163283,"byte_end":163376,"line_start":49,"line_end":49,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":163381,"byte_end":163384,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This option allows turning elements like `<a></a>` (an element with empty content)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":163389,"byte_end":163475,"line_start":51,"line_end":51,"column_start":5,"column_end":91}},{"value":"/ into `<a />` (an empty element).","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":163480,"byte_end":163516,"line_start":52,"line_end":52,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1368},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":163925,"byte_end":163944,"line_start":60,"line_end":60,"column_start":9,"column_end":28},"name":"cdata_to_characters","qualname":"::writer::config::EmitterConfig::cdata_to_characters","value":"bool","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Whether or not to emit CDATA events as plain characters. Default is false.","sig":null,"attributes":[{"value":"/ Whether or not to emit CDATA events as plain characters. Default is false.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":163562,"byte_end":163640,"line_start":55,"line_end":55,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":163645,"byte_end":163648,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This option forces the emitter to convert CDATA events into regular character events,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":163653,"byte_end":163742,"line_start":57,"line_end":57,"column_start":5,"column_end":94}},{"value":"/ performing all the necessary escaping beforehand. This may be occasionally useful","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":163747,"byte_end":163832,"line_start":58,"line_end":58,"column_start":5,"column_end":90}},{"value":"/ for feeding the document into incorrect parsers which do not support CDATA.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":163837,"byte_end":163916,"line_start":59,"line_end":59,"column_start":5,"column_end":84}}]},{"kind":"Field","id":{"krate":0,"index":1369},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":164281,"byte_end":164305,"line_start":67,"line_end":67,"column_start":9,"column_end":33},"name":"keep_element_names_stack","qualname":"::writer::config::EmitterConfig::keep_element_names_stack","value":"bool","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Whether or not to keep element names to support `EndElement` events without explicit names.\n Default is true.","sig":null,"attributes":[{"value":"/ Whether or not to keep element names to support `EndElement` events without explicit names.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":163957,"byte_end":164052,"line_start":62,"line_end":62,"column_start":5,"column_end":100}},{"value":"/ Default is true.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":164057,"byte_end":164077,"line_start":63,"line_end":63,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":164082,"byte_end":164085,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This option makes the emitter to keep names of written elements in order to allow","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":164090,"byte_end":164175,"line_start":65,"line_end":65,"column_start":5,"column_end":90}},{"value":"/ omitting names when writing closing element tags. This could incur some memory overhead.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":164180,"byte_end":164272,"line_start":66,"line_end":66,"column_start":5,"column_end":97}}]},{"kind":"Field","id":{"krate":0,"index":1370},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":164682,"byte_end":164698,"line_start":75,"line_end":75,"column_start":9,"column_end":25},"name":"autopad_comments","qualname":"::writer::config::EmitterConfig::autopad_comments","value":"bool","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Whether or not to automatically insert leading and trailing spaces in emitted comments,\n if necessary. Default is true.","sig":null,"attributes":[{"value":"/ Whether or not to automatically insert leading and trailing spaces in emitted comments,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":164318,"byte_end":164409,"line_start":69,"line_end":69,"column_start":5,"column_end":96}},{"value":"/ if necessary. Default is true.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":164414,"byte_end":164448,"line_start":70,"line_end":70,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":164453,"byte_end":164456,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This is a convenience option in order for the user not to append spaces before and after","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":164461,"byte_end":164553,"line_start":72,"line_end":72,"column_start":5,"column_end":97}},{"value":"/ comments text in order to get more pretty comments: `<!-- something -->` instead of","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":164558,"byte_end":164645,"line_start":73,"line_end":73,"column_start":5,"column_end":92}},{"value":"/ `<!--something-->`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":164650,"byte_end":164673,"line_start":74,"line_end":74,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":1371},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":165195,"byte_end":165211,"line_start":84,"line_end":84,"column_start":9,"column_end":25},"name":"pad_self_closing","qualname":"::writer::config::EmitterConfig::pad_self_closing","value":"bool","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Whether or not to automatically insert spaces before the trailing `/>` in self-closing\n elements. Default is true.","sig":null,"attributes":[{"value":"/ Whether or not to automatically insert spaces before the trailing `/>` in self-closing","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":164711,"byte_end":164801,"line_start":77,"line_end":77,"column_start":5,"column_end":95}},{"value":"/ elements. Default is true.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":164806,"byte_end":164836,"line_start":78,"line_end":78,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":164841,"byte_end":164844,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This option is only meaningful if `normalize_empty_elements` is true. For example, the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":164849,"byte_end":164939,"line_start":80,"line_end":80,"column_start":5,"column_end":95}},{"value":"/ element `<a></a>` would be unaffected. When `normalize_empty_elements` is true, then when","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":164944,"byte_end":165037,"line_start":81,"line_end":81,"column_start":5,"column_end":98}},{"value":"/ this option is also true, the same element would appear `<a />`. If this option is false,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":165042,"byte_end":165135,"line_start":82,"line_end":82,"column_start":5,"column_end":98}},{"value":"/ then the same element would appear `<a/>`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":165140,"byte_end":165186,"line_start":83,"line_end":83,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":165645,"byte_end":165648,"line_start":101,"line_end":101,"column_start":12,"column_end":15},"name":"new","qualname":"<EmitterConfig>::new","value":"fn () -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Creates an emitter configuration with default values.","sig":null,"attributes":[{"value":"/ Creates an emitter configuration with default values.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":165247,"byte_end":165304,"line_start":88,"line_end":88,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":165309,"byte_end":165312,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ You can tweak default options with builder-like pattern:","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":165317,"byte_end":165377,"line_start":90,"line_end":90,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":165382,"byte_end":165385,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":165390,"byte_end":165401,"line_start":92,"line_end":92,"column_start":5,"column_end":16}},{"value":"/ use xml::writer::EmitterConfig;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":165406,"byte_end":165441,"line_start":93,"line_end":93,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":165446,"byte_end":165449,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let config = EmitterConfig::new()","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":165454,"byte_end":165491,"line_start":95,"line_end":95,"column_start":5,"column_end":42}},{"value":"/     .line_separator(\"\\r\\n\")","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":165496,"byte_end":165527,"line_start":96,"line_end":96,"column_start":5,"column_end":36}},{"value":"/     .perform_indent(true)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":165532,"byte_end":165561,"line_start":97,"line_end":97,"column_start":5,"column_end":34}},{"value":"/     .normalize_empty_elements(false);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":165566,"byte_end":165607,"line_start":98,"line_end":98,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":165612,"byte_end":165619,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":165624,"byte_end":165633,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":771},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":166774,"byte_end":166787,"line_start":135,"line_end":135,"column_start":12,"column_end":25},"name":"create_writer","qualname":"<EmitterConfig>::create_writer","value":"fn <W> (self, sink: W) -> EventWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates an XML writer with this configuration.","sig":null,"attributes":[{"value":"/ Creates an XML writer with this configuration.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":166127,"byte_end":166177,"line_start":116,"line_end":116,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":166182,"byte_end":166185,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This is a convenience method for configuring and creating a writer at the same time:","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":166190,"byte_end":166278,"line_start":118,"line_end":118,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":166283,"byte_end":166286,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":166291,"byte_end":166302,"line_start":120,"line_end":120,"column_start":5,"column_end":16}},{"value":"/ use xml::writer::EmitterConfig;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":166307,"byte_end":166342,"line_start":121,"line_end":121,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":166347,"byte_end":166350,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let mut target: Vec<u8> = Vec::new();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":166355,"byte_end":166396,"line_start":123,"line_end":123,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":166401,"byte_end":166404,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let writer = EmitterConfig::new()","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":166409,"byte_end":166446,"line_start":125,"line_end":125,"column_start":5,"column_end":42}},{"value":"/     .line_separator(\"\\r\\n\")","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":166451,"byte_end":166482,"line_start":126,"line_end":126,"column_start":5,"column_end":36}},{"value":"/     .perform_indent(true)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":166487,"byte_end":166516,"line_start":127,"line_end":127,"column_start":5,"column_end":34}},{"value":"/     .normalize_empty_elements(false)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":166521,"byte_end":166561,"line_start":128,"line_end":128,"column_start":5,"column_end":45}},{"value":"/     .create_writer(&mut target);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":166566,"byte_end":166602,"line_start":129,"line_end":129,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":166607,"byte_end":166614,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":166619,"byte_end":166622,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This method is exactly equivalent to calling `EventWriter::new_with_config()` with","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":166627,"byte_end":166713,"line_start":132,"line_end":132,"column_start":5,"column_end":91}},{"value":"/ this configuration object.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":166718,"byte_end":166748,"line_start":133,"line_end":133,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":166753,"byte_end":166762,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1384},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":167044,"byte_end":167058,"line_start":148,"line_end":148,"column_start":5,"column_end":19},"name":"line_separator","qualname":"<EmitterConfig>::line_separator","value":"fn <T> (mut self, value: T) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/macros.rs","byte_start":747,"byte_end":822,"line_start":8,"line_end":8,"column_start":13,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1387},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":167088,"byte_end":167101,"line_start":149,"line_end":149,"column_start":5,"column_end":18},"name":"indent_string","qualname":"<EmitterConfig>::indent_string","value":"fn <T> (mut self, value: T) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/macros.rs","byte_start":747,"byte_end":822,"line_start":8,"line_end":8,"column_start":13,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1390},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":167131,"byte_end":167145,"line_start":150,"line_end":150,"column_start":5,"column_end":19},"name":"perform_indent","qualname":"<EmitterConfig>::perform_indent","value":"fn (mut self, value: bool) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/macros.rs","byte_start":1074,"byte_end":1149,"line_start":17,"line_end":17,"column_start":13,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1392},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":167161,"byte_end":167187,"line_start":151,"line_end":151,"column_start":5,"column_end":31},"name":"write_document_declaration","qualname":"<EmitterConfig>::write_document_declaration","value":"fn (mut self, value: bool) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/macros.rs","byte_start":1074,"byte_end":1149,"line_start":17,"line_end":17,"column_start":13,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1394},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":167203,"byte_end":167227,"line_start":152,"line_end":152,"column_start":5,"column_end":29},"name":"normalize_empty_elements","qualname":"<EmitterConfig>::normalize_empty_elements","value":"fn (mut self, value: bool) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/macros.rs","byte_start":1074,"byte_end":1149,"line_start":17,"line_end":17,"column_start":13,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1396},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":167243,"byte_end":167262,"line_start":153,"line_end":153,"column_start":5,"column_end":24},"name":"cdata_to_characters","qualname":"<EmitterConfig>::cdata_to_characters","value":"fn (mut self, value: bool) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/macros.rs","byte_start":1074,"byte_end":1149,"line_start":17,"line_end":17,"column_start":13,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1398},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":167278,"byte_end":167302,"line_start":154,"line_end":154,"column_start":5,"column_end":29},"name":"keep_element_names_stack","qualname":"<EmitterConfig>::keep_element_names_stack","value":"fn (mut self, value: bool) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/macros.rs","byte_start":1074,"byte_end":1149,"line_start":17,"line_end":17,"column_start":13,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1400},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":167318,"byte_end":167334,"line_start":155,"line_end":155,"column_start":5,"column_end":21},"name":"autopad_comments","qualname":"<EmitterConfig>::autopad_comments","value":"fn (mut self, value: bool) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/macros.rs","byte_start":1074,"byte_end":1149,"line_start":17,"line_end":17,"column_start":13,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1402},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":167350,"byte_end":167366,"line_start":156,"line_end":156,"column_start":5,"column_end":21},"name":"pad_self_closing","qualname":"<EmitterConfig>::pad_self_closing","value":"fn (mut self, value: bool) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/macros.rs","byte_start":1074,"byte_end":1149,"line_start":17,"line_end":17,"column_start":13,"column_end":88}}]},{"kind":"Mod","id":{"krate":0,"index":775},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"events","qualname":"::writer::events","value":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","parent":null,"children":[{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":1403},{"krate":0,"index":1427},{"krate":0,"index":783},{"krate":0,"index":792},{"krate":0,"index":795},{"krate":0,"index":798},{"krate":0,"index":802},{"krate":0,"index":805},{"krate":0,"index":810},{"krate":0,"index":819}],"decl_id":null,"docs":" Contains `XmlEvent` datatype, instances of which are consumed by the writer.\n","sig":null,"attributes":[{"value":"! Contains `XmlEvent` datatype, instances of which are consumed by the writer.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":167381,"byte_end":167461,"line_start":1,"line_end":1,"column_start":1,"column_end":81}}]},{"kind":"StructVariant","id":{"krate":0,"index":1405},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":168103,"byte_end":168116,"line_start":21,"line_end":21,"column_start":5,"column_end":18},"name":"StartDocument","qualname":"::writer::events::XmlEvent::StartDocument","value":"XmlEvent::StartDocument { version, encoding, standalone }","parent":{"krate":0,"index":1403},"children":[],"decl_id":null,"docs":" Corresponds to XML document declaration.","sig":null,"attributes":[{"value":"/ Corresponds to XML document declaration.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":167795,"byte_end":167839,"line_start":16,"line_end":16,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":167844,"byte_end":167847,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ This event should always be written before any other event. If it is not written","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":167852,"byte_end":167936,"line_start":18,"line_end":18,"column_start":5,"column_end":89}},{"value":"/ at all, a default XML declaration will be outputted if the corresponding option","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":167941,"byte_end":168024,"line_start":19,"line_end":19,"column_start":5,"column_end":88}},{"value":"/ is set in the configuration. Otherwise an error will be returned.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":168029,"byte_end":168098,"line_start":20,"line_end":20,"column_start":5,"column_end":74}}]},{"kind":"StructVariant","id":{"krate":0,"index":1409},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":168535,"byte_end":168556,"line_start":39,"line_end":39,"column_start":5,"column_end":26},"name":"ProcessingInstruction","qualname":"::writer::events::XmlEvent::ProcessingInstruction","value":"XmlEvent::ProcessingInstruction { name, data }","parent":{"krate":0,"index":1403},"children":[],"decl_id":null,"docs":" Denotes an XML processing instruction.\n","sig":null,"attributes":[{"value":"/ Denotes an XML processing instruction.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":168488,"byte_end":168530,"line_start":38,"line_end":38,"column_start":5,"column_end":47}}]},{"kind":"StructVariant","id":{"krate":0,"index":1412},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":168759,"byte_end":168771,"line_start":48,"line_end":48,"column_start":5,"column_end":17},"name":"StartElement","qualname":"::writer::events::XmlEvent::StartElement","value":"XmlEvent::StartElement { name, attributes, namespace }","parent":{"krate":0,"index":1403},"children":[],"decl_id":null,"docs":" Denotes a beginning of an XML element.\n","sig":null,"attributes":[{"value":"/ Denotes a beginning of an XML element.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":168712,"byte_end":168754,"line_start":47,"line_end":47,"column_start":5,"column_end":47}}]},{"kind":"StructVariant","id":{"krate":0,"index":1416},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":169610,"byte_end":169620,"line_start":68,"line_end":68,"column_start":5,"column_end":15},"name":"EndElement","qualname":"::writer::events::XmlEvent::EndElement","value":"XmlEvent::EndElement { name }","parent":{"krate":0,"index":1403},"children":[],"decl_id":null,"docs":" Denotes an end of an XML element.\n","sig":null,"attributes":[{"value":"/ Denotes an end of an XML element.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":169568,"byte_end":169605,"line_start":67,"line_end":67,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1418},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":170106,"byte_end":170111,"line_start":81,"line_end":81,"column_start":5,"column_end":10},"name":"CData","qualname":"::writer::events::XmlEvent::CData","value":"XmlEvent::CData(&'a str)","parent":{"krate":0,"index":1403},"children":[],"decl_id":null,"docs":" Denotes CDATA content.","sig":null,"attributes":[{"value":"/ Denotes CDATA content.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":169944,"byte_end":169970,"line_start":77,"line_end":77,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":169975,"byte_end":169978,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ This event contains unparsed data, and no escaping will be performed when writing it","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":169983,"byte_end":170071,"line_start":79,"line_end":79,"column_start":5,"column_end":93}},{"value":"/ to the output stream.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":170076,"byte_end":170101,"line_start":80,"line_end":80,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1421},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":170277,"byte_end":170284,"line_start":87,"line_end":87,"column_start":5,"column_end":12},"name":"Comment","qualname":"::writer::events::XmlEvent::Comment","value":"XmlEvent::Comment(&'a str)","parent":{"krate":0,"index":1403},"children":[],"decl_id":null,"docs":" Denotes a comment.","sig":null,"attributes":[{"value":"/ Denotes a comment.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":170127,"byte_end":170149,"line_start":83,"line_end":83,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":170154,"byte_end":170157,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ The string will be checked for invalid sequences and error will be returned by the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":170162,"byte_end":170248,"line_start":85,"line_end":85,"column_start":5,"column_end":91}},{"value":"/ write operation","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":170253,"byte_end":170272,"line_start":86,"line_end":86,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1424},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":170531,"byte_end":170541,"line_start":93,"line_end":93,"column_start":5,"column_end":15},"name":"Characters","qualname":"::writer::events::XmlEvent::Characters","value":"XmlEvent::Characters(&'a str)","parent":{"krate":0,"index":1403},"children":[],"decl_id":null,"docs":" Denotes character data outside of tags.","sig":null,"attributes":[{"value":"/ Denotes character data outside of tags.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":170300,"byte_end":170343,"line_start":89,"line_end":89,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":170348,"byte_end":170351,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Contents of this event will be escaped if `perform_escaping` option is enabled,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":170356,"byte_end":170439,"line_start":91,"line_end":91,"column_start":5,"column_end":88}},{"value":"/ that is, every character invalid for PCDATA will appear as a character entity.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":170444,"byte_end":170526,"line_start":92,"line_end":92,"column_start":5,"column_end":87}}]},{"kind":"Enum","id":{"krate":0,"index":1403},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":167776,"byte_end":167784,"line_start":15,"line_end":15,"column_start":10,"column_end":18},"name":"XmlEvent","qualname":"::writer::events::XmlEvent","value":"XmlEvent::{StartDocument, ProcessingInstruction, StartElement, EndElement, CData, Comment, Characters}","parent":null,"children":[{"krate":0,"index":1405},{"krate":0,"index":1409},{"krate":0,"index":1412},{"krate":0,"index":1416},{"krate":0,"index":1418},{"krate":0,"index":1421},{"krate":0,"index":1424}],"decl_id":null,"docs":" A part of an XML output stream.","sig":null,"attributes":[{"value":"/ A part of an XML output stream.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":167595,"byte_end":167630,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":167631,"byte_end":167634,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Objects of this enum are consumed by `EventWriter`. They correspond to different parts of","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":167635,"byte_end":167728,"line_start":12,"line_end":12,"column_start":1,"column_end":94}},{"value":"/ an XML document.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":167729,"byte_end":167749,"line_start":13,"line_end":13,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":785},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":170665,"byte_end":170687,"line_start":99,"line_end":99,"column_start":12,"column_end":34},"name":"processing_instruction","qualname":"<XmlEvent>::processing_instruction","value":"fn (name: &'a str, data: Option<&'a str>) -> XmlEvent<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns an writer event for a processing instruction.\n","sig":null,"attributes":[{"value":"/ Returns an writer event for a processing instruction.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":170582,"byte_end":170639,"line_start":97,"line_end":97,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":170644,"byte_end":170653,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":171007,"byte_end":171020,"line_start":108,"line_end":108,"column_start":12,"column_end":25},"name":"start_element","qualname":"<XmlEvent>::start_element","value":"fn <S> (name: S) -> StartElementBuilder<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a builder for a starting element.","sig":null,"attributes":[{"value":"/ Returns a builder for a starting element.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":170822,"byte_end":170867,"line_start":103,"line_end":103,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":170872,"byte_end":170875,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ This builder can then be used to tweak attributes and namespace starting at","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":170880,"byte_end":170959,"line_start":105,"line_end":105,"column_start":5,"column_end":84}},{"value":"/ this element.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":170964,"byte_end":170981,"line_start":106,"line_end":106,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":170986,"byte_end":170995,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":171605,"byte_end":171616,"line_start":122,"line_end":122,"column_start":12,"column_end":23},"name":"end_element","qualname":"<XmlEvent>::end_element","value":"fn () -> EndElementBuilder<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a builder for an closing element.","sig":null,"attributes":[{"value":"/ Returns a builder for an closing element.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":171253,"byte_end":171298,"line_start":116,"line_end":116,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":171303,"byte_end":171306,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This method, unline `start_element()`, does not accept a name because by default","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":171311,"byte_end":171395,"line_start":118,"line_end":118,"column_start":5,"column_end":89}},{"value":"/ the writer is able to determine it automatically. However, when this functionality","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":171400,"byte_end":171486,"line_start":119,"line_end":119,"column_start":5,"column_end":91}},{"value":"/ is disabled, it is possible to specify the name with `name()` method on the builder.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":171491,"byte_end":171579,"line_start":120,"line_end":120,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":171584,"byte_end":171593,"line_start":121,"line_end":121,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":171894,"byte_end":171899,"line_start":131,"line_end":131,"column_start":12,"column_end":17},"name":"cdata","qualname":"<XmlEvent>::cdata","value":"fn (data: &'a str) -> XmlEvent<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a CDATA event.","sig":null,"attributes":[{"value":"/ Returns a CDATA event.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":171698,"byte_end":171724,"line_start":126,"line_end":126,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":171729,"byte_end":171732,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Naturally, the provided string won't be escaped, except for closing CDATA token `]]>`","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":171737,"byte_end":171826,"line_start":128,"line_end":128,"column_start":5,"column_end":94}},{"value":"/ (depending on the configuration).","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":171831,"byte_end":171868,"line_start":129,"line_end":129,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":171873,"byte_end":171882,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":790},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":172134,"byte_end":172144,"line_start":137,"line_end":137,"column_start":12,"column_end":22},"name":"characters","qualname":"<XmlEvent>::characters","value":"fn (data: &'a str) -> XmlEvent<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a regular characters (PCDATA) event.","sig":null,"attributes":[{"value":"/ Returns a regular characters (PCDATA) event.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":171962,"byte_end":172010,"line_start":133,"line_end":133,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":172015,"byte_end":172018,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ All offending symbols, in particular, `&` and `<`, will be escaped by the writer.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":172023,"byte_end":172108,"line_start":135,"line_end":135,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":172113,"byte_end":172122,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":172266,"byte_end":172273,"line_start":141,"line_end":141,"column_start":12,"column_end":19},"name":"comment","qualname":"<XmlEvent>::comment","value":"fn (data: &'a str) -> XmlEvent<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a comment event.\n","sig":null,"attributes":[{"value":"/ Returns a comment event.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":172212,"byte_end":172240,"line_start":139,"line_end":139,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":172245,"byte_end":172254,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":795},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":172474,"byte_end":172491,"line_start":149,"line_end":149,"column_start":12,"column_end":29},"name":"EndElementBuilder","qualname":"::writer::events::EndElementBuilder","value":"EndElementBuilder {  }","parent":null,"children":[{"krate":0,"index":797}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":173013,"byte_end":173017,"line_start":162,"line_end":162,"column_start":12,"column_end":16},"name":"name","qualname":"<EndElementBuilder>::name","value":"fn <N> (mut self, name: N) -> EndElementBuilder<'a>","parent":null,"children":[],"decl_id":null,"docs":" Sets the name of this closing element.","sig":null,"attributes":[{"value":"/ Sets the name of this closing element.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":172608,"byte_end":172650,"line_start":155,"line_end":155,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":172655,"byte_end":172658,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Usually the writer is able to determine closing element names automatically. If","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":172663,"byte_end":172746,"line_start":157,"line_end":157,"column_start":5,"column_end":88}},{"value":"/ this functionality is enabled (by default it is), then this name is checked for correctness.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":172751,"byte_end":172847,"line_start":158,"line_end":158,"column_start":5,"column_end":101}},{"value":"/ It is possible, however, to disable such behavior; then the user must ensure that","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":172852,"byte_end":172937,"line_start":159,"line_end":159,"column_start":5,"column_end":90}},{"value":"/ closing element name is correct manually.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":172942,"byte_end":172987,"line_start":160,"line_end":160,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":172992,"byte_end":173001,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":805},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":173374,"byte_end":173393,"line_start":175,"line_end":175,"column_start":12,"column_end":31},"name":"StartElementBuilder","qualname":"::writer::events::StartElementBuilder","value":"StartElementBuilder {  }","parent":null,"children":[{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809}],"decl_id":null,"docs":" A builder for a starting element event.\n","sig":null,"attributes":[{"value":"/ A builder for a starting element event.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":173319,"byte_end":173362,"line_start":174,"line_end":174,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":174155,"byte_end":174159,"line_start":193,"line_end":193,"column_start":12,"column_end":16},"name":"attr","qualname":"<StartElementBuilder>::attr","value":"fn <N> (mut self, name: N, value: &'a str) -> StartElementBuilder<'a>","parent":null,"children":[],"decl_id":null,"docs":" Sets an attribute value of this element to the given string.","sig":null,"attributes":[{"value":"/ Sets an attribute value of this element to the given string.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":173523,"byte_end":173587,"line_start":182,"line_end":182,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":173592,"byte_end":173595,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ This method can be used to add attributes to the starting element. Name is a qualified","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":173600,"byte_end":173690,"line_start":184,"line_end":184,"column_start":5,"column_end":95}},{"value":"/ name; its namespace is ignored, but its prefix is checked for correctness, that is,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":173695,"byte_end":173782,"line_start":185,"line_end":185,"column_start":5,"column_end":92}},{"value":"/ it is checked that the prefix is bound to some namespace in the current context.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":173787,"byte_end":173871,"line_start":186,"line_end":186,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":173876,"byte_end":173879,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Currently attributes are not checked for duplicates. Note that duplicate attributes","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":173884,"byte_end":173971,"line_start":188,"line_end":188,"column_start":5,"column_end":92}},{"value":"/ are a violation of XML document well-formedness.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":173976,"byte_end":174028,"line_start":189,"line_end":189,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":174033,"byte_end":174036,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ The writer checks that you don't specify reserved prefix names, for example `xmlns`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":174041,"byte_end":174129,"line_start":191,"line_end":191,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":174134,"byte_end":174143,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":175058,"byte_end":175060,"line_start":213,"line_end":213,"column_start":12,"column_end":14},"name":"ns","qualname":"<StartElementBuilder>::ns","value":"fn <S1, S2> (mut self, prefix: S1, uri: S2) -> StartElementBuilder<'a>","parent":null,"children":[],"decl_id":null,"docs":" Adds a namespace to the current namespace context.","sig":null,"attributes":[{"value":"/ Adds a namespace to the current namespace context.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":174353,"byte_end":174407,"line_start":200,"line_end":200,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":174412,"byte_end":174415,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ If no namespace URI was bound to the provided prefix at this point of the document,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":174420,"byte_end":174507,"line_start":202,"line_end":202,"column_start":5,"column_end":92}},{"value":"/ then the mapping from the prefix to the provided namespace URI will be written as","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":174512,"byte_end":174597,"line_start":203,"line_end":203,"column_start":5,"column_end":90}},{"value":"/ a part of this element attribute set.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":174602,"byte_end":174643,"line_start":204,"line_end":204,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":174648,"byte_end":174651,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ If the same namespace URI was bound to the provided prefix at this point of the document,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":174656,"byte_end":174749,"line_start":206,"line_end":206,"column_start":5,"column_end":98}},{"value":"/ then no namespace attributes will be emitted.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":174754,"byte_end":174803,"line_start":207,"line_end":207,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":174808,"byte_end":174811,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ If some other namespace URI was bound to the provided prefix at this point of the document,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":174816,"byte_end":174911,"line_start":209,"line_end":209,"column_start":5,"column_end":100}},{"value":"/ then another binding will be added as a part of this element attribute set, shadowing","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":174916,"byte_end":175005,"line_start":210,"line_end":210,"column_start":5,"column_end":94}},{"value":"/ the outer binding.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":175010,"byte_end":175032,"line_start":211,"line_end":211,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":175037,"byte_end":175046,"line_start":212,"line_end":212,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":817},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":175434,"byte_end":175444,"line_start":224,"line_end":224,"column_start":12,"column_end":22},"name":"default_ns","qualname":"<StartElementBuilder>::default_ns","value":"fn <S> (mut self, uri: S) -> StartElementBuilder<'a>","parent":null,"children":[],"decl_id":null,"docs":" Adds a default namespace mapping to the current namespace context.","sig":null,"attributes":[{"value":"/ Adds a default namespace mapping to the current namespace context.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":175247,"byte_end":175317,"line_start":220,"line_end":220,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":175322,"byte_end":175325,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Same rules as for `ns()` are also valid for the default namespace mapping.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":175330,"byte_end":175408,"line_start":222,"line_end":222,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":175413,"byte_end":175422,"line_start":223,"line_end":223,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":822},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":143877,"byte_end":143888,"line_start":21,"line_end":21,"column_start":12,"column_end":23},"name":"EventWriter","qualname":"::writer::EventWriter","value":"EventWriter {  }","parent":null,"children":[{"krate":0,"index":824},{"krate":0,"index":825}],"decl_id":null,"docs":" A wrapper around an `std::io::Write` instance which emits XML document according to provided\n events.\n","sig":null,"attributes":[{"value":"/ A wrapper around an `std::io::Write` instance which emits XML document according to provided","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":143757,"byte_end":143853,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ events.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":143854,"byte_end":143865,"line_start":20,"line_end":20,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":144101,"byte_end":144104,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<EventWriter<W>>::new","value":"fn (sink: W) -> EventWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `EventWriter` out of an `std::io::Write` instance using the default\n configuration.\n","sig":null,"attributes":[{"value":"/ Creates a new `EventWriter` out of an `std::io::Write` instance using the default","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":143967,"byte_end":144052,"line_start":27,"line_end":27,"column_start":5,"column_end":90}},{"value":"/ configuration.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":144057,"byte_end":144075,"line_start":28,"line_end":28,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":144080,"byte_end":144089,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":144345,"byte_end":144360,"line_start":37,"line_end":37,"column_start":12,"column_end":27},"name":"new_with_config","qualname":"<EventWriter<W>>::new_with_config","value":"fn (sink: W, config: EmitterConfig) -> EventWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `EventWriter` out of an `std::io::Write` instance using the provided\n configuration.\n","sig":null,"attributes":[{"value":"/ Creates a new `EventWriter` out of an `std::io::Write` instance using the provided","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":144210,"byte_end":144296,"line_start":34,"line_end":34,"column_start":5,"column_end":91}},{"value":"/ configuration.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":144301,"byte_end":144319,"line_start":35,"line_end":35,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":144324,"byte_end":144333,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":144982,"byte_end":144987,"line_start":51,"line_end":51,"column_start":12,"column_end":17},"name":"write","qualname":"<EventWriter<W>>::write","value":"fn <'a, E> (&mut self, event: E) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes the next piece of XML document according to the provided event.","sig":null,"attributes":[{"value":"/ Writes the next piece of XML document according to the provided event.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":144516,"byte_end":144590,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":144595,"byte_end":144598,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Note that output data may not exactly correspond to the written event because","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":144603,"byte_end":144684,"line_start":46,"line_end":46,"column_start":5,"column_end":86}},{"value":"/ of various configuration options. For example, `XmlEvent::EndElement` may","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":144689,"byte_end":144766,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ correspond to a separate closing element or it may cause writing an empty element.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":144771,"byte_end":144857,"line_start":48,"line_end":48,"column_start":5,"column_end":91}},{"value":"/ Another example is that `XmlEvent::CData` may be represented as characters in","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":144862,"byte_end":144943,"line_start":49,"line_end":49,"column_start":5,"column_end":86}},{"value":"/ the output stream.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":144948,"byte_end":144970,"line_start":50,"line_end":50,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":146670,"byte_end":146679,"line_start":81,"line_end":81,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<EventWriter<W>>::inner_mut","value":"fn (&mut self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying `Writer`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying `Writer`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":146274,"byte_end":146333,"line_start":75,"line_end":75,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":146338,"byte_end":146341,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Note that having a reference to the underlying sink makes it very easy to emit invalid XML","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":146346,"byte_end":146440,"line_start":77,"line_end":77,"column_start":5,"column_end":99}},{"value":"/ documents. Use this method with care. Valid use cases for this method include accessing","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":146445,"byte_end":146536,"line_start":78,"line_end":78,"column_start":5,"column_end":96}},{"value":"/ methods like `Write::flush`, which do not emit new data but rather change the state","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":146541,"byte_end":146628,"line_start":79,"line_end":79,"column_start":5,"column_end":92}},{"value":"/ of the stream itself.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":146633,"byte_end":146658,"line_start":80,"line_end":80,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":147066,"byte_end":147076,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<EventWriter<W>>::into_inner","value":"fn (self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `EventWriter`, returning the underlying writer.","sig":null,"attributes":[{"value":"/ Unwraps this `EventWriter`, returning the underlying writer.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":146737,"byte_end":146801,"line_start":85,"line_end":85,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":146806,"byte_end":146809,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Note that this is a destructive operation: unwrapping a writer and then wrapping","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":146814,"byte_end":146898,"line_start":87,"line_end":87,"column_start":5,"column_end":89}},{"value":"/ it again with `EventWriter::new()` will create a fresh writer whose state will be","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":146903,"byte_end":146988,"line_start":88,"line_end":88,"column_start":5,"column_end":90}},{"value":"/ blank; for example, accumulated namespaces will be reset.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":146993,"byte_end":147054,"line_start":89,"line_end":89,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1431},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/util.rs","byte_start":176005,"byte_end":176018,"line_start":7,"line_end":7,"column_start":5,"column_end":18},"name":"UnexpectedEof","qualname":"::util::CharReadError::UnexpectedEof","value":"CharReadError::UnexpectedEof","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1433},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/util.rs","byte_start":176024,"byte_end":176028,"line_start":8,"line_end":8,"column_start":5,"column_end":9},"name":"Utf8","qualname":"::util::CharReadError::Utf8","value":"CharReadError::Utf8(str::Utf8Error)","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1436},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/util.rs","byte_start":176050,"byte_end":176052,"line_start":9,"line_end":9,"column_start":5,"column_end":7},"name":"Io","qualname":"::util::CharReadError::Io","value":"CharReadError::Io(io::Error)","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1430},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/util.rs","byte_start":175985,"byte_end":175998,"line_start":6,"line_end":6,"column_start":10,"column_end":23},"name":"CharReadError","qualname":"::util::CharReadError","value":"CharReadError::{UnexpectedEof, Utf8, Io}","parent":null,"children":[{"krate":0,"index":1431},{"krate":0,"index":1433},{"krate":0,"index":1436}],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":3776,"byte_end":3780,"line_start":59,"line_end":59,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":16}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":4133,"byte_end":4137,"line_start":70,"line_end":70,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":4278,"byte_end":4282,"line_start":76,"line_end":76,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":4607,"byte_end":4611,"line_start":90,"line_end":90,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":6826,"byte_end":6837,"line_start":160,"line_end":160,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":7542,"byte_end":7551,"line_start":184,"line_end":184,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":7686,"byte_end":7695,"line_start":191,"line_end":191,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":56},{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":9271,"byte_end":9280,"line_start":239,"line_end":239,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":9384,"byte_end":9393,"line_start":246,"line_end":246,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/attribute.rs","byte_start":11781,"byte_end":11790,"line_start":21,"line_end":21,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/attribute.rs","byte_start":11950,"byte_end":11959,"line_start":27,"line_end":27,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/attribute.rs","byte_start":12718,"byte_end":12732,"line_start":56,"line_end":56,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/attribute.rs","byte_start":13250,"byte_end":13264,"line_start":75,"line_end":75,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":14188,"byte_end":14200,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":14928,"byte_end":14940,"line_start":42,"line_end":42,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":15105,"byte_end":15117,"line_start":49,"line_end":49,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":15552,"byte_end":15564,"line_start":64,"line_end":64,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":15839,"byte_end":15849,"line_start":81,"line_end":81,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":16081,"byte_end":16091,"line_start":90,"line_end":90,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/escape.rs","byte_start":18098,"byte_end":18103,"line_start":10,"line_end":10,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/escape.rs","byte_start":18785,"byte_end":18792,"line_start":38,"line_end":38,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/escape.rs","byte_start":19643,"byte_end":19650,"line_start":65,"line_end":65,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":24279,"byte_end":24288,"line_start":71,"line_end":71,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":28189,"byte_end":28203,"line_start":190,"line_end":190,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":33989,"byte_end":34011,"line_start":367,"line_end":367,"column_start":10,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":34221,"byte_end":34243,"line_start":374,"line_end":374,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":35894,"byte_end":35903,"line_start":423,"line_end":423,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":36122,"byte_end":36136,"line_start":431,"line_end":431,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":37489,"byte_end":37502,"line_start":479,"line_end":479,"column_start":41,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/lexer.rs","byte_start":42733,"byte_end":42738,"line_start":59,"line_end":59,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/lexer.rs","byte_start":44085,"byte_end":44090,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/lexer.rs","byte_start":48946,"byte_end":48951,"line_start":229,"line_end":229,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/lexer.rs","byte_start":49097,"byte_end":49102,"line_start":235,"line_end":235,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":323},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":343},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/parser/outside_tag.rs","byte_start":92847,"byte_end":92857,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/parser/inside_processing_instruction.rs","byte_start":98656,"byte_end":98666,"line_start":10,"line_end":10,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/parser/inside_declaration.rs","byte_start":102836,"byte_end":102846,"line_start":12,"line_end":12,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/parser/inside_doctype.rs","byte_start":109924,"byte_end":109934,"line_start":5,"line_end":5,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/parser/inside_opening_tag.rs","byte_start":110406,"byte_end":110416,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/parser/inside_closing_tag_name.rs","byte_start":116248,"byte_end":116258,"line_start":7,"line_end":7,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/parser/inside_comment.rs","byte_start":117823,"byte_end":117833,"line_start":6,"line_end":6,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/parser/inside_cdata.rs","byte_start":118838,"byte_end":118848,"line_start":6,"line_end":6,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/parser/inside_reference.rs","byte_start":119768,"byte_end":119778,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/parser/mod.rs","byte_start":74594,"byte_end":74604,"line_start":90,"line_end":90,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/parser/mod.rs","byte_start":75783,"byte_end":75793,"line_start":128,"line_end":128,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/parser/mod.rs","byte_start":77270,"byte_end":77280,"line_start":208,"line_end":208,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/parser/mod.rs","byte_start":78407,"byte_end":78417,"line_start":240,"line_end":240,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":540},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":558},{"krate":0,"index":560},{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":128525,"byte_end":128537,"line_start":93,"line_end":93,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":130839,"byte_end":130851,"line_start":165,"line_end":165,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":135531,"byte_end":135539,"line_start":117,"line_end":117,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":137163,"byte_end":137171,"line_start":152,"line_end":152,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/error.rs","byte_start":140652,"byte_end":140657,"line_start":28,"line_end":28,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/error.rs","byte_start":140795,"byte_end":140800,"line_start":34,"line_end":34,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/error.rs","byte_start":140877,"byte_end":140882,"line_start":39,"line_end":39,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":604},{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/error.rs","byte_start":141375,"byte_end":141380,"line_start":55,"line_end":55,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/error.rs","byte_start":141485,"byte_end":141490,"line_start":60,"line_end":60,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/error.rs","byte_start":141735,"byte_end":141740,"line_start":69,"line_end":69,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/error.rs","byte_start":142137,"byte_end":142142,"line_start":83,"line_end":83,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/error.rs","byte_start":142305,"byte_end":142314,"line_start":92,"line_end":92,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/error.rs","byte_start":142686,"byte_end":142695,"line_start":103,"line_end":103,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/error.rs","byte_start":143235,"byte_end":143244,"line_start":119,"line_end":119,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":38438,"byte_end":38449,"line_start":33,"line_end":33,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":39741,"byte_end":39752,"line_start":68,"line_end":68,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":39955,"byte_end":39966,"line_start":76,"line_end":76,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":40475,"byte_end":40481,"line_start":94,"line_end":94,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":40801,"byte_end":40807,"line_start":106,"line_end":106,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":663},{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":41242,"byte_end":41253,"line_start":123,"line_end":123,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/emitter.rs","byte_start":148279,"byte_end":148291,"line_start":38,"line_end":38,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/emitter.rs","byte_start":148401,"byte_end":148413,"line_start":44,"line_end":44,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/emitter.rs","byte_start":148736,"byte_end":148748,"line_start":57,"line_end":57,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":703}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/emitter.rs","byte_start":149889,"byte_end":149896,"line_start":93,"line_end":93,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/emitter.rs","byte_start":150389,"byte_end":150396,"line_start":118,"line_end":118,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":725},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":738},{"krate":0,"index":740},{"krate":0,"index":743},{"krate":0,"index":746},{"krate":0,"index":748},{"krate":0,"index":750},{"krate":0,"index":752},{"krate":0,"index":754},{"krate":0,"index":758},{"krate":0,"index":760},{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":165227,"byte_end":165240,"line_start":87,"line_end":87,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":770},{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":166908,"byte_end":166921,"line_start":140,"line_end":140,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":170563,"byte_end":170571,"line_start":96,"line_end":96,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":172363,"byte_end":172371,"line_start":144,"line_end":144,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":172580,"byte_end":172597,"line_start":154,"line_end":154,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":800}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":173193,"byte_end":173201,"line_start":168,"line_end":168,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":173493,"byte_end":173512,"line_start":181,"line_end":181,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":812},{"krate":0,"index":814},{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":175641,"byte_end":175649,"line_start":232,"line_end":232,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":143946,"byte_end":143957,"line_start":26,"line_end":26,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":833},{"krate":0,"index":834}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/util.rs","byte_start":176097,"byte_end":176110,"line_start":12,"line_end":12,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":842}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/util.rs","byte_start":176228,"byte_end":176241,"line_start":18,"line_end":18,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/util.rs","byte_start":176349,"byte_end":176362,"line_start":24,"line_end":24,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/lib.rs","byte_start":438,"byte_end":444,"line_start":21,"line_end":21,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":7}},{"kind":"Mod","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/lib.rs","byte_start":454,"byte_end":458,"line_start":22,"line_end":22,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":10}},{"kind":"Mod","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/lib.rs","byte_start":468,"byte_end":477,"line_start":23,"line_end":23,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":67}},{"kind":"Mod","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/lib.rs","byte_start":487,"byte_end":493,"line_start":24,"line_end":24,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":86}},{"kind":"Mod","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/lib.rs","byte_start":503,"byte_end":509,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":109}},{"kind":"Mod","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/lib.rs","byte_start":519,"byte_end":528,"line_start":26,"line_end":26,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":141}},{"kind":"Mod","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/lib.rs","byte_start":538,"byte_end":544,"line_start":27,"line_end":27,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":243}},{"kind":"Mod","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/lib.rs","byte_start":554,"byte_end":560,"line_start":28,"line_end":28,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":668}},{"kind":"Mod","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":143748,"byte_end":143754,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":775}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":3776,"byte_end":3780,"line_start":59,"line_end":59,"column_start":28,"column_end":32},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":852},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":4133,"byte_end":4137,"line_start":70,"line_end":70,"column_start":39,"column_end":43},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":852},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":4278,"byte_end":4282,"line_start":76,"line_end":76,"column_start":27,"column_end":31},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":852},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":4607,"byte_end":4611,"line_start":90,"line_end":90,"column_start":10,"column_end":14},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":852},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":6826,"byte_end":6837,"line_start":160,"line_end":160,"column_start":34,"column_end":45},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":34},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":7542,"byte_end":7551,"line_start":184,"line_end":184,"column_start":23,"column_end":32},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":880},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":7686,"byte_end":7695,"line_start":191,"line_end":191,"column_start":6,"column_end":15},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":880},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":9271,"byte_end":9280,"line_start":239,"line_end":239,"column_start":29,"column_end":38},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":880},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/name.rs","byte_start":9384,"byte_end":9393,"line_start":246,"line_end":246,"column_start":18,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":880},"to":{"krate":2,"index":7498}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/attribute.rs","byte_start":11781,"byte_end":11790,"line_start":21,"line_end":21,"column_start":27,"column_end":36},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":898},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/attribute.rs","byte_start":11950,"byte_end":11959,"line_start":27,"line_end":27,"column_start":10,"column_end":19},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":898},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/attribute.rs","byte_start":12718,"byte_end":12732,"line_start":56,"line_end":56,"column_start":6,"column_end":20},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":925},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/attribute.rs","byte_start":13250,"byte_end":13264,"line_start":75,"line_end":75,"column_start":23,"column_end":37},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":925},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":14188,"byte_end":14200,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":942},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":14928,"byte_end":14940,"line_start":42,"line_end":42,"column_start":21,"column_end":33},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":942},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":15105,"byte_end":15117,"line_start":49,"line_end":49,"column_start":23,"column_end":35},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":942},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":15552,"byte_end":15564,"line_start":64,"line_end":64,"column_start":19,"column_end":31},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":942},"to":{"krate":0,"index":97}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":15839,"byte_end":15849,"line_start":81,"line_end":81,"column_start":23,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":955},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/common.rs","byte_start":16081,"byte_end":16091,"line_start":90,"line_end":90,"column_start":21,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":955},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/escape.rs","byte_start":18098,"byte_end":18103,"line_start":10,"line_end":10,"column_start":6,"column_end":11},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/escape.rs","byte_start":18785,"byte_end":18792,"line_start":38,"line_end":38,"column_start":10,"column_end":17},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":121},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/escape.rs","byte_start":19643,"byte_end":19650,"line_start":65,"line_end":65,"column_start":37,"column_end":44},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":121},"to":{"krate":2,"index":4689}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":24279,"byte_end":24288,"line_start":71,"line_end":71,"column_start":6,"column_end":15},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":969},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":28189,"byte_end":28203,"line_start":190,"line_end":190,"column_start":6,"column_end":20},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":983},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":33989,"byte_end":34011,"line_start":367,"line_end":367,"column_start":10,"column_end":32},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":34221,"byte_end":34243,"line_start":374,"line_end":374,"column_start":23,"column_end":45},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":206},"to":{"krate":2,"index":4773}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":35894,"byte_end":35903,"line_start":423,"line_end":423,"column_start":37,"column_end":46},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":969},"to":{"krate":2,"index":4689}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":36122,"byte_end":36136,"line_start":431,"line_end":431,"column_start":37,"column_end":51},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":983},"to":{"krate":2,"index":4689}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/namespace.rs","byte_start":37489,"byte_end":37502,"line_start":479,"line_end":479,"column_start":41,"column_end":54},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":234},"to":{"krate":2,"index":4689}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/lexer.rs","byte_start":42733,"byte_end":42738,"line_start":59,"line_end":59,"column_start":23,"column_end":28},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":997},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/lexer.rs","byte_start":44085,"byte_end":44090,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":997},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/lexer.rs","byte_start":48946,"byte_end":48951,"line_start":229,"line_end":229,"column_start":19,"column_end":24},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":303},"to":{"krate":0,"index":97}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/lexer.rs","byte_start":49097,"byte_end":49102,"line_start":235,"line_end":235,"column_start":6,"column_end":11},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/parser/outside_tag.rs","byte_start":92847,"byte_end":92857,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/parser/inside_processing_instruction.rs","byte_start":98656,"byte_end":98666,"line_start":10,"line_end":10,"column_start":6,"column_end":16},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/parser/inside_declaration.rs","byte_start":102836,"byte_end":102846,"line_start":12,"line_end":12,"column_start":6,"column_end":16},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/parser/inside_doctype.rs","byte_start":109924,"byte_end":109934,"line_start":5,"line_end":5,"column_start":6,"column_end":16},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/parser/inside_opening_tag.rs","byte_start":110406,"byte_end":110416,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/parser/inside_closing_tag_name.rs","byte_start":116248,"byte_end":116258,"line_start":7,"line_end":7,"column_start":6,"column_end":16},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/parser/inside_comment.rs","byte_start":117823,"byte_end":117833,"line_start":6,"line_end":6,"column_start":6,"column_end":16},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/parser/inside_cdata.rs","byte_start":118838,"byte_end":118848,"line_start":6,"line_end":6,"column_start":6,"column_end":16},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/parser/inside_reference.rs","byte_start":119768,"byte_end":119778,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/parser/mod.rs","byte_start":74594,"byte_end":74604,"line_start":90,"line_end":90,"column_start":6,"column_end":16},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/parser/mod.rs","byte_start":75783,"byte_end":75793,"line_start":128,"line_end":128,"column_start":19,"column_end":29},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":505},"to":{"krate":0,"index":97}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/parser/mod.rs","byte_start":77270,"byte_end":77280,"line_start":208,"line_end":208,"column_start":6,"column_end":16},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/parser/mod.rs","byte_start":78407,"byte_end":78417,"line_start":240,"line_end":240,"column_start":6,"column_end":16},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":128525,"byte_end":128537,"line_start":93,"line_end":93,"column_start":6,"column_end":18},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/config.rs","byte_start":130839,"byte_end":130851,"line_start":165,"line_end":165,"column_start":18,"column_end":30},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1229},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":135531,"byte_end":135539,"line_start":117,"line_end":117,"column_start":21,"column_end":29},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1266},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/events.rs","byte_start":137163,"byte_end":137171,"line_start":152,"line_end":152,"column_start":6,"column_end":14},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/error.rs","byte_start":140652,"byte_end":140657,"line_start":28,"line_end":28,"column_start":23,"column_end":28},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1315},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/error.rs","byte_start":140795,"byte_end":140800,"line_start":34,"line_end":34,"column_start":19,"column_end":24},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1315},"to":{"krate":0,"index":97}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/error.rs","byte_start":140877,"byte_end":140882,"line_start":39,"line_end":39,"column_start":6,"column_end":11},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1315},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/error.rs","byte_start":141375,"byte_end":141380,"line_start":55,"line_end":55,"column_start":23,"column_end":28},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1315},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/error.rs","byte_start":141485,"byte_end":141490,"line_start":60,"line_end":60,"column_start":37,"column_end":42},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1315},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/error.rs","byte_start":141735,"byte_end":141740,"line_start":69,"line_end":69,"column_start":36,"column_end":41},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1315},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/error.rs","byte_start":142137,"byte_end":142142,"line_start":83,"line_end":83,"column_start":26,"column_end":31},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1315},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/error.rs","byte_start":142305,"byte_end":142314,"line_start":92,"line_end":92,"column_start":16,"column_end":25},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1301},"to":{"krate":2,"index":1593}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/error.rs","byte_start":142686,"byte_end":142695,"line_start":103,"line_end":103,"column_start":20,"column_end":29},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1301},"to":{"krate":2,"index":1619}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/error.rs","byte_start":143235,"byte_end":143244,"line_start":119,"line_end":119,"column_start":13,"column_end":22},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1301},"to":{"krate":2,"index":1624}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":38438,"byte_end":38449,"line_start":33,"line_end":33,"column_start":15,"column_end":26},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":39741,"byte_end":39752,"line_start":68,"line_end":68,"column_start":28,"column_end":39},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":632},"to":{"krate":0,"index":97}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":39955,"byte_end":39966,"line_start":76,"line_end":76,"column_start":32,"column_end":43},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":632},"to":{"krate":2,"index":4680}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":40475,"byte_end":40481,"line_start":94,"line_end":94,"column_start":15,"column_end":21},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":652},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":40801,"byte_end":40807,"line_start":106,"line_end":106,"column_start":28,"column_end":34},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":652},"to":{"krate":2,"index":4773}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/reader/mod.rs","byte_start":41242,"byte_end":41253,"line_start":123,"line_end":123,"column_start":10,"column_end":21},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/emitter.rs","byte_start":148279,"byte_end":148291,"line_start":38,"line_end":38,"column_start":26,"column_end":38},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1329},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/emitter.rs","byte_start":148401,"byte_end":148413,"line_start":44,"line_end":44,"column_start":23,"column_end":35},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1329},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/emitter.rs","byte_start":148736,"byte_end":148748,"line_start":57,"line_end":57,"column_start":16,"column_end":28},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1329},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/emitter.rs","byte_start":149889,"byte_end":149896,"line_start":93,"line_end":93,"column_start":6,"column_end":13},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/emitter.rs","byte_start":150389,"byte_end":150396,"line_start":118,"line_end":118,"column_start":6,"column_end":13},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":165227,"byte_end":165240,"line_start":87,"line_end":87,"column_start":6,"column_end":19},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/config.rs","byte_start":166908,"byte_end":166921,"line_start":140,"line_end":140,"column_start":18,"column_end":31},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1361},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":170563,"byte_end":170571,"line_start":96,"line_end":96,"column_start":10,"column_end":18},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1403},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":172363,"byte_end":172371,"line_start":144,"line_end":144,"column_start":28,"column_end":36},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1403},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":172580,"byte_end":172597,"line_start":154,"line_end":154,"column_start":10,"column_end":27},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":795},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":173193,"byte_end":173201,"line_start":168,"line_end":168,"column_start":42,"column_end":50},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1403},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":173493,"byte_end":173512,"line_start":181,"line_end":181,"column_start":10,"column_end":29},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":805},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/events.rs","byte_start":175641,"byte_end":175649,"line_start":232,"line_end":232,"column_start":44,"column_end":52},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1403},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/writer/mod.rs","byte_start":143946,"byte_end":143957,"line_start":26,"line_end":26,"column_start":16,"column_end":27},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":822},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/util.rs","byte_start":176097,"byte_end":176110,"line_start":12,"line_end":12,"column_start":31,"column_end":44},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1430},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/util.rs","byte_start":176228,"byte_end":176241,"line_start":18,"line_end":18,"column_start":26,"column_end":39},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1430},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.3/src/util.rs","byte_start":176349,"byte_end":176362,"line_start":24,"line_end":24,"column_start":23,"column_end":36},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1430},"to":{"krate":2,"index":5983}}]}