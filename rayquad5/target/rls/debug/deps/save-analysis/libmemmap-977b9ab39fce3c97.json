{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0","program":"/home/dapx/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","memmap","/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=977b9ab39fce3c97","-C","extra-filename=-977b9ab39fce3c97","--out-dir","/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps","-L","dependency=/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps","--extern","libc=/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps/liblibc-50f956e8cad68ad3.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/dapx/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps/libmemmap-977b9ab39fce3c97.rmeta"},"prelude":{"crate_id":{"name":"memmap","disambiguator":[3175860337248092939,5153411100839449853]},"crate_root":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src","external_crates":[{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6528836112941390771,2028724122443642861]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14673858572786541001,1892137737928154225]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17117278319981904138,16406771668640906211]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11917984669602857069,6489053565454986112]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12362109612685904499,382626321872987168]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4151571022625212401,1888722734493896023]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4322023011642103678,14222697504055880771]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8420579222726968489,9136630199856205157]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[13745492306750544571,5475822973716876235]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14030493773096865675,2651053314204399788]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[8310449678941769819,14748581810882876583]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17983290995241619958,6056021938633518527]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2836549575564442446,8627689666430273126]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7274711288869898279,15671112109327640352]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/unix.rs","num":15,"id":{"name":"libc","disambiguator":[7997064065336242500,8511025302220419458]}}],"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":0,"byte_end":30190,"line_start":1,"line_end":1008,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":0,"byte_end":30190,"line_start":1,"line_end":1008,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":100},{"krate":0,"index":108},{"krate":0,"index":106},{"krate":0,"index":104},{"krate":0,"index":49},{"krate":0,"index":66},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":76},{"krate":0,"index":78},{"krate":0,"index":80},{"krate":0,"index":89},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":98}],"decl_id":null,"docs":" A cross-platform Rust API for memory mapped buffers.\n","sig":null,"attributes":[{"value":"! A cross-platform Rust API for memory mapped buffers.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":0,"byte_end":56,"line_start":1,"line_end":1,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":100},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":808,"byte_end":819,"line_start":30,"line_end":30,"column_start":12,"column_end":23},"name":"MmapOptions","qualname":"::MmapOptions","value":"MmapOptions {  }","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103}],"decl_id":null,"docs":" A memory map builder, providing advanced options and flags for specifying memory map behavior.","sig":null,"attributes":[{"value":"/ A memory map builder, providing advanced options and flags for specifying memory map behavior.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":420,"byte_end":518,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":519,"byte_end":522,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ `MmapOptions` can be used to create an anonymous memory map using `MmapOptions::map_anon`, or a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":523,"byte_end":622,"line_start":26,"line_end":26,"column_start":1,"column_end":100}},{"value":"/ file-backed memory map using one of `MmapOptions::map`, `MmapOptions::map_mut`,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":623,"byte_end":706,"line_start":27,"line_end":27,"column_start":1,"column_end":84}},{"value":"/ `MmapOptions::map_exec`, or `MmapOptions::map_copy`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":707,"byte_end":763,"line_start":28,"line_end":28,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":1758,"byte_end":1761,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"new","qualname":"<MmapOptions>::new","value":"fn () -> MmapOptions","parent":null,"children":[],"decl_id":null,"docs":" Creates a new set of options for configuring and creating a memory map.","sig":null,"attributes":[{"value":"/ Creates a new set of options for configuring and creating a memory map.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":906,"byte_end":981,"line_start":37,"line_end":37,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":986,"byte_end":989,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":994,"byte_end":1007,"line_start":39,"line_end":39,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":1012,"byte_end":1015,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":1020,"byte_end":1027,"line_start":41,"line_end":41,"column_start":5,"column_end":12}},{"value":"/ use memmap::{MmapMut, MmapOptions};","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":1032,"byte_end":1071,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ # use std::io::Result;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":1076,"byte_end":1102,"line_start":43,"line_end":43,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":1107,"byte_end":1110,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ # fn main() -> Result<()> {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":1115,"byte_end":1146,"line_start":45,"line_end":45,"column_start":5,"column_end":36}},{"value":"/ // Create a new memory map builder.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":1151,"byte_end":1190,"line_start":46,"line_end":46,"column_start":5,"column_end":44}},{"value":"/ let mut mmap_options = MmapOptions::new();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":1195,"byte_end":1241,"line_start":47,"line_end":47,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":1246,"byte_end":1249,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ // Configure the memory map builder using option setters, then create","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":1254,"byte_end":1327,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ // a memory map using one of `mmap_options.map_anon`, `mmap_options.map`,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":1332,"byte_end":1409,"line_start":50,"line_end":50,"column_start":5,"column_end":82}},{"value":"/ // `mmap_options.map_mut`, `mmap_options.map_exec`, or `mmap_options.map_copy`:","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":1414,"byte_end":1497,"line_start":51,"line_end":51,"column_start":5,"column_end":88}},{"value":"/ let mut mmap: MmapMut = mmap_options.len(36).map_anon()?;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":1502,"byte_end":1563,"line_start":52,"line_end":52,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":1568,"byte_end":1571,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ // Use the memory map:","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":1576,"byte_end":1602,"line_start":54,"line_end":54,"column_start":5,"column_end":31}},{"value":"/ mmap.copy_from_slice(b\"...data to copy to the memory map...\");","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":1607,"byte_end":1673,"line_start":55,"line_end":55,"column_start":5,"column_end":71}},{"value":"/ # let _ = mmap_options;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":1678,"byte_end":1705,"line_start":56,"line_end":56,"column_start":5,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":1710,"byte_end":1722,"line_start":57,"line_end":57,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":1727,"byte_end":1734,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":1739,"byte_end":1746,"line_start":59,"line_end":59,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":2511,"byte_end":2517,"line_start":87,"line_end":87,"column_start":12,"column_end":18},"name":"offset","qualname":"<MmapOptions>::offset","value":"fn (&mut self, offset: u64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the memory map to start at byte `offset` from the beginning of the file.","sig":null,"attributes":[{"value":"/ Configures the memory map to start at byte `offset` from the beginning of the file.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":1823,"byte_end":1910,"line_start":64,"line_end":64,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":1915,"byte_end":1918,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ This option has no effect on anonymous memory maps.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":1923,"byte_end":1978,"line_start":66,"line_end":66,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":1983,"byte_end":1986,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ By default, the offset is 0.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":1991,"byte_end":2023,"line_start":68,"line_end":68,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":2028,"byte_end":2031,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":2036,"byte_end":2049,"line_start":70,"line_end":70,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":2054,"byte_end":2057,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":2062,"byte_end":2069,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use memmap::MmapOptions;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":2074,"byte_end":2102,"line_start":73,"line_end":73,"column_start":5,"column_end":33}},{"value":"/ use std::fs::File;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":2107,"byte_end":2129,"line_start":74,"line_end":74,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":2134,"byte_end":2137,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":2142,"byte_end":2182,"line_start":76,"line_end":76,"column_start":5,"column_end":45}},{"value":"/ let mmap = unsafe {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":2187,"byte_end":2210,"line_start":77,"line_end":77,"column_start":5,"column_end":28}},{"value":"/     MmapOptions::new()","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":2215,"byte_end":2241,"line_start":78,"line_end":78,"column_start":5,"column_end":31}},{"value":"/                 .offset(10)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":2246,"byte_end":2277,"line_start":79,"line_end":79,"column_start":5,"column_end":36}},{"value":"/                 .map(&File::open(\"README.md\")?)?","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":2282,"byte_end":2334,"line_start":80,"line_end":80,"column_start":5,"column_end":57}},{"value":"/ };","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":2339,"byte_end":2345,"line_start":81,"line_end":81,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(&b\"A Rust library for cross-platform memory mapped IO.\"[..],","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":2350,"byte_end":2425,"line_start":82,"line_end":82,"column_start":5,"column_end":80}},{"value":"/            &mmap[..51]);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":2430,"byte_end":2458,"line_start":83,"line_end":83,"column_start":5,"column_end":33}},{"value":"/ # Ok(())","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":2463,"byte_end":2475,"line_start":84,"line_end":84,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":2480,"byte_end":2487,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":2492,"byte_end":2499,"line_start":86,"line_end":86,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":3259,"byte_end":3262,"line_start":114,"line_end":114,"column_start":12,"column_end":15},"name":"len","qualname":"<MmapOptions>::len","value":"fn (&mut self, len: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the created memory mapped buffer to be `len` bytes long.","sig":null,"attributes":[{"value":"/ Configures the created memory mapped buffer to be `len` bytes long.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":2611,"byte_end":2682,"line_start":92,"line_end":92,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":2687,"byte_end":2690,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ This option is mandatory for anonymous memory maps.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":2695,"byte_end":2750,"line_start":94,"line_end":94,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":2755,"byte_end":2758,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ For file-backed memory maps, the length will default to the file length.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":2763,"byte_end":2839,"line_start":96,"line_end":96,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":2844,"byte_end":2847,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":2852,"byte_end":2865,"line_start":98,"line_end":98,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":2870,"byte_end":2873,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":2878,"byte_end":2885,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ use memmap::MmapOptions;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":2890,"byte_end":2918,"line_start":101,"line_end":101,"column_start":5,"column_end":33}},{"value":"/ use std::fs::File;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":2923,"byte_end":2945,"line_start":102,"line_end":102,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":2950,"byte_end":2953,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":2958,"byte_end":2998,"line_start":104,"line_end":104,"column_start":5,"column_end":45}},{"value":"/ let mmap = unsafe {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":3003,"byte_end":3026,"line_start":105,"line_end":105,"column_start":5,"column_end":28}},{"value":"/     MmapOptions::new()","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":3031,"byte_end":3057,"line_start":106,"line_end":106,"column_start":5,"column_end":31}},{"value":"/                 .len(8)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":3062,"byte_end":3089,"line_start":107,"line_end":107,"column_start":5,"column_end":32}},{"value":"/                 .map(&File::open(\"README.md\")?)?","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":3094,"byte_end":3146,"line_start":108,"line_end":108,"column_start":5,"column_end":57}},{"value":"/ };","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":3151,"byte_end":3157,"line_start":109,"line_end":109,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(&b\"# memmap\"[..], &mmap[..]);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":3162,"byte_end":3206,"line_start":110,"line_end":110,"column_start":5,"column_end":49}},{"value":"/ # Ok(())","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":3211,"byte_end":3223,"line_start":111,"line_end":111,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":3228,"byte_end":3235,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":3240,"byte_end":3247,"line_start":113,"line_end":113,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":4336,"byte_end":4341,"line_start":149,"line_end":149,"column_start":12,"column_end":17},"name":"stack","qualname":"<MmapOptions>::stack","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the anonymous memory map to be suitable for a process or thread stack.","sig":null,"attributes":[{"value":"/ Configures the anonymous memory map to be suitable for a process or thread stack.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":3853,"byte_end":3938,"line_start":133,"line_end":133,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":3943,"byte_end":3946,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ This option corresponds to the `MAP_STACK` flag on Linux.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":3951,"byte_end":4012,"line_start":135,"line_end":135,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":4017,"byte_end":4020,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ This option has no effect on file-backed memory maps.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":4025,"byte_end":4082,"line_start":137,"line_end":137,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":4087,"byte_end":4090,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":4095,"byte_end":4108,"line_start":139,"line_end":139,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":4113,"byte_end":4116,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":4121,"byte_end":4128,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"/ use memmap::MmapOptions;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":4133,"byte_end":4161,"line_start":142,"line_end":142,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":4166,"byte_end":4169,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":4174,"byte_end":4214,"line_start":144,"line_end":144,"column_start":5,"column_end":45}},{"value":"/ let stack = MmapOptions::new().stack().len(4096).map_anon();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":4219,"byte_end":4283,"line_start":145,"line_end":145,"column_start":5,"column_end":69}},{"value":"/ # Ok(())","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":4288,"byte_end":4300,"line_start":146,"line_end":146,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":4305,"byte_end":4312,"line_start":147,"line_end":147,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":4317,"byte_end":4324,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":5216,"byte_end":5219,"line_start":182,"line_end":182,"column_start":19,"column_end":22},"name":"map","qualname":"<MmapOptions>::map","value":"fn (&self, file: &File) -> Result<Mmap>","parent":null,"children":[],"decl_id":null,"docs":" Creates a read-only memory map backed by a file.","sig":null,"attributes":[{"value":"/ Creates a read-only memory map backed by a file.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":4419,"byte_end":4471,"line_start":154,"line_end":154,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":4476,"byte_end":4479,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":4484,"byte_end":4496,"line_start":156,"line_end":156,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":4501,"byte_end":4504,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ This method returns an error when the underlying system call fails, which can happen for a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":4509,"byte_end":4603,"line_start":158,"line_end":158,"column_start":5,"column_end":99}},{"value":"/ variety of reasons, such as when the file is not open with read permissions.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":4608,"byte_end":4688,"line_start":159,"line_end":159,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":4693,"byte_end":4696,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":4701,"byte_end":4714,"line_start":161,"line_end":161,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":4719,"byte_end":4722,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":4727,"byte_end":4734,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ use memmap::MmapOptions;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":4739,"byte_end":4767,"line_start":164,"line_end":164,"column_start":5,"column_end":33}},{"value":"/ use std::fs::File;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":4772,"byte_end":4794,"line_start":165,"line_end":165,"column_start":5,"column_end":27}},{"value":"/ use std::io::Read;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":4799,"byte_end":4821,"line_start":166,"line_end":166,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":4826,"byte_end":4829,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":4834,"byte_end":4874,"line_start":168,"line_end":168,"column_start":5,"column_end":45}},{"value":"/ let mut file = File::open(\"README.md\")?;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":4879,"byte_end":4923,"line_start":169,"line_end":169,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":4928,"byte_end":4931,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ let mut contents = Vec::new();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":4936,"byte_end":4970,"line_start":171,"line_end":171,"column_start":5,"column_end":39}},{"value":"/ file.read_to_end(&mut contents)?;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":4975,"byte_end":5012,"line_start":172,"line_end":172,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":5017,"byte_end":5020,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ let mmap = unsafe {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":5025,"byte_end":5048,"line_start":174,"line_end":174,"column_start":5,"column_end":28}},{"value":"/     MmapOptions::new().map(&file)?","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":5053,"byte_end":5091,"line_start":175,"line_end":175,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":5096,"byte_end":5102,"line_start":176,"line_end":176,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":5107,"byte_end":5110,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&contents[..], &mmap[..]);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":5115,"byte_end":5156,"line_start":178,"line_end":178,"column_start":5,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":5161,"byte_end":5173,"line_start":179,"line_end":179,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":5178,"byte_end":5185,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":5190,"byte_end":5197,"line_start":181,"line_end":181,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":5669,"byte_end":5677,"line_start":192,"line_end":192,"column_start":19,"column_end":27},"name":"map_exec","qualname":"<MmapOptions>::map_exec","value":"fn (&self, file: &File) -> Result<Mmap>","parent":null,"children":[],"decl_id":null,"docs":" Creates a readable and executable memory map backed by a file.","sig":null,"attributes":[{"value":"/ Creates a readable and executable memory map backed by a file.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":5367,"byte_end":5433,"line_start":186,"line_end":186,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":5438,"byte_end":5441,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":5446,"byte_end":5458,"line_start":188,"line_end":188,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":5463,"byte_end":5466,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ This method returns an error when the underlying system call fails, which can happen for a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":5471,"byte_end":5565,"line_start":190,"line_end":190,"column_start":5,"column_end":99}},{"value":"/ variety of reasons, such as when the file is not open with read permissions.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":5570,"byte_end":5650,"line_start":191,"line_end":191,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":6879,"byte_end":6886,"line_start":230,"line_end":230,"column_start":19,"column_end":26},"name":"map_mut","qualname":"<MmapOptions>::map_mut","value":"fn (&self, file: &File) -> Result<MmapMut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a writeable memory map backed by a file.","sig":null,"attributes":[{"value":"/ Creates a writeable memory map backed by a file.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":5843,"byte_end":5895,"line_start":197,"line_end":197,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":5900,"byte_end":5903,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":5908,"byte_end":5920,"line_start":199,"line_end":199,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":5925,"byte_end":5928,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ This method returns an error when the underlying system call fails, which can happen for a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":5933,"byte_end":6027,"line_start":201,"line_end":201,"column_start":5,"column_end":99}},{"value":"/ variety of reasons, such as when the file is not open with read and write permissions.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":6032,"byte_end":6122,"line_start":202,"line_end":202,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":6127,"byte_end":6130,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":6135,"byte_end":6148,"line_start":204,"line_end":204,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":6153,"byte_end":6156,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":6161,"byte_end":6168,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ # extern crate memmap;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":6173,"byte_end":6199,"line_start":207,"line_end":207,"column_start":5,"column_end":31}},{"value":"/ # extern crate tempdir;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":6204,"byte_end":6231,"line_start":208,"line_end":208,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":6236,"byte_end":6241,"line_start":209,"line_end":209,"column_start":5,"column_end":10}},{"value":"/ use std::fs::OpenOptions;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":6246,"byte_end":6275,"line_start":210,"line_end":210,"column_start":5,"column_end":34}},{"value":"/ use std::path::PathBuf;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":6280,"byte_end":6307,"line_start":211,"line_end":211,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":6312,"byte_end":6315,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ use memmap::MmapOptions;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":6320,"byte_end":6348,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":6353,"byte_end":6358,"line_start":214,"line_end":214,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":6363,"byte_end":6403,"line_start":215,"line_end":215,"column_start":5,"column_end":45}},{"value":"/ # let tempdir = tempdir::TempDir::new(\"mmap\")?;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":6408,"byte_end":6459,"line_start":216,"line_end":216,"column_start":5,"column_end":56}},{"value":"/ let path: PathBuf = /* path to file */","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":6464,"byte_end":6506,"line_start":217,"line_end":217,"column_start":5,"column_end":47}},{"value":"/ #   tempdir.path().join(\"map_mut\");","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":6511,"byte_end":6550,"line_start":218,"line_end":218,"column_start":5,"column_end":44}},{"value":"/ let file = OpenOptions::new().read(true).write(true).create(true).open(&path)?;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":6555,"byte_end":6638,"line_start":219,"line_end":219,"column_start":5,"column_end":88}},{"value":"/ file.set_len(13)?;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":6643,"byte_end":6665,"line_start":220,"line_end":220,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":6670,"byte_end":6673,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ let mut mmap = unsafe {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":6678,"byte_end":6705,"line_start":222,"line_end":222,"column_start":5,"column_end":32}},{"value":"/     MmapOptions::new().map_mut(&file)?","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":6710,"byte_end":6752,"line_start":223,"line_end":223,"column_start":5,"column_end":47}},{"value":"/ };","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":6757,"byte_end":6763,"line_start":224,"line_end":224,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":6768,"byte_end":6771,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ mmap.copy_from_slice(b\"Hello, world!\");","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":6776,"byte_end":6819,"line_start":226,"line_end":226,"column_start":5,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":6824,"byte_end":6836,"line_start":227,"line_end":227,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":6841,"byte_end":6848,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":6853,"byte_end":6860,"line_start":229,"line_end":229,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":7902,"byte_end":7910,"line_start":259,"line_end":259,"column_start":19,"column_end":27},"name":"map_copy","qualname":"<MmapOptions>::map_copy","value":"fn (&self, file: &File) -> Result<MmapMut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a copy-on-write memory map backed by a file.","sig":null,"attributes":[{"value":"/ Creates a copy-on-write memory map backed by a file.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":7057,"byte_end":7113,"line_start":235,"line_end":235,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":7118,"byte_end":7121,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ Data written to the memory map will not be visible by other processes,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":7126,"byte_end":7200,"line_start":237,"line_end":237,"column_start":5,"column_end":79}},{"value":"/ and will not be carried through to the underlying file.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":7205,"byte_end":7264,"line_start":238,"line_end":238,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":7269,"byte_end":7272,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":7277,"byte_end":7289,"line_start":240,"line_end":240,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":7294,"byte_end":7297,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ This method returns an error when the underlying system call fails, which can happen for a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":7302,"byte_end":7396,"line_start":242,"line_end":242,"column_start":5,"column_end":99}},{"value":"/ variety of reasons, such as when the file is not open with writable permissions.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":7401,"byte_end":7485,"line_start":243,"line_end":243,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":7490,"byte_end":7493,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":7498,"byte_end":7511,"line_start":245,"line_end":245,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":7516,"byte_end":7519,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":7524,"byte_end":7531,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ use memmap::MmapOptions;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":7536,"byte_end":7564,"line_start":248,"line_end":248,"column_start":5,"column_end":33}},{"value":"/ use std::fs::File;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":7569,"byte_end":7591,"line_start":249,"line_end":249,"column_start":5,"column_end":27}},{"value":"/ use std::io::Write;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":7596,"byte_end":7619,"line_start":250,"line_end":250,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":7624,"byte_end":7627,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":7632,"byte_end":7672,"line_start":252,"line_end":252,"column_start":5,"column_end":45}},{"value":"/ let file = File::open(\"README.md\")?;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":7677,"byte_end":7717,"line_start":253,"line_end":253,"column_start":5,"column_end":45}},{"value":"/ let mut mmap = unsafe { MmapOptions::new().map_copy(&file)? };","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":7722,"byte_end":7788,"line_start":254,"line_end":254,"column_start":5,"column_end":71}},{"value":"/ (&mut mmap[..]).write_all(b\"Hello, world!\")?;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":7793,"byte_end":7842,"line_start":255,"line_end":255,"column_start":5,"column_end":54}},{"value":"/ # Ok(())","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":7847,"byte_end":7859,"line_start":256,"line_end":256,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":7864,"byte_end":7871,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":7876,"byte_end":7883,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":8399,"byte_end":8407,"line_start":272,"line_end":272,"column_start":12,"column_end":20},"name":"map_anon","qualname":"<MmapOptions>::map_anon","value":"fn (&self) -> Result<MmapMut>","parent":null,"children":[],"decl_id":null,"docs":" Creates an anonymous memory map.","sig":null,"attributes":[{"value":"/ Creates an anonymous memory map.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":8082,"byte_end":8118,"line_start":264,"line_end":264,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":8123,"byte_end":8126,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ Note: the memory map length must be configured to be greater than 0 before creating an","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":8131,"byte_end":8221,"line_start":266,"line_end":266,"column_start":5,"column_end":95}},{"value":"/ anonymous memory map using `MmapOptions::len()`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":8226,"byte_end":8278,"line_start":267,"line_end":267,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":8283,"byte_end":8286,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":8291,"byte_end":8303,"line_start":269,"line_end":269,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":8308,"byte_end":8311,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ This method returns an error when the underlying system call fails.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":8316,"byte_end":8387,"line_start":271,"line_end":271,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":66},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":9314,"byte_end":9318,"line_start":301,"line_end":301,"column_start":12,"column_end":16},"name":"Mmap","qualname":"::Mmap","value":"Mmap {  }","parent":null,"children":[{"krate":0,"index":67}],"decl_id":null,"docs":" An immutable memory mapped buffer.","sig":null,"attributes":[{"value":"/ An immutable memory mapped buffer.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":8546,"byte_end":8584,"line_start":277,"line_end":277,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":8585,"byte_end":8588,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ A `Mmap` may be backed by a file, or it can be anonymous map, backed by volatile memory.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":8589,"byte_end":8681,"line_start":279,"line_end":279,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":8682,"byte_end":8685,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ Use `MmapOptions` to configure and create a file-backed memory map. To create an immutable","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":8686,"byte_end":8780,"line_start":281,"line_end":281,"column_start":1,"column_end":95}},{"value":"/ anonymous memory map, first create a mutable anonymous memory map using `MmapOptions`, and then","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":8781,"byte_end":8880,"line_start":282,"line_end":282,"column_start":1,"column_end":100}},{"value":"/ make it immutable with `MmapMut::make_read_only`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":8881,"byte_end":8934,"line_start":283,"line_end":283,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":8935,"byte_end":8938,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":8939,"byte_end":8952,"line_start":285,"line_end":285,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":8953,"byte_end":8956,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":8957,"byte_end":8964,"line_start":287,"line_end":287,"column_start":1,"column_end":8}},{"value":"/ use memmap::MmapOptions;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":8965,"byte_end":8993,"line_start":288,"line_end":288,"column_start":1,"column_end":29}},{"value":"/ use std::io::Write;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":8994,"byte_end":9017,"line_start":289,"line_end":289,"column_start":1,"column_end":24}},{"value":"/ use std::fs::File;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":9018,"byte_end":9040,"line_start":290,"line_end":290,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":9041,"byte_end":9044,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":9045,"byte_end":9085,"line_start":292,"line_end":292,"column_start":1,"column_end":41}},{"value":"/ let file = File::open(\"README.md\")?;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":9086,"byte_end":9126,"line_start":293,"line_end":293,"column_start":1,"column_end":41}},{"value":"/ let mmap = unsafe { MmapOptions::new().map(&file)? };","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":9127,"byte_end":9184,"line_start":294,"line_end":294,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(b\"# memmap\", &mmap[0..8]);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":9185,"byte_end":9226,"line_start":295,"line_end":295,"column_start":1,"column_end":42}},{"value":"/ # Ok(())","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":9227,"byte_end":9239,"line_start":296,"line_end":296,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":9240,"byte_end":9247,"line_start":297,"line_end":297,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":9248,"byte_end":9255,"line_start":298,"line_end":298,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":9256,"byte_end":9259,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ See `MmapMut` for the mutable version.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":9260,"byte_end":9302,"line_start":300,"line_end":300,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":10206,"byte_end":10209,"line_start":335,"line_end":335,"column_start":19,"column_end":22},"name":"map","qualname":"<Mmap>::map","value":"fn (file: &File) -> Result<Mmap>","parent":null,"children":[],"decl_id":null,"docs":" Creates a read-only memory map backed by a file.","sig":null,"attributes":[{"value":"/ Creates a read-only memory map backed by a file.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":9362,"byte_end":9414,"line_start":306,"line_end":306,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":9419,"byte_end":9422,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling `MmapOptions::new().map(file)`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":9427,"byte_end":9492,"line_start":308,"line_end":308,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":9497,"byte_end":9500,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":9505,"byte_end":9517,"line_start":310,"line_end":310,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":9522,"byte_end":9525,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ This method returns an error when the underlying system call fails, which can happen for a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":9530,"byte_end":9624,"line_start":312,"line_end":312,"column_start":5,"column_end":99}},{"value":"/ variety of reasons, such as when the file is not open with read permissions.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":9629,"byte_end":9709,"line_start":313,"line_end":313,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":9714,"byte_end":9717,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":9722,"byte_end":9735,"line_start":315,"line_end":315,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":9740,"byte_end":9743,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":9748,"byte_end":9755,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"/ use std::fs::File;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":9760,"byte_end":9782,"line_start":318,"line_end":318,"column_start":5,"column_end":27}},{"value":"/ use std::io::Read;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":9787,"byte_end":9809,"line_start":319,"line_end":319,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":9814,"byte_end":9817,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ use memmap::Mmap;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":9822,"byte_end":9843,"line_start":321,"line_end":321,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":9848,"byte_end":9851,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":9856,"byte_end":9896,"line_start":323,"line_end":323,"column_start":5,"column_end":45}},{"value":"/ let mut file = File::open(\"README.md\")?;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":9901,"byte_end":9945,"line_start":324,"line_end":324,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":9950,"byte_end":9953,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ let mut contents = Vec::new();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":9958,"byte_end":9992,"line_start":326,"line_end":326,"column_start":5,"column_end":39}},{"value":"/ file.read_to_end(&mut contents)?;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":9997,"byte_end":10034,"line_start":327,"line_end":327,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":10039,"byte_end":10042,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ let mmap = unsafe { Mmap::map(&file)?  };","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":10047,"byte_end":10092,"line_start":329,"line_end":329,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":10097,"byte_end":10100,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&contents[..], &mmap[..]);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":10105,"byte_end":10146,"line_start":331,"line_end":331,"column_start":5,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":10151,"byte_end":10163,"line_start":332,"line_end":332,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":10168,"byte_end":10175,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":10180,"byte_end":10187,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":11628,"byte_end":11636,"line_start":376,"line_end":376,"column_start":12,"column_end":20},"name":"make_mut","qualname":"<Mmap>::make_mut","value":"fn (mut self) -> Result<MmapMut>","parent":null,"children":[],"decl_id":null,"docs":" Transition the memory map to be writable.","sig":null,"attributes":[{"value":"/ Transition the memory map to be writable.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":10289,"byte_end":10334,"line_start":339,"line_end":339,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":10339,"byte_end":10342,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ If the memory map is file-backed, the file must have been opened with write permissions.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":10347,"byte_end":10439,"line_start":341,"line_end":341,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":10444,"byte_end":10447,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":10452,"byte_end":10464,"line_start":343,"line_end":343,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":10469,"byte_end":10472,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ This method returns an error when the underlying system call fails, which can happen for a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":10477,"byte_end":10571,"line_start":345,"line_end":345,"column_start":5,"column_end":99}},{"value":"/ variety of reasons, such as when the file is not open with writable permissions.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":10576,"byte_end":10660,"line_start":346,"line_end":346,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":10665,"byte_end":10668,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":10673,"byte_end":10686,"line_start":348,"line_end":348,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":10691,"byte_end":10694,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":10699,"byte_end":10706,"line_start":350,"line_end":350,"column_start":5,"column_end":12}},{"value":"/ # extern crate memmap;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":10711,"byte_end":10737,"line_start":351,"line_end":351,"column_start":5,"column_end":31}},{"value":"/ # extern crate tempdir;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":10742,"byte_end":10769,"line_start":352,"line_end":352,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":10774,"byte_end":10779,"line_start":353,"line_end":353,"column_start":5,"column_end":10}},{"value":"/ use memmap::Mmap;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":10784,"byte_end":10805,"line_start":354,"line_end":354,"column_start":5,"column_end":26}},{"value":"/ use std::ops::DerefMut;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":10810,"byte_end":10837,"line_start":355,"line_end":355,"column_start":5,"column_end":32}},{"value":"/ use std::io::Write;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":10842,"byte_end":10865,"line_start":356,"line_end":356,"column_start":5,"column_end":28}},{"value":"/ # use std::fs::OpenOptions;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":10870,"byte_end":10901,"line_start":357,"line_end":357,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":10906,"byte_end":10909,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":10914,"byte_end":10954,"line_start":359,"line_end":359,"column_start":5,"column_end":45}},{"value":"/ # let tempdir = tempdir::TempDir::new(\"mmap\")?;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":10959,"byte_end":11010,"line_start":360,"line_end":360,"column_start":5,"column_end":56}},{"value":"/ let file = /* file opened with write permissions */","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":11015,"byte_end":11070,"line_start":361,"line_end":361,"column_start":5,"column_end":60}},{"value":"/ #          OpenOptions::new()","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":11075,"byte_end":11108,"line_start":362,"line_end":362,"column_start":5,"column_end":38}},{"value":"/ #                      .read(true)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":11113,"byte_end":11151,"line_start":363,"line_end":363,"column_start":5,"column_end":43}},{"value":"/ #                      .write(true)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":11156,"byte_end":11195,"line_start":364,"line_end":364,"column_start":5,"column_end":44}},{"value":"/ #                      .create(true)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":11200,"byte_end":11240,"line_start":365,"line_end":365,"column_start":5,"column_end":45}},{"value":"/ #                      .open(tempdir.path()","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":11245,"byte_end":11292,"line_start":366,"line_end":366,"column_start":5,"column_end":52}},{"value":"/ #                      .join(\"make_mut\"))?;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":11297,"byte_end":11344,"line_start":367,"line_end":367,"column_start":5,"column_end":52}},{"value":"/ # file.set_len(128)?;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":11349,"byte_end":11374,"line_start":368,"line_end":368,"column_start":5,"column_end":30}},{"value":"/ let mmap = unsafe { Mmap::map(&file)? };","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":11379,"byte_end":11423,"line_start":369,"line_end":369,"column_start":5,"column_end":49}},{"value":"/ // ... use the read-only memory map ...","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":11428,"byte_end":11471,"line_start":370,"line_end":370,"column_start":5,"column_end":48}},{"value":"/ let mut mut_mmap = mmap.make_mut()?;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":11476,"byte_end":11516,"line_start":371,"line_end":371,"column_start":5,"column_end":45}},{"value":"/ mut_mmap.deref_mut().write_all(b\"hello, world!\")?;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":11521,"byte_end":11575,"line_start":372,"line_end":372,"column_start":5,"column_end":59}},{"value":"/ # Ok(())","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":11580,"byte_end":11592,"line_start":373,"line_end":373,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":11597,"byte_end":11604,"line_start":374,"line_end":374,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":11609,"byte_end":11616,"line_start":375,"line_end":375,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":78},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":12588,"byte_end":12595,"line_start":414,"line_end":414,"column_start":12,"column_end":19},"name":"MmapMut","qualname":"::MmapMut","value":"MmapMut {  }","parent":null,"children":[{"krate":0,"index":79}],"decl_id":null,"docs":" A mutable memory mapped buffer.","sig":null,"attributes":[{"value":"/ A mutable memory mapped buffer.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":12266,"byte_end":12301,"line_start":407,"line_end":407,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":12302,"byte_end":12305,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ A file-backed `MmapMut` buffer may be used to read from or write to a file. An anonymous","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":12306,"byte_end":12398,"line_start":409,"line_end":409,"column_start":1,"column_end":93}},{"value":"/ `MmapMut` buffer may be used any place that an in-memory byte buffer is needed. Use","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":12399,"byte_end":12486,"line_start":410,"line_end":410,"column_start":1,"column_end":88}},{"value":"/ `MmapOptions` for creating memory maps.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":12487,"byte_end":12530,"line_start":411,"line_end":411,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":12531,"byte_end":12534,"line_start":412,"line_end":412,"column_start":1,"column_end":4}},{"value":"/ See `Mmap` for the immutable version.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":12535,"byte_end":12576,"line_start":413,"line_end":413,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":13854,"byte_end":13861,"line_start":456,"line_end":456,"column_start":19,"column_end":26},"name":"map_mut","qualname":"<MmapMut>::map_mut","value":"fn (file: &File) -> Result<MmapMut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a writeable memory map backed by a file.","sig":null,"attributes":[{"value":"/ Creates a writeable memory map backed by a file.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":12642,"byte_end":12694,"line_start":419,"line_end":419,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":12699,"byte_end":12702,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling `MmapOptions::new().map_mut(file)`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":12707,"byte_end":12776,"line_start":421,"line_end":421,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":12781,"byte_end":12784,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":12789,"byte_end":12801,"line_start":423,"line_end":423,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":12806,"byte_end":12809,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ This method returns an error when the underlying system call fails, which can happen for a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":12814,"byte_end":12908,"line_start":425,"line_end":425,"column_start":5,"column_end":99}},{"value":"/ variety of reasons, such as when the file is not open with read and write permissions.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":12913,"byte_end":13003,"line_start":426,"line_end":426,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":13008,"byte_end":13011,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":13016,"byte_end":13029,"line_start":428,"line_end":428,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":13034,"byte_end":13037,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":13042,"byte_end":13049,"line_start":430,"line_end":430,"column_start":5,"column_end":12}},{"value":"/ # extern crate memmap;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":13054,"byte_end":13080,"line_start":431,"line_end":431,"column_start":5,"column_end":31}},{"value":"/ # extern crate tempdir;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":13085,"byte_end":13112,"line_start":432,"line_end":432,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":13117,"byte_end":13122,"line_start":433,"line_end":433,"column_start":5,"column_end":10}},{"value":"/ use std::fs::OpenOptions;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":13127,"byte_end":13156,"line_start":434,"line_end":434,"column_start":5,"column_end":34}},{"value":"/ use std::path::PathBuf;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":13161,"byte_end":13188,"line_start":435,"line_end":435,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":13193,"byte_end":13196,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ use memmap::MmapMut;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":13201,"byte_end":13225,"line_start":437,"line_end":437,"column_start":5,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":13230,"byte_end":13235,"line_start":438,"line_end":438,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":13240,"byte_end":13280,"line_start":439,"line_end":439,"column_start":5,"column_end":45}},{"value":"/ # let tempdir = tempdir::TempDir::new(\"mmap\")?;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":13285,"byte_end":13336,"line_start":440,"line_end":440,"column_start":5,"column_end":56}},{"value":"/ let path: PathBuf = /* path to file */","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":13341,"byte_end":13383,"line_start":441,"line_end":441,"column_start":5,"column_end":47}},{"value":"/ #   tempdir.path().join(\"map_mut\");","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":13388,"byte_end":13427,"line_start":442,"line_end":442,"column_start":5,"column_end":44}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":13432,"byte_end":13465,"line_start":443,"line_end":443,"column_start":5,"column_end":38}},{"value":"/                        .read(true)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":13470,"byte_end":13508,"line_start":444,"line_end":444,"column_start":5,"column_end":43}},{"value":"/                        .write(true)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":13513,"byte_end":13552,"line_start":445,"line_end":445,"column_start":5,"column_end":44}},{"value":"/                        .create(true)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":13557,"byte_end":13597,"line_start":446,"line_end":446,"column_start":5,"column_end":45}},{"value":"/                        .open(&path)?;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":13602,"byte_end":13643,"line_start":447,"line_end":447,"column_start":5,"column_end":46}},{"value":"/ file.set_len(13)?;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":13648,"byte_end":13670,"line_start":448,"line_end":448,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":13675,"byte_end":13678,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ let mut mmap = unsafe { MmapMut::map_mut(&file)? };","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":13683,"byte_end":13738,"line_start":450,"line_end":450,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":13743,"byte_end":13746,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ mmap.copy_from_slice(b\"Hello, world!\");","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":13751,"byte_end":13794,"line_start":452,"line_end":452,"column_start":5,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":13799,"byte_end":13811,"line_start":453,"line_end":453,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":13816,"byte_end":13823,"line_start":454,"line_end":454,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":13828,"byte_end":13835,"line_start":455,"line_end":455,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":14196,"byte_end":14204,"line_start":467,"line_end":467,"column_start":12,"column_end":20},"name":"map_anon","qualname":"<MmapMut>::map_anon","value":"fn (length: usize) -> Result<MmapMut>","parent":null,"children":[],"decl_id":null,"docs":" Creates an anonymous memory map.","sig":null,"attributes":[{"value":"/ Creates an anonymous memory map.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":13948,"byte_end":13984,"line_start":460,"line_end":460,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":13989,"byte_end":13992,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling `MmapOptions::new().len(length).map_anon()`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":13997,"byte_end":14075,"line_start":462,"line_end":462,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":14080,"byte_end":14083,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":14088,"byte_end":14100,"line_start":464,"line_end":464,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":14105,"byte_end":14108,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ This method returns an error when the underlying system call fails.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":14113,"byte_end":14184,"line_start":466,"line_end":466,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":15380,"byte_end":15385,"line_start":503,"line_end":503,"column_start":12,"column_end":17},"name":"flush","qualname":"<MmapMut>::flush","value":"fn (&self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Flushes outstanding memory map modifications to disk.","sig":null,"attributes":[{"value":"/ Flushes outstanding memory map modifications to disk.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":14302,"byte_end":14359,"line_start":471,"line_end":471,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":14364,"byte_end":14367,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ When this method returns with a non-error result, all outstanding changes to a file-backed","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":14372,"byte_end":14466,"line_start":473,"line_end":473,"column_start":5,"column_end":99}},{"value":"/ memory map are guaranteed to be durably stored. The file's metadata (including last","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":14471,"byte_end":14558,"line_start":474,"line_end":474,"column_start":5,"column_end":92}},{"value":"/ modification timestamp) may not be updated.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":14563,"byte_end":14610,"line_start":475,"line_end":475,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":14615,"byte_end":14618,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":14623,"byte_end":14636,"line_start":477,"line_end":477,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":14641,"byte_end":14644,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":14649,"byte_end":14656,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"/ # extern crate memmap;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":14661,"byte_end":14687,"line_start":480,"line_end":480,"column_start":5,"column_end":31}},{"value":"/ # extern crate tempdir;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":14692,"byte_end":14719,"line_start":481,"line_end":481,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":14724,"byte_end":14729,"line_start":482,"line_end":482,"column_start":5,"column_end":10}},{"value":"/ use std::fs::OpenOptions;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":14734,"byte_end":14763,"line_start":483,"line_end":483,"column_start":5,"column_end":34}},{"value":"/ use std::io::Write;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":14768,"byte_end":14791,"line_start":484,"line_end":484,"column_start":5,"column_end":28}},{"value":"/ use std::path::PathBuf;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":14796,"byte_end":14823,"line_start":485,"line_end":485,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":14828,"byte_end":14831,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ use memmap::MmapMut;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":14836,"byte_end":14860,"line_start":487,"line_end":487,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":14865,"byte_end":14868,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":14873,"byte_end":14913,"line_start":489,"line_end":489,"column_start":5,"column_end":45}},{"value":"/ # let tempdir = tempdir::TempDir::new(\"mmap\")?;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":14918,"byte_end":14969,"line_start":490,"line_end":490,"column_start":5,"column_end":56}},{"value":"/ let path: PathBuf = /* path to file */","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":14974,"byte_end":15016,"line_start":491,"line_end":491,"column_start":5,"column_end":47}},{"value":"/ #   tempdir.path().join(\"flush\");","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":15021,"byte_end":15058,"line_start":492,"line_end":492,"column_start":5,"column_end":42}},{"value":"/ let file = OpenOptions::new().read(true).write(true).create(true).open(&path)?;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":15063,"byte_end":15146,"line_start":493,"line_end":493,"column_start":5,"column_end":88}},{"value":"/ file.set_len(128)?;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":15151,"byte_end":15174,"line_start":494,"line_end":494,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":15179,"byte_end":15182,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ let mut mmap = unsafe { MmapMut::map_mut(&file)? };","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":15187,"byte_end":15242,"line_start":496,"line_end":496,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":15247,"byte_end":15250,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ (&mut mmap[..]).write_all(b\"Hello, world!\")?;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":15255,"byte_end":15304,"line_start":498,"line_end":498,"column_start":5,"column_end":54}},{"value":"/ mmap.flush()?;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":15309,"byte_end":15327,"line_start":499,"line_end":499,"column_start":5,"column_end":23}},{"value":"/ # Ok(())","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":15332,"byte_end":15344,"line_start":500,"line_end":500,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":15349,"byte_end":15356,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":15361,"byte_end":15368,"line_start":502,"line_end":502,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":15814,"byte_end":15825,"line_start":513,"line_end":513,"column_start":12,"column_end":23},"name":"flush_async","qualname":"<MmapMut>::flush_async","value":"fn (&self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously flushes outstanding memory map modifications to disk.","sig":null,"attributes":[{"value":"/ Asynchronously flushes outstanding memory map modifications to disk.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":15483,"byte_end":15555,"line_start":508,"line_end":508,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":15560,"byte_end":15563,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ This method initiates flushing modified pages to durable storage, but it will not wait for","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":15568,"byte_end":15662,"line_start":510,"line_end":510,"column_start":5,"column_end":99}},{"value":"/ the operation to complete before returning. The file's metadata (including last","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":15667,"byte_end":15750,"line_start":511,"line_end":511,"column_start":5,"column_end":88}},{"value":"/ modification timestamp) may not be updated.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":15755,"byte_end":15802,"line_start":512,"line_end":512,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":16512,"byte_end":16523,"line_start":527,"line_end":527,"column_start":12,"column_end":23},"name":"flush_range","qualname":"<MmapMut>::flush_range","value":"fn (&self, offset: usize, len: usize) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Flushes outstanding memory map modifications in the range to disk.","sig":null,"attributes":[{"value":"/ Flushes outstanding memory map modifications in the range to disk.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":15929,"byte_end":15999,"line_start":518,"line_end":518,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":16004,"byte_end":16007,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ The offset and length must be in the bounds of the memory map.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":16012,"byte_end":16078,"line_start":520,"line_end":520,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":16083,"byte_end":16086,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ When this method returns with a non-error result, all outstanding changes to a file-backed","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":16091,"byte_end":16185,"line_start":522,"line_end":522,"column_start":5,"column_end":99}},{"value":"/ memory in the range are guaranteed to be durable stored. The file's metadata (including","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":16190,"byte_end":16281,"line_start":523,"line_end":523,"column_start":5,"column_end":96}},{"value":"/ last modification timestamp) may not be updated. It is not guaranteed the only the changes","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":16286,"byte_end":16380,"line_start":524,"line_end":524,"column_start":5,"column_end":99}},{"value":"/ in the specified range are flushed; other outstanding changes to the memory map may be","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":16385,"byte_end":16475,"line_start":525,"line_end":525,"column_start":5,"column_end":95}},{"value":"/ flushed as well.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":16480,"byte_end":16500,"line_start":526,"line_end":526,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":17215,"byte_end":17232,"line_start":540,"line_end":540,"column_start":12,"column_end":29},"name":"flush_async_range","qualname":"<MmapMut>::flush_async_range","value":"fn (&self, offset: usize, len: usize) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously flushes outstanding memory map modifications in the range to disk.","sig":null,"attributes":[{"value":"/ Asynchronously flushes outstanding memory map modifications in the range to disk.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":16623,"byte_end":16708,"line_start":531,"line_end":531,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":16713,"byte_end":16716,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ The offset and length must be in the bounds of the memory map.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":16721,"byte_end":16787,"line_start":533,"line_end":533,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":16792,"byte_end":16795,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ This method initiates flushing modified pages to durable storage, but it will not wait for","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":16800,"byte_end":16894,"line_start":535,"line_end":535,"column_start":5,"column_end":99}},{"value":"/ the operation to complete before returning. The file's metadata (including last","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":16899,"byte_end":16982,"line_start":536,"line_end":536,"column_start":5,"column_end":88}},{"value":"/ modification timestamp) may not be updated. It is not guaranteed that the only changes","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":16987,"byte_end":17077,"line_start":537,"line_end":537,"column_start":5,"column_end":95}},{"value":"/ flushed are those in the specified range; other outstanding changes to the memory map may","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":17082,"byte_end":17175,"line_start":538,"line_end":538,"column_start":5,"column_end":98}},{"value":"/ be flushed as well.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":17180,"byte_end":17203,"line_start":539,"line_end":539,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":18190,"byte_end":18204,"line_start":572,"line_end":572,"column_start":12,"column_end":26},"name":"make_read_only","qualname":"<MmapMut>::make_read_only","value":"fn (mut self) -> Result<Mmap>","parent":null,"children":[],"decl_id":null,"docs":" Returns an immutable version of this memory mapped buffer.","sig":null,"attributes":[{"value":"/ Returns an immutable version of this memory mapped buffer.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":17338,"byte_end":17400,"line_start":544,"line_end":544,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":17405,"byte_end":17408,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ If the memory map is file-backed, the file must have been opened with read permissions.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":17413,"byte_end":17504,"line_start":546,"line_end":546,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":17509,"byte_end":17512,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":17517,"byte_end":17529,"line_start":548,"line_end":548,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":17534,"byte_end":17537,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ This method returns an error when the underlying system call fails, which can happen for a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":17542,"byte_end":17636,"line_start":550,"line_end":550,"column_start":5,"column_end":99}},{"value":"/ variety of reasons, such as when the file has not been opened with read permissions.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":17641,"byte_end":17729,"line_start":551,"line_end":551,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":17734,"byte_end":17737,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":17742,"byte_end":17755,"line_start":553,"line_end":553,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":17760,"byte_end":17763,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":17768,"byte_end":17775,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ # extern crate memmap;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":17780,"byte_end":17806,"line_start":556,"line_end":556,"column_start":5,"column_end":31}},{"value":"/ #","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":17811,"byte_end":17816,"line_start":557,"line_end":557,"column_start":5,"column_end":10}},{"value":"/ use std::io::Write;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":17821,"byte_end":17844,"line_start":558,"line_end":558,"column_start":5,"column_end":28}},{"value":"/ use std::path::PathBuf;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":17849,"byte_end":17876,"line_start":559,"line_end":559,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":17881,"byte_end":17884,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ use memmap::{Mmap, MmapMut};","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":17889,"byte_end":17921,"line_start":561,"line_end":561,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":17926,"byte_end":17929,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":17934,"byte_end":17974,"line_start":563,"line_end":563,"column_start":5,"column_end":45}},{"value":"/ let mut mmap = MmapMut::map_anon(128)?;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":17979,"byte_end":18022,"line_start":564,"line_end":564,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":18027,"byte_end":18030,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ (&mut mmap[..]).write(b\"Hello, world!\")?;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":18035,"byte_end":18080,"line_start":566,"line_end":566,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":18085,"byte_end":18088,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ let mmap: Mmap = mmap.make_read_only()?;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":18093,"byte_end":18137,"line_start":568,"line_end":568,"column_start":5,"column_end":49}},{"value":"/ # Ok(())","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":18142,"byte_end":18154,"line_start":569,"line_end":569,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":18159,"byte_end":18166,"line_start":570,"line_end":570,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":18171,"byte_end":18178,"line_start":571,"line_end":571,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":18728,"byte_end":18737,"line_start":585,"line_end":585,"column_start":12,"column_end":21},"name":"make_exec","qualname":"<MmapMut>::make_exec","value":"fn (mut self) -> Result<Mmap>","parent":null,"children":[],"decl_id":null,"docs":" Transition the memory map to be readable and executable.","sig":null,"attributes":[{"value":"/ Transition the memory map to be readable and executable.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":18321,"byte_end":18381,"line_start":577,"line_end":577,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":18386,"byte_end":18389,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ If the memory map is file-backed, the file must have been opened with execute permissions.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":18394,"byte_end":18488,"line_start":579,"line_end":579,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":18493,"byte_end":18496,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":18501,"byte_end":18513,"line_start":581,"line_end":581,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":18518,"byte_end":18521,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ This method returns an error when the underlying system call fails, which can happen for a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":18526,"byte_end":18620,"line_start":583,"line_end":583,"column_start":5,"column_end":99}},{"value":"/ variety of reasons, such as when the file has not been opened with execute permissions.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":18625,"byte_end":18716,"line_start":584,"line_end":584,"column_start":5,"column_end":96}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/unix.rs","byte_start":30707,"byte_end":30716,"line_start":26,"line_end":26,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/unix.rs","byte_start":35422,"byte_end":35431,"line_start":193,"line_end":193,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/unix.rs","byte_start":35869,"byte_end":35878,"line_start":209,"line_end":209,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/unix.rs","byte_start":35903,"byte_end":35912,"line_start":210,"line_end":210,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":888,"byte_end":899,"line_start":36,"line_end":36,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":9351,"byte_end":9355,"line_start":305,"line_end":305,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":11766,"byte_end":11770,"line_start":382,"line_end":382,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":11950,"byte_end":11954,"line_start":391,"line_end":391,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":12053,"byte_end":12057,"line_start":398,"line_end":398,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":12628,"byte_end":12635,"line_start":418,"line_end":418,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":18862,"byte_end":18869,"line_start":591,"line_end":591,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":19046,"byte_end":19053,"line_start":600,"line_end":600,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":19228,"byte_end":19235,"line_start":607,"line_end":607,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":19335,"byte_end":19342,"line_start":614,"line_end":614,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":19453,"byte_end":19460,"line_start":621,"line_end":621,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/unix.rs","byte_start":30707,"byte_end":30716,"line_start":26,"line_end":26,"column_start":6,"column_end":15},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":13},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/unix.rs","byte_start":35422,"byte_end":35431,"line_start":193,"line_end":193,"column_start":15,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":13},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/unix.rs","byte_start":35869,"byte_end":35878,"line_start":209,"line_end":209,"column_start":22,"column_end":31},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":13},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/unix.rs","byte_start":35903,"byte_end":35912,"line_start":210,"line_end":210,"column_start":22,"column_end":31},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":13},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":888,"byte_end":899,"line_start":36,"line_end":36,"column_start":6,"column_end":17},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":100},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":9351,"byte_end":9355,"line_start":305,"line_end":305,"column_start":6,"column_end":10},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":66},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":11766,"byte_end":11770,"line_start":382,"line_end":382,"column_start":16,"column_end":20},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":2054}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":11950,"byte_end":11954,"line_start":391,"line_end":391,"column_start":22,"column_end":26},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":12053,"byte_end":12057,"line_start":398,"line_end":398,"column_start":21,"column_end":25},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":12628,"byte_end":12635,"line_start":418,"line_end":418,"column_start":6,"column_end":13},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":78},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":18862,"byte_end":18869,"line_start":591,"line_end":591,"column_start":16,"column_end":23},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":78},"to":{"krate":2,"index":2054}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":19046,"byte_end":19053,"line_start":600,"line_end":600,"column_start":19,"column_end":26},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":78},"to":{"krate":2,"index":2065}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":19228,"byte_end":19235,"line_start":607,"line_end":607,"column_start":22,"column_end":29},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":78},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":19335,"byte_end":19342,"line_start":614,"line_end":614,"column_start":22,"column_end":29},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":78},"to":{"krate":2,"index":1801}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.7.0/src/lib.rs","byte_start":19453,"byte_end":19460,"line_start":621,"line_end":621,"column_start":21,"column_end":28},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":78},"to":{"krate":2,"index":5978}}]}