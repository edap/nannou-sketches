{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9","program":"/home/dapx/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","rusttype","--edition=2018","/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=7fa2f5dd4636d1af","-C","extra-filename=-7fa2f5dd4636d1af","--out-dir","/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps","-L","dependency=/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps","--extern","rusttype_next=/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps/librusttype-986f361e31b9b668.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/dapx/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps/librusttype-7fa2f5dd4636d1af.rmeta"},"prelude":{"crate_id":{"name":"rusttype","disambiguator":[14243846864571247546,14119812811183285507]},"crate_root":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src","external_crates":[{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6528836112941390771,2028724122443642861]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14673858572786541001,1892137737928154225]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17117278319981904138,16406771668640906211]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11917984669602857069,6489053565454986112]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12362109612685904499,382626321872987168]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4151571022625212401,1888722734493896023]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4322023011642103678,14222697504055880771]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8420579222726968489,9136630199856205157]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[13745492306750544571,5475822973716876235]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14030493773096865675,2651053314204399788]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[8310449678941769819,14748581810882876583]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17983290995241619958,6056021938633518527]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2836549575564442446,8627689666430273126]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7274711288869898279,15671112109327640352]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","num":15,"id":{"name":"rusttype","disambiguator":[8321851766944748726,10627738263869689343]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","num":16,"id":{"name":"approx","disambiguator":[3974204333726389161,9801222716720129469]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","num":17,"id":{"name":"num_traits","disambiguator":[2136015123687830033,9735163811384062178]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","num":18,"id":{"name":"ordered_float","disambiguator":[11999856798631254802,9466996267134285281]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","num":19,"id":{"name":"linked_hash_map","disambiguator":[2338188053214421811,62691985004639161]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","num":20,"id":{"name":"rustc_hash","disambiguator":[642462796696129389,1517420890865137522]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","num":21,"id":{"name":"crossbeam_deque","disambiguator":[5235303285713816219,1168591414518111885]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","num":22,"id":{"name":"crossbeam_epoch","disambiguator":[17163470530562775512,8709529870593392442]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","num":23,"id":{"name":"cfg_if","disambiguator":[905820604123660737,9080961431952796619]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","num":24,"id":{"name":"maybe_uninit","disambiguator":[9925295721960399709,5075810066591430732]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","num":25,"id":{"name":"crossbeam_utils","disambiguator":[12815700305172623123,14563506393251252287]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","num":26,"id":{"name":"lazy_static","disambiguator":[9660684555614800310,8568331244489293542]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","num":27,"id":{"name":"memoffset","disambiguator":[2892690869131483658,14795605606618073579]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","num":28,"id":{"name":"scopeguard","disambiguator":[5081943333480440636,9076196664652206448]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","num":29,"id":{"name":"stb_truetype","disambiguator":[7859580680744222542,12689058129209723278]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","num":30,"id":{"name":"byteorder","disambiguator":[10719404080946289605,17148540255389135738]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","num":31,"id":{"name":"num_cpus","disambiguator":[5911647018467507976,7042850928943217931]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","num":32,"id":{"name":"libc","disambiguator":[7997064065336242500,8511025302220419458]}}],"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":0,"byte_end":4913,"line_start":1,"line_end":91,"column_start":1,"column_end":26}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":4911,"byte_end":4912,"line_start":91,"line_end":91,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":0,"byte_end":4913,"line_start":1,"line_end":91,"column_start":1,"column_end":26},"name":"","qualname":"::","value":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3}],"decl_id":null,"docs":" RustType is a pure Rust alternative to libraries like FreeType.","sig":null,"attributes":[{"value":"! RustType is a pure Rust alternative to libraries like FreeType.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":0,"byte_end":67,"line_start":1,"line_end":1,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":68,"byte_end":71,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The current capabilities of RustType:","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":72,"byte_end":113,"line_start":3,"line_end":3,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":114,"byte_end":117,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! * Reading TrueType formatted fonts and font collections. This includes","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":118,"byte_end":192,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"!   `*.ttf` as well as a subset of `*.otf` font files.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":193,"byte_end":249,"line_start":6,"line_end":6,"column_start":1,"column_end":57}},{"value":"! * Retrieving glyph shapes and commonly used properties for a font and its","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":250,"byte_end":327,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"!   glyphs.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":328,"byte_end":341,"line_start":8,"line_end":8,"column_start":1,"column_end":14}},{"value":"! * Laying out glyphs horizontally using horizontal and vertical metrics, and","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":342,"byte_end":421,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"!   glyph-pair-specific kerning.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":422,"byte_end":456,"line_start":10,"line_end":10,"column_start":1,"column_end":35}},{"value":"! * Rasterising glyphs with sub-pixel positioning using an accurate analytical","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":457,"byte_end":537,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"!   algorithm (not based on sampling).","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":538,"byte_end":578,"line_start":12,"line_end":12,"column_start":1,"column_end":41}},{"value":"! * Managing a font cache on the GPU with the `gpu_cache` module. This keeps","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":579,"byte_end":657,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"!   recently used glyph renderings in a dynamic cache in GPU memory to","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":658,"byte_end":730,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"!   minimise texture uploads per-frame. It also allows you keep the draw call","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":731,"byte_end":810,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"!   count for text very low, as all glyphs are kept in one GPU texture.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":811,"byte_end":884,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":885,"byte_end":888,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! Notable things that RustType does not support *yet*:","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":889,"byte_end":945,"line_start":18,"line_end":18,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":946,"byte_end":949,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! * OpenType formatted fonts that are not just TrueType fonts (OpenType is a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":950,"byte_end":1028,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"!   superset of TrueType). Notably there is no support yet for cubic Bezier","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":1029,"byte_end":1106,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"!   curves used in glyphs.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":1107,"byte_end":1135,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"! * Font hinting.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":1136,"byte_end":1155,"line_start":23,"line_end":23,"column_start":1,"column_end":20}},{"value":"! * Ligatures of any kind.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":1156,"byte_end":1184,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"! * Some less common TrueType sub-formats.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":1185,"byte_end":1229,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"! * Right-to-left and vertical text layout.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":1230,"byte_end":1275,"line_start":26,"line_end":26,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":1276,"byte_end":1279,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! # Getting Started","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":1280,"byte_end":1301,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":1302,"byte_end":1305,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! To hit the ground running with RustType, look at the `simple.rs` example","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":1306,"byte_end":1382,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"! supplied with the crate. It demonstrates loading a font file, rasterising an","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":1383,"byte_end":1463,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"! arbitrary string, and displaying the result as ASCII art. If you prefer to","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":1464,"byte_end":1542,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"! just look at the documentation, the entry point for loading fonts is","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":1543,"byte_end":1615,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"! `FontCollection`, from which you can access individual fonts, then their","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":1616,"byte_end":1692,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"! glyphs.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":1693,"byte_end":1704,"line_start":35,"line_end":35,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":1705,"byte_end":1708,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"! # Glyphs","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":1709,"byte_end":1721,"line_start":37,"line_end":37,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":1722,"byte_end":1725,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! The glyph API uses wrapper structs to augment a glyph with information such","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":1726,"byte_end":1805,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"! as scaling and positioning, making relevant methods that make use of this","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":1806,"byte_end":1883,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"! information available as appropriate. For example, given a `Glyph` `glyph`","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":1884,"byte_end":1962,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"! obtained directly from a `Font`:","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":1963,"byte_end":1999,"line_start":42,"line_end":42,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":2000,"byte_end":2003,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":2004,"byte_end":2017,"line_start":44,"line_end":44,"column_start":1,"column_end":14}},{"value":"! # use rusttype::*;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":2018,"byte_end":2040,"line_start":45,"line_end":45,"column_start":1,"column_end":23}},{"value":"! # let glyph: Glyph<'static> = unimplemented!();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":2041,"byte_end":2092,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"! // One of the few things you can do with an unsized, positionless glyph is get its id.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":2093,"byte_end":2183,"line_start":47,"line_end":47,"column_start":1,"column_end":91}},{"value":"! let id = glyph.id();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":2184,"byte_end":2208,"line_start":48,"line_end":48,"column_start":1,"column_end":25}},{"value":"! let glyph = glyph.scaled(Scale::uniform(10.0));","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":2209,"byte_end":2260,"line_start":49,"line_end":49,"column_start":1,"column_end":52}},{"value":"! // Now glyph is a ScaledGlyph, you can do more with it, as well as what you can do with Glyph.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":2261,"byte_end":2359,"line_start":50,"line_end":50,"column_start":1,"column_end":99}},{"value":"! // For example, you can access the correctly scaled horizontal metrics for the glyph.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":2360,"byte_end":2449,"line_start":51,"line_end":51,"column_start":1,"column_end":90}},{"value":"! let h_metrics = glyph.h_metrics();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":2450,"byte_end":2488,"line_start":52,"line_end":52,"column_start":1,"column_end":39}},{"value":"! let glyph = glyph.positioned(point(5.0, 3.0));","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":2489,"byte_end":2539,"line_start":53,"line_end":53,"column_start":1,"column_end":51}},{"value":"! // Now glyph is a PositionedGlyph, and you can do even more with it, e.g. drawing.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":2540,"byte_end":2626,"line_start":54,"line_end":54,"column_start":1,"column_end":87}},{"value":"! glyph.draw(|x, y, v| {}); // In this case the pixel values are not used.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":2627,"byte_end":2703,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"! ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":2704,"byte_end":2711,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":2712,"byte_end":2715,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"! # Unicode terminology","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":2716,"byte_end":2741,"line_start":58,"line_end":58,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":2742,"byte_end":2745,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"! This crate uses terminology for computerised typography as specified by the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":2746,"byte_end":2825,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"! Unicode standard. If you are not sure of the differences between a code","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":2826,"byte_end":2901,"line_start":61,"line_end":61,"column_start":1,"column_end":76}},{"value":"! point, a character, and a glyph, you may want to check the [official Unicode","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":2902,"byte_end":2982,"line_start":62,"line_end":62,"column_start":1,"column_end":81}},{"value":"! glossary](http://unicode.org/glossary/), or alternatively, here's my take on","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":2983,"byte_end":3063,"line_start":63,"line_end":63,"column_start":1,"column_end":81}},{"value":"! it from a practical perspective:","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":3064,"byte_end":3100,"line_start":64,"line_end":64,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":3101,"byte_end":3104,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! * A character is what you would conventionally call a single symbol,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":3105,"byte_end":3177,"line_start":66,"line_end":66,"column_start":1,"column_end":73}},{"value":"!   independent of its appearance or representation in a particular font.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":3178,"byte_end":3253,"line_start":67,"line_end":67,"column_start":1,"column_end":76}},{"value":"!   Examples include `a`, `A`, `ä`, `å`, `1`, `*`, `Ω`, etc.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":3254,"byte_end":3319,"line_start":68,"line_end":68,"column_start":1,"column_end":63}},{"value":"! * A Unicode code point is the particular number that the Unicode standard","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":3320,"byte_end":3397,"line_start":69,"line_end":69,"column_start":1,"column_end":78}},{"value":"!   associates with a particular character. Note however that code points also","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":3398,"byte_end":3478,"line_start":70,"line_end":70,"column_start":1,"column_end":81}},{"value":"!   exist for things not conventionally thought of as characters by","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":3479,"byte_end":3548,"line_start":71,"line_end":71,"column_start":1,"column_end":70}},{"value":"!   themselves, but can be combined to form characters, such as diacritics","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":3549,"byte_end":3625,"line_start":72,"line_end":72,"column_start":1,"column_end":77}},{"value":"!   like accents. These \"characters\" are known in Unicode as \"combining","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":3626,"byte_end":3699,"line_start":73,"line_end":73,"column_start":1,"column_end":74}},{"value":"!   characters\". E.g., a diaeresis (`¨`) has the code point U+0308. If this","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":3700,"byte_end":3778,"line_start":74,"line_end":74,"column_start":1,"column_end":78}},{"value":"!   code point follows the code point U+0055 (the letter `u`), this sequence","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":3779,"byte_end":3857,"line_start":75,"line_end":75,"column_start":1,"column_end":79}},{"value":"!   represents the character `ü`. Note that there is also a single codepoint","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":3858,"byte_end":3937,"line_start":76,"line_end":76,"column_start":1,"column_end":79}},{"value":"!   for `ü`, U+00FC. This means that what visually looks like the same string","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":3938,"byte_end":4018,"line_start":77,"line_end":77,"column_start":1,"column_end":80}},{"value":"!   can have multiple different Unicode representations. Some fonts will have","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":4019,"byte_end":4098,"line_start":78,"line_end":78,"column_start":1,"column_end":80}},{"value":"!   glyphs (see below) for one sequence of codepoints, but not another that","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":4099,"byte_end":4176,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"!   has the same meaning. To deal with this problem it is recommended to use","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":4177,"byte_end":4255,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"!   Unicode normalisation, as provided by, for example, the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":4256,"byte_end":4317,"line_start":81,"line_end":81,"column_start":1,"column_end":62}},{"value":"!   [unicode-normalization](http://crates.io/crates/unicode-normalization)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":4318,"byte_end":4394,"line_start":82,"line_end":82,"column_start":1,"column_end":77}},{"value":"!   crate, to convert to code point sequences that work with the font in","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":4395,"byte_end":4469,"line_start":83,"line_end":83,"column_start":1,"column_end":75}},{"value":"!   question. Typically a font is more likely to support a single code point","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":4470,"byte_end":4548,"line_start":84,"line_end":84,"column_start":1,"column_end":79}},{"value":"!   vs. a sequence with the same meaning, so the best normalisation to use is","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":4549,"byte_end":4628,"line_start":85,"line_end":85,"column_start":1,"column_end":80}},{"value":"!   \"canonical recomposition\", known as NFC in the normalisation crate.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":4629,"byte_end":4702,"line_start":86,"line_end":86,"column_start":1,"column_end":74}},{"value":"! * A glyph is a particular font's shape to draw the character for a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":4703,"byte_end":4773,"line_start":87,"line_end":87,"column_start":1,"column_end":71}},{"value":"!   particular Unicode code point. This will have its own identifying number","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":4774,"byte_end":4852,"line_start":88,"line_end":88,"column_start":1,"column_end":79}},{"value":"!   unique to the font, its ID.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.7.9/src/lib.rs","byte_start":4853,"byte_end":4886,"line_start":89,"line_end":89,"column_start":1,"column_end":34}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}