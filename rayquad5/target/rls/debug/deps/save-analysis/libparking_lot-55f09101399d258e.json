{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2","program":"/home/dapx/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","parking_lot","--edition=2018","/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=55f09101399d258e","-C","extra-filename=-55f09101399d258e","--out-dir","/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps","-L","dependency=/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps","--extern","lock_api=/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps/liblock_api-bfd5c0960c03789c.rmeta","--extern","parking_lot_core=/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps/libparking_lot_core-155a0ae22b8f02f9.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/dapx/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps/libparking_lot-55f09101399d258e.rmeta"},"prelude":{"crate_id":{"name":"parking_lot","disambiguator":[16554682812003532951,3232511923212470204]},"crate_root":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src","external_crates":[{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6528836112941390771,2028724122443642861]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","num":2,"id":{"name":"core","disambiguator":[14673858572786541001,1892137737928154225]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17117278319981904138,16406771668640906211]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11917984669602857069,6489053565454986112]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12362109612685904499,382626321872987168]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4151571022625212401,1888722734493896023]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4322023011642103678,14222697504055880771]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8420579222726968489,9136630199856205157]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[13745492306750544571,5475822973716876235]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14030493773096865675,2651053314204399788]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[8310449678941769819,14748581810882876583]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17983290995241619958,6056021938633518527]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2836549575564442446,8627689666430273126]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7274711288869898279,15671112109327640352]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","num":15,"id":{"name":"lock_api","disambiguator":[2863804777762583869,14799884867851676310]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","num":16,"id":{"name":"scopeguard","disambiguator":[5081943333480440636,9076196664652206448]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","num":17,"id":{"name":"parking_lot_core","disambiguator":[17423062282415908726,2925042377433277499]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","num":18,"id":{"name":"cfg_if","disambiguator":[905820604123660737,9080961431952796619]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","num":19,"id":{"name":"smallvec","disambiguator":[8424235311401871579,2024392795712170874]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","num":20,"id":{"name":"libc","disambiguator":[7997064065336242500,8511025302220419458]}}],"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","byte_start":333,"byte_end":1620,"line_start":8,"line_end":48,"column_start":1,"column_end":20}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":30},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","byte_start":947,"byte_end":954,"line_start":33,"line_end":33,"column_start":25,"column_end":32},"alias_span":null,"name":"Condvar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":433},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","byte_start":956,"byte_end":973,"line_start":33,"line_end":33,"column_start":34,"column_end":51},"alias_span":null,"name":"WaitTimeoutResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":72},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","byte_start":1003,"byte_end":1019,"line_start":34,"line_end":34,"column_start":28,"column_end":44},"alias_span":null,"name":"const_fair_mutex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":70},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","byte_start":1021,"byte_end":1030,"line_start":34,"line_end":34,"column_start":46,"column_end":55},"alias_span":null,"name":"FairMutex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":74},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","byte_start":1032,"byte_end":1046,"line_start":34,"line_end":34,"column_start":57,"column_end":71},"alias_span":null,"name":"FairMutexGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":77},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","byte_start":1048,"byte_end":1068,"line_start":34,"line_end":34,"column_start":73,"column_end":93},"alias_span":null,"name":"MappedFairMutexGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":85},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","byte_start":1093,"byte_end":1104,"line_start":35,"line_end":35,"column_start":23,"column_end":34},"alias_span":null,"name":"const_mutex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":90},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","byte_start":1106,"byte_end":1122,"line_start":35,"line_end":35,"column_start":36,"column_end":52},"alias_span":null,"name":"MappedMutexGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":83},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","byte_start":1124,"byte_end":1129,"line_start":35,"line_end":35,"column_start":54,"column_end":59},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":87},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","byte_start":1131,"byte_end":1141,"line_start":35,"line_end":35,"column_start":61,"column_end":71},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":114},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","byte_start":1165,"byte_end":1169,"line_start":36,"line_end":36,"column_start":22,"column_end":26},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":448},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","byte_start":1171,"byte_end":1180,"line_start":36,"line_end":36,"column_start":28,"column_end":37},"alias_span":null,"name":"OnceState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":144},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","byte_start":1213,"byte_end":1225,"line_start":37,"line_end":37,"column_start":31,"column_end":43},"alias_span":null,"name":"RawFairMutex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":185},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","byte_start":1252,"byte_end":1260,"line_start":38,"line_end":38,"column_start":26,"column_end":34},"alias_span":null,"name":"RawMutex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":249},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","byte_start":1288,"byte_end":1297,"line_start":39,"line_end":39,"column_start":27,"column_end":36},"alias_span":null,"name":"RawRwLock","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":353},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","byte_start":1328,"byte_end":1349,"line_start":41,"line_end":41,"column_start":5,"column_end":26},"alias_span":null,"name":"const_reentrant_mutex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":358},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","byte_start":1351,"byte_end":1376,"line_start":41,"line_end":41,"column_start":28,"column_end":53},"alias_span":null,"name":"MappedReentrantMutexGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":345},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","byte_start":1378,"byte_end":1389,"line_start":41,"line_end":41,"column_start":55,"column_end":66},"alias_span":null,"name":"RawThreadId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":351},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","byte_start":1391,"byte_end":1405,"line_start":41,"line_end":41,"column_start":68,"column_end":82},"alias_span":null,"name":"ReentrantMutex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":355},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","byte_start":1411,"byte_end":1430,"line_start":42,"line_end":42,"column_start":5,"column_end":24},"alias_span":null,"name":"ReentrantMutexGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":366},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","byte_start":1463,"byte_end":1475,"line_start":45,"line_end":45,"column_start":5,"column_end":17},"alias_span":null,"name":"const_rwlock","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":374},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","byte_start":1477,"byte_end":1498,"line_start":45,"line_end":45,"column_start":19,"column_end":40},"alias_span":null,"name":"MappedRwLockReadGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":377},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","byte_start":1500,"byte_end":1522,"line_start":45,"line_end":45,"column_start":42,"column_end":64},"alias_span":null,"name":"MappedRwLockWriteGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":364},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","byte_start":1524,"byte_end":1530,"line_start":45,"line_end":45,"column_start":66,"column_end":72},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":368},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","byte_start":1532,"byte_end":1547,"line_start":45,"line_end":45,"column_start":74,"column_end":89},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":380},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","byte_start":1553,"byte_end":1578,"line_start":46,"line_end":46,"column_start":5,"column_end":30},"alias_span":null,"name":"RwLockUpgradableReadGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":371},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","byte_start":1580,"byte_end":1596,"line_start":46,"line_end":46,"column_start":32,"column_end":48},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":0},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","byte_start":1611,"byte_end":1619,"line_start":48,"line_end":48,"column_start":11,"column_end":19},"alias_span":null,"name":"lock_api","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","byte_start":333,"byte_end":1620,"line_start":8,"line_end":48,"column_start":1,"column_end":20},"name":"","qualname":"::","value":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":56},{"krate":0,"index":67},{"krate":0,"index":80},{"krate":0,"index":93},{"krate":0,"index":141},{"krate":0,"index":161},{"krate":0,"index":211},{"krate":0,"index":339},{"krate":0,"index":361},{"krate":0,"index":383},{"krate":0,"index":395},{"krate":0,"index":399},{"krate":0,"index":402},{"krate":0,"index":407},{"krate":0,"index":412},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":424},{"krate":0,"index":432}],"decl_id":null,"docs":" This library provides implementations of `Mutex`, `RwLock`, `Condvar` and\n `Once` that are smaller, faster and more flexible than those in the Rust\n standard library. It also provides a `ReentrantMutex` type.\n","sig":null,"attributes":[{"value":"! This library provides implementations of `Mutex`, `RwLock`, `Condvar` and","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","byte_start":333,"byte_end":410,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"! `Once` that are smaller, faster and more flexible than those in the Rust","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","byte_start":411,"byte_end":487,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"! standard library. It also provides a `ReentrantMutex` type.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","byte_start":488,"byte_end":551,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"warn(missing_docs)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","byte_start":553,"byte_end":575,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/lib.rs","byte_start":576,"byte_end":602,"line_start":13,"line_end":13,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":433},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":2470,"byte_end":2487,"line_start":22,"line_end":22,"column_start":12,"column_end":29},"name":"WaitTimeoutResult","qualname":"::condvar::WaitTimeoutResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type indicating whether a timed wait on a condition variable returned\n due to a time out or not.\n","sig":null,"attributes":[{"value":"/ A type indicating whether a timed wait on a condition variable returned","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":2308,"byte_end":2383,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/ due to a time out or not.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":2384,"byte_end":2413,"line_start":20,"line_end":20,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":2608,"byte_end":2617,"line_start":27,"line_end":27,"column_start":12,"column_end":21},"name":"timed_out","qualname":"<WaitTimeoutResult>::timed_out","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the wait was known to have timed out.\n","sig":null,"attributes":[{"value":"/ Returns whether the wait was known to have timed out.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":2525,"byte_end":2582,"line_start":25,"line_end":25,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":2587,"byte_end":2596,"line_start":26,"line_end":26,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":30},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":5012,"byte_end":5019,"line_start":89,"line_end":89,"column_start":12,"column_end":19},"name":"Condvar","qualname":"::condvar::Condvar","value":"Condvar {  }","parent":null,"children":[{"krate":0,"index":31}],"decl_id":null,"docs":" A Condition Variable","sig":null,"attributes":[{"value":"/ A Condition Variable","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":2658,"byte_end":2682,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":2683,"byte_end":2686,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Condition variables represent the ability to block a thread such that it","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":2687,"byte_end":2763,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ consumes no CPU time while waiting for an event to occur. Condition","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":2764,"byte_end":2835,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"/ variables are typically associated with a boolean predicate (a condition)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":2836,"byte_end":2913,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ and a mutex. The predicate is always verified inside of the mutex before","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":2914,"byte_end":2990,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"/ determining that thread must block.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":2991,"byte_end":3030,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":3031,"byte_end":3034,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Note that this module places one additional restriction over the system","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":3035,"byte_end":3110,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ condition variables: each condvar can be used with only one mutex at a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":3111,"byte_end":3185,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/ time. Any attempt to use multiple mutexes on the same condition variable","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":3186,"byte_end":3262,"line_start":42,"line_end":42,"column_start":1,"column_end":77}},{"value":"/ simultaneously will result in a runtime panic. However it is possible to","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":3263,"byte_end":3339,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ switch to a different mutex if there are no threads currently waiting on","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":3340,"byte_end":3416,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/ the condition variable.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":3417,"byte_end":3444,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":3445,"byte_end":3448,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Differences from the standard library `Condvar`","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":3449,"byte_end":3502,"line_start":47,"line_end":47,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":3503,"byte_end":3506,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ - No spurious wakeups: A wait will only return a non-timeout result if it","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":3507,"byte_end":3584,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/   was woken up by `notify_one` or `notify_all`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":3585,"byte_end":3636,"line_start":50,"line_end":50,"column_start":1,"column_end":52}},{"value":"/ - `Condvar::notify_all` will only wake up a single thread, the rest are","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":3637,"byte_end":3712,"line_start":51,"line_end":51,"column_start":1,"column_end":76}},{"value":"/   requeued to wait for the `Mutex` to be unlocked by the thread that was","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":3713,"byte_end":3789,"line_start":52,"line_end":52,"column_start":1,"column_end":77}},{"value":"/   woken up.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":3790,"byte_end":3805,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/ - Only requires 1 word of space, whereas the standard library boxes the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":3806,"byte_end":3881,"line_start":54,"line_end":54,"column_start":1,"column_end":76}},{"value":"/   `Condvar` due to platform limitations.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":3882,"byte_end":3926,"line_start":55,"line_end":55,"column_start":1,"column_end":45}},{"value":"/ - Can be statically constructed (requires the `const_fn` nightly feature).","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":3927,"byte_end":4005,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ - Does not require any drop glue when dropped.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":4006,"byte_end":4056,"line_start":57,"line_end":57,"column_start":1,"column_end":51}},{"value":"/ - Inline fast path for the uncontended case.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":4057,"byte_end":4105,"line_start":58,"line_end":58,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":4106,"byte_end":4109,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":4110,"byte_end":4124,"line_start":60,"line_end":60,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":4125,"byte_end":4128,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":4129,"byte_end":4136,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ use parking_lot::{Mutex, Condvar};","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":4137,"byte_end":4175,"line_start":63,"line_end":63,"column_start":1,"column_end":39}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":4176,"byte_end":4199,"line_start":64,"line_end":64,"column_start":1,"column_end":24}},{"value":"/ use std::thread;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":4200,"byte_end":4220,"line_start":65,"line_end":65,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":4221,"byte_end":4224,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":4225,"byte_end":4286,"line_start":67,"line_end":67,"column_start":1,"column_end":62}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":4287,"byte_end":4316,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":4317,"byte_end":4320,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // Inside of our lock, spawn a new thread, and then wait for it to start","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":4321,"byte_end":4397,"line_start":70,"line_end":70,"column_start":1,"column_end":77}},{"value":"/ thread::spawn(move|| {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":4398,"byte_end":4424,"line_start":71,"line_end":71,"column_start":1,"column_end":27}},{"value":"/     let &(ref lock, ref cvar) = &*pair2;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":4425,"byte_end":4469,"line_start":72,"line_end":72,"column_start":1,"column_end":45}},{"value":"/     let mut started = lock.lock();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":4470,"byte_end":4508,"line_start":73,"line_end":73,"column_start":1,"column_end":39}},{"value":"/     *started = true;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":4509,"byte_end":4533,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/     cvar.notify_one();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":4534,"byte_end":4560,"line_start":75,"line_end":75,"column_start":1,"column_end":27}},{"value":"/ });","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":4561,"byte_end":4568,"line_start":76,"line_end":76,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":4569,"byte_end":4572,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ // wait for the thread to start up","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":4573,"byte_end":4611,"line_start":78,"line_end":78,"column_start":1,"column_end":39}},{"value":"/ let &(ref lock, ref cvar) = &*pair;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":4612,"byte_end":4651,"line_start":79,"line_end":79,"column_start":1,"column_end":40}},{"value":"/ let mut started = lock.lock();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":4652,"byte_end":4686,"line_start":80,"line_end":80,"column_start":1,"column_end":35}},{"value":"/ if !*started {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":4687,"byte_end":4705,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/     cvar.wait(&mut started);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":4706,"byte_end":4738,"line_start":82,"line_end":82,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":4739,"byte_end":4744,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/ // Note that we used an if instead of a while loop above. This is only","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":4745,"byte_end":4819,"line_start":84,"line_end":84,"column_start":1,"column_end":75}},{"value":"/ // possible because parking_lot's Condvar will never spuriously wake up.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":4820,"byte_end":4896,"line_start":85,"line_end":85,"column_start":1,"column_end":77}},{"value":"/ // This means that wait() will only return after notify_one or notify_all is","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":4897,"byte_end":4977,"line_start":86,"line_end":86,"column_start":1,"column_end":81}},{"value":"/ // called.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":4978,"byte_end":4992,"line_start":87,"line_end":87,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":4993,"byte_end":5000,"line_start":88,"line_end":88,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":5197,"byte_end":5200,"line_start":97,"line_end":97,"column_start":18,"column_end":21},"name":"new","qualname":"<Condvar>::new","value":"fn () -> Condvar","parent":null,"children":[],"decl_id":null,"docs":" Creates a new condition variable which is ready to be waited on and\n notified.\n","sig":null,"attributes":[{"value":"/ Creates a new condition variable which is ready to be waited on and","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":5076,"byte_end":5147,"line_start":94,"line_end":94,"column_start":5,"column_end":76}},{"value":"/ notified.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":5152,"byte_end":5165,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":5170,"byte_end":5179,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":6026,"byte_end":6036,"line_start":127,"line_end":127,"column_start":12,"column_end":22},"name":"notify_one","qualname":"<Condvar>::notify_one","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Wakes up one blocked thread on this condvar.","sig":null,"attributes":[{"value":"/ Wakes up one blocked thread on this condvar.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":5307,"byte_end":5355,"line_start":103,"line_end":103,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":5360,"byte_end":5363,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Returns whether a thread was woken up.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":5368,"byte_end":5410,"line_start":105,"line_end":105,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":5415,"byte_end":5418,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ If there is a blocked thread on this condition variable, then it will","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":5423,"byte_end":5496,"line_start":107,"line_end":107,"column_start":5,"column_end":78}},{"value":"/ be woken up from its call to `wait` or `wait_timeout`. Calls to","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":5501,"byte_end":5568,"line_start":108,"line_end":108,"column_start":5,"column_end":72}},{"value":"/ `notify_one` are not buffered in any way.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":5573,"byte_end":5618,"line_start":109,"line_end":109,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":5623,"byte_end":5626,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ To wake up all threads, see `notify_all()`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":5631,"byte_end":5678,"line_start":111,"line_end":111,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":5683,"byte_end":5686,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":5691,"byte_end":5705,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":5710,"byte_end":5713,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":5718,"byte_end":5725,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ use parking_lot::Condvar;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":5730,"byte_end":5759,"line_start":116,"line_end":116,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":5764,"byte_end":5767,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ let condvar = Condvar::new();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":5772,"byte_end":5805,"line_start":118,"line_end":118,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":5810,"byte_end":5813,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ // do something with condvar, share it with other threads","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":5818,"byte_end":5879,"line_start":120,"line_end":120,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":5884,"byte_end":5887,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ if !condvar.notify_one() {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":5892,"byte_end":5922,"line_start":122,"line_end":122,"column_start":5,"column_end":35}},{"value":"/     println!(\"Nobody was listening for this.\");","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":5927,"byte_end":5978,"line_start":123,"line_end":123,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":5983,"byte_end":5988,"line_start":124,"line_end":124,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":5993,"byte_end":6000,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":6005,"byte_end":6014,"line_start":126,"line_end":126,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":8489,"byte_end":8499,"line_start":188,"line_end":188,"column_start":12,"column_end":22},"name":"notify_all","qualname":"<Condvar>::notify_all","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Wakes up all blocked threads on this condvar.","sig":null,"attributes":[{"value":"/ Wakes up all blocked threads on this condvar.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":8122,"byte_end":8171,"line_start":178,"line_end":178,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":8176,"byte_end":8179,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Returns the number of threads woken up.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":8184,"byte_end":8227,"line_start":180,"line_end":180,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":8232,"byte_end":8235,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ This method will ensure that any current waiters on the condition","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":8240,"byte_end":8309,"line_start":182,"line_end":182,"column_start":5,"column_end":74}},{"value":"/ variable are awoken. Calls to `notify_all()` are not buffered in any","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":8314,"byte_end":8386,"line_start":183,"line_end":183,"column_start":5,"column_end":77}},{"value":"/ way.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":8391,"byte_end":8399,"line_start":184,"line_end":184,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":8404,"byte_end":8407,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ To wake up only one thread, see `notify_one()`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":8412,"byte_end":8463,"line_start":186,"line_end":186,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":8468,"byte_end":8477,"line_start":187,"line_end":187,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":11512,"byte_end":11516,"line_start":258,"line_end":258,"column_start":12,"column_end":16},"name":"wait","qualname":"<Condvar>::wait","value":"fn <T> (&self, mutex_guard: &mut MutexGuard<'_, T>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread until this condition variable receives a\n notification.","sig":null,"attributes":[{"value":"/ Blocks the current thread until this condition variable receives a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":10863,"byte_end":10933,"line_start":244,"line_end":244,"column_start":5,"column_end":75}},{"value":"/ notification.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":10938,"byte_end":10955,"line_start":245,"line_end":245,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":10960,"byte_end":10963,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ This function will atomically unlock the mutex specified (represented by","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":10968,"byte_end":11044,"line_start":247,"line_end":247,"column_start":5,"column_end":81}},{"value":"/ `mutex_guard`) and block the current thread. This means that any calls","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":11049,"byte_end":11123,"line_start":248,"line_end":248,"column_start":5,"column_end":79}},{"value":"/ to `notify_*()` which happen logically after the mutex is unlocked are","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":11128,"byte_end":11202,"line_start":249,"line_end":249,"column_start":5,"column_end":79}},{"value":"/ candidates to wake this thread up. When this function call returns, the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":11207,"byte_end":11282,"line_start":250,"line_end":250,"column_start":5,"column_end":80}},{"value":"/ lock specified will have been re-acquired.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":11287,"byte_end":11333,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":11338,"byte_end":11341,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":11346,"byte_end":11358,"line_start":253,"line_end":253,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":11363,"byte_end":11366,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ This function will panic if another thread is waiting on the `Condvar`","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":11371,"byte_end":11445,"line_start":255,"line_end":255,"column_start":5,"column_end":79}},{"value":"/ with a different `Mutex` object.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":11450,"byte_end":11486,"line_start":256,"line_end":256,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":11491,"byte_end":11500,"line_start":257,"line_end":257,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":12791,"byte_end":12801,"line_start":286,"line_end":286,"column_start":12,"column_end":22},"name":"wait_until","qualname":"<Condvar>::wait_until","value":"fn <T> (&self, mutex_guard: &mut MutexGuard<'_, T>, timeout: Instant) -> WaitTimeoutResult","parent":null,"children":[],"decl_id":null,"docs":" Waits on this condition variable for a notification, timing out after\n the specified time instant.","sig":null,"attributes":[{"value":"/ Waits on this condition variable for a notification, timing out after","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":11674,"byte_end":11747,"line_start":262,"line_end":262,"column_start":5,"column_end":78}},{"value":"/ the specified time instant.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":11752,"byte_end":11783,"line_start":263,"line_end":263,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":11788,"byte_end":11791,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ The semantics of this function are equivalent to `wait()` except that","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":11796,"byte_end":11869,"line_start":265,"line_end":265,"column_start":5,"column_end":78}},{"value":"/ the thread will be blocked roughly until `timeout` is reached. This","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":11874,"byte_end":11945,"line_start":266,"line_end":266,"column_start":5,"column_end":76}},{"value":"/ method should not be used for precise timing due to anomalies such as","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":11950,"byte_end":12023,"line_start":267,"line_end":267,"column_start":5,"column_end":78}},{"value":"/ preemption or platform differences that may not cause the maximum","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":12028,"byte_end":12097,"line_start":268,"line_end":268,"column_start":5,"column_end":74}},{"value":"/ amount of time waited to be precisely `timeout`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":12102,"byte_end":12154,"line_start":269,"line_end":269,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":12159,"byte_end":12162,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ Note that the best effort is made to ensure that the time waited is","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":12167,"byte_end":12238,"line_start":271,"line_end":271,"column_start":5,"column_end":76}},{"value":"/ measured with a monotonic clock, and not affected by the changes made to","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":12243,"byte_end":12319,"line_start":272,"line_end":272,"column_start":5,"column_end":81}},{"value":"/ the system time.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":12324,"byte_end":12344,"line_start":273,"line_end":273,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":12349,"byte_end":12352,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ The returned `WaitTimeoutResult` value indicates if the timeout is","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":12357,"byte_end":12427,"line_start":275,"line_end":275,"column_start":5,"column_end":75}},{"value":"/ known to have elapsed.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":12432,"byte_end":12458,"line_start":276,"line_end":276,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":12463,"byte_end":12466,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Like `wait`, the lock specified will be re-acquired when this function","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":12471,"byte_end":12545,"line_start":278,"line_end":278,"column_start":5,"column_end":79}},{"value":"/ returns, regardless of whether the timeout elapsed or not.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":12550,"byte_end":12612,"line_start":279,"line_end":279,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":12617,"byte_end":12620,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":12625,"byte_end":12637,"line_start":281,"line_end":281,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":12642,"byte_end":12645,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This function will panic if another thread is waiting on the `Condvar`","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":12650,"byte_end":12724,"line_start":283,"line_end":283,"column_start":5,"column_end":79}},{"value":"/ with a different `Mutex` object.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":12729,"byte_end":12765,"line_start":284,"line_end":284,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":12770,"byte_end":12779,"line_start":285,"line_end":285,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":17195,"byte_end":17203,"line_start":390,"line_end":390,"column_start":12,"column_end":20},"name":"wait_for","qualname":"<Condvar>::wait_for","value":"fn <T> (&self, mutex_guard: &mut MutexGuard<'_, T>, timeout: Duration) -> WaitTimeoutResult","parent":null,"children":[],"decl_id":null,"docs":" Waits on this condition variable for a notification, timing out after a\n specified duration.","sig":null,"attributes":[{"value":"/ Waits on this condition variable for a notification, timing out after a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":15945,"byte_end":16020,"line_start":365,"line_end":365,"column_start":5,"column_end":80}},{"value":"/ specified duration.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":16025,"byte_end":16048,"line_start":366,"line_end":366,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":16053,"byte_end":16056,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ The semantics of this function are equivalent to `wait()` except that","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":16061,"byte_end":16134,"line_start":368,"line_end":368,"column_start":5,"column_end":78}},{"value":"/ the thread will be blocked for roughly no longer than `timeout`. This","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":16139,"byte_end":16212,"line_start":369,"line_end":369,"column_start":5,"column_end":78}},{"value":"/ method should not be used for precise timing due to anomalies such as","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":16217,"byte_end":16290,"line_start":370,"line_end":370,"column_start":5,"column_end":78}},{"value":"/ preemption or platform differences that may not cause the maximum","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":16295,"byte_end":16364,"line_start":371,"line_end":371,"column_start":5,"column_end":74}},{"value":"/ amount of time waited to be precisely `timeout`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":16369,"byte_end":16421,"line_start":372,"line_end":372,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":16426,"byte_end":16429,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ Note that the best effort is made to ensure that the time waited is","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":16434,"byte_end":16505,"line_start":374,"line_end":374,"column_start":5,"column_end":76}},{"value":"/ measured with a monotonic clock, and not affected by the changes made to","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":16510,"byte_end":16586,"line_start":375,"line_end":375,"column_start":5,"column_end":81}},{"value":"/ the system time.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":16591,"byte_end":16611,"line_start":376,"line_end":376,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":16616,"byte_end":16619,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ The returned `WaitTimeoutResult` value indicates if the timeout is","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":16624,"byte_end":16694,"line_start":378,"line_end":378,"column_start":5,"column_end":75}},{"value":"/ known to have elapsed.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":16699,"byte_end":16725,"line_start":379,"line_end":379,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":16730,"byte_end":16733,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ Like `wait`, the lock specified will be re-acquired when this function","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":16738,"byte_end":16812,"line_start":381,"line_end":381,"column_start":5,"column_end":79}},{"value":"/ returns, regardless of whether the timeout elapsed or not.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":16817,"byte_end":16879,"line_start":382,"line_end":382,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":16884,"byte_end":16887,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":16892,"byte_end":16904,"line_start":384,"line_end":384,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":16909,"byte_end":16912,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ Panics if the given `timeout` is so large that it can't be added to the current time.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":16917,"byte_end":17006,"line_start":386,"line_end":386,"column_start":5,"column_end":94}},{"value":"/ This panic is not possible if the crate is built with the `nightly` feature, then a too","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":17011,"byte_end":17102,"line_start":387,"line_end":387,"column_start":5,"column_end":96}},{"value":"/ large `timeout` becomes equivalent to just calling `wait`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":17107,"byte_end":17169,"line_start":388,"line_end":388,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":17174,"byte_end":17183,"line_start":389,"line_end":389,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":59},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/elision.rs","byte_start":37292,"byte_end":37299,"line_start":12,"line_end":12,"column_start":10,"column_end":17},"name":"IntType","qualname":"::elision::AtomicElisionExt::IntType","value":"type IntType;","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":70},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":44051,"byte_end":44060,"line_start":81,"line_end":81,"column_start":10,"column_end":19},"name":"FairMutex","qualname":"::fair_mutex::FairMutex","value":"lock_api::Mutex<RawFairMutex, T>","parent":null,"children":[],"decl_id":null,"docs":" A mutual exclusive primitive that is always fair, useful for protecting shared data","sig":null,"attributes":[{"value":"/ A mutual exclusive primitive that is always fair, useful for protecting shared data","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":40884,"byte_end":40971,"line_start":11,"line_end":11,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":40972,"byte_end":40975,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This mutex will block threads waiting for the lock to become available. The","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":40976,"byte_end":41055,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ mutex can also be statically initialized or created via a `new`","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":41056,"byte_end":41123,"line_start":14,"line_end":14,"column_start":1,"column_end":68}},{"value":"/ constructor. Each mutex has a type parameter which represents the data that","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":41124,"byte_end":41203,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ it is protecting. The data can only be accessed through the RAII guards","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":41204,"byte_end":41279,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ returned from `lock` and `try_lock`, which guarantees that the data is only","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":41280,"byte_end":41359,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ ever accessed when the mutex is locked.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":41360,"byte_end":41403,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":41404,"byte_end":41407,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The regular mutex provided by `parking_lot` uses eventual locking fairness","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":41408,"byte_end":41486,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ (after some time it will default to the fair algorithm), but eventual","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":41487,"byte_end":41560,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/ fairness does not provide the same garantees a always fair method would.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":41561,"byte_end":41637,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ Fair mutexes are generally slower, but sometimes needed. This wrapper was","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":41638,"byte_end":41715,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ created to avoid using a unfair protocol when it's forbidden by mistake.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":41716,"byte_end":41792,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":41793,"byte_end":41796,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ In a fair mutex the lock is provided to whichever thread asked first,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":41797,"byte_end":41870,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/ they form a queue and always follow the first-in first-out order. This","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":41871,"byte_end":41945,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ means some thread in the queue won't be able to steal the lock and use it fast","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":41946,"byte_end":42028,"line_start":28,"line_end":28,"column_start":1,"column_end":83}},{"value":"/ to increase throughput, at the cost of latency. Since the response time will grow","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":42029,"byte_end":42114,"line_start":29,"line_end":29,"column_start":1,"column_end":86}},{"value":"/ for some threads that are waiting for the lock and losing to faster but later ones,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":42115,"byte_end":42202,"line_start":30,"line_end":30,"column_start":1,"column_end":88}},{"value":"/ but it may make sending more responses possible.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":42203,"byte_end":42255,"line_start":31,"line_end":31,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":42256,"byte_end":42259,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ A fair mutex may not be interesting if threads have different priorities (this is known as","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":42260,"byte_end":42354,"line_start":33,"line_end":33,"column_start":1,"column_end":95}},{"value":"/ priority inversion).","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":42355,"byte_end":42379,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":42380,"byte_end":42383,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Differences from the standard library `Mutex`","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":42384,"byte_end":42435,"line_start":36,"line_end":36,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":42436,"byte_end":42439,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ - No poisoning, the lock is released normally on panic.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":42440,"byte_end":42499,"line_start":38,"line_end":38,"column_start":1,"column_end":60}},{"value":"/ - Only requires 1 byte of space, whereas the standard library boxes the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":42500,"byte_end":42575,"line_start":39,"line_end":39,"column_start":1,"column_end":76}},{"value":"/   `FairMutex` due to platform limitations.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":42576,"byte_end":42622,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/ - Can be statically constructed (requires the `const_fn` nightly feature).","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":42623,"byte_end":42701,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ - Does not require any drop glue when dropped.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":42702,"byte_end":42752,"line_start":42,"line_end":42,"column_start":1,"column_end":51}},{"value":"/ - Inline fast path for the uncontended case.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":42753,"byte_end":42801,"line_start":43,"line_end":43,"column_start":1,"column_end":49}},{"value":"/ - Efficient handling of micro-contention using adaptive spinning.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":42802,"byte_end":42871,"line_start":44,"line_end":44,"column_start":1,"column_end":70}},{"value":"/ - Allows raw locking & unlocking without a guard.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":42872,"byte_end":42925,"line_start":45,"line_end":45,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":42926,"byte_end":42929,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":42930,"byte_end":42944,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":42945,"byte_end":42948,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":42949,"byte_end":42956,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/ use parking_lot::FairMutex;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":42957,"byte_end":42988,"line_start":50,"line_end":50,"column_start":1,"column_end":32}},{"value":"/ use std::sync::{Arc, mpsc::channel};","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":42989,"byte_end":43029,"line_start":51,"line_end":51,"column_start":1,"column_end":41}},{"value":"/ use std::thread;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":43030,"byte_end":43050,"line_start":52,"line_end":52,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":43051,"byte_end":43054,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ const N: usize = 10;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":43055,"byte_end":43079,"line_start":54,"line_end":54,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":43080,"byte_end":43083,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Spawn a few threads to increment a shared variable (non-atomically), and","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":43084,"byte_end":43163,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/ // let the main thread know once all increments are done.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":43164,"byte_end":43225,"line_start":57,"line_end":57,"column_start":1,"column_end":62}},{"value":"/ //","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":43226,"byte_end":43232,"line_start":58,"line_end":58,"column_start":1,"column_end":7}},{"value":"/ // Here we're using an Arc to share memory among threads, and the data inside","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":43233,"byte_end":43314,"line_start":59,"line_end":59,"column_start":1,"column_end":82}},{"value":"/ // the Arc is protected with a mutex.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":43315,"byte_end":43356,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/ let data = Arc::new(FairMutex::new(0));","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":43357,"byte_end":43400,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":43401,"byte_end":43404,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ let (tx, rx) = channel();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":43405,"byte_end":43434,"line_start":63,"line_end":63,"column_start":1,"column_end":30}},{"value":"/ for _ in 0..10 {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":43435,"byte_end":43455,"line_start":64,"line_end":64,"column_start":1,"column_end":21}},{"value":"/     let (data, tx) = (Arc::clone(&data), tx.clone());","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":43456,"byte_end":43513,"line_start":65,"line_end":65,"column_start":1,"column_end":58}},{"value":"/     thread::spawn(move || {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":43514,"byte_end":43545,"line_start":66,"line_end":66,"column_start":1,"column_end":32}},{"value":"/         // The shared state can only be accessed once the lock is held.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":43546,"byte_end":43621,"line_start":67,"line_end":67,"column_start":1,"column_end":76}},{"value":"/         // Our non-atomic increment is safe because we're the only thread","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":43622,"byte_end":43699,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"/         // which can access the shared state when the lock is held.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":43700,"byte_end":43771,"line_start":69,"line_end":69,"column_start":1,"column_end":72}},{"value":"/         let mut data = data.lock();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":43772,"byte_end":43811,"line_start":70,"line_end":70,"column_start":1,"column_end":40}},{"value":"/         *data += 1;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":43812,"byte_end":43835,"line_start":71,"line_end":71,"column_start":1,"column_end":24}},{"value":"/         if *data == N {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":43836,"byte_end":43863,"line_start":72,"line_end":72,"column_start":1,"column_end":28}},{"value":"/             tx.send(()).unwrap();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":43864,"byte_end":43901,"line_start":73,"line_end":73,"column_start":1,"column_end":38}},{"value":"/         }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":43902,"byte_end":43915,"line_start":74,"line_end":74,"column_start":1,"column_end":14}},{"value":"/         // the lock is unlocked here when `data` goes out of scope.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":43916,"byte_end":43987,"line_start":75,"line_end":75,"column_start":1,"column_end":72}},{"value":"/     });","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":43988,"byte_end":43999,"line_start":76,"line_end":76,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":44000,"byte_end":44005,"line_start":77,"line_end":77,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":44006,"byte_end":44009,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ rx.recv().unwrap();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":44010,"byte_end":44033,"line_start":79,"line_end":79,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":44034,"byte_end":44041,"line_start":80,"line_end":80,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":72},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":44259,"byte_end":44275,"line_start":86,"line_end":86,"column_start":14,"column_end":30},"name":"const_fair_mutex","qualname":"::fair_mutex::const_fair_mutex","value":"fn <T> (val: T) -> FairMutex<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new fair mutex in an unlocked state ready for use.","sig":null,"attributes":[{"value":"/ Creates a new fair mutex in an unlocked state ready for use.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":44101,"byte_end":44165,"line_start":83,"line_end":83,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":44166,"byte_end":44169,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ This allows creating a fair mutex in a constant context on stable Rust.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":44170,"byte_end":44245,"line_start":85,"line_end":85,"column_start":1,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":74},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":44660,"byte_end":44674,"line_start":95,"line_end":95,"column_start":10,"column_end":24},"name":"FairMutexGuard","qualname":"::fair_mutex::FairMutexGuard","value":"lock_api::MutexGuard<'a, RawFairMutex, T>","parent":null,"children":[],"decl_id":null,"docs":" An RAII implementation of a \"scoped lock\" of a mutex. When this structure is\n dropped (falls out of scope), the lock will be unlocked.","sig":null,"attributes":[{"value":"/ An RAII implementation of a \"scoped lock\" of a mutex. When this structure is","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":44382,"byte_end":44462,"line_start":90,"line_end":90,"column_start":1,"column_end":81}},{"value":"/ dropped (falls out of scope), the lock will be unlocked.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":44463,"byte_end":44523,"line_start":91,"line_end":91,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":44524,"byte_end":44527,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ The data protected by the mutex can be accessed through this guard via its","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":44528,"byte_end":44606,"line_start":93,"line_end":93,"column_start":1,"column_end":79}},{"value":"/ `Deref` and `DerefMut` implementations.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":44607,"byte_end":44650,"line_start":94,"line_end":94,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":77},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":45114,"byte_end":45134,"line_start":104,"line_end":104,"column_start":10,"column_end":30},"name":"MappedFairMutexGuard","qualname":"::fair_mutex::MappedFairMutexGuard","value":"lock_api::MappedMutexGuard<'a, RawFairMutex, T>","parent":null,"children":[],"decl_id":null,"docs":" An RAII mutex guard returned by `FairMutexGuard::map`, which can point to a\n subfield of the protected data.","sig":null,"attributes":[{"value":"/ An RAII mutex guard returned by `FairMutexGuard::map`, which can point to a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":44728,"byte_end":44807,"line_start":97,"line_end":97,"column_start":1,"column_end":80}},{"value":"/ subfield of the protected data.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":44808,"byte_end":44843,"line_start":98,"line_end":98,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":44844,"byte_end":44847,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ The main difference between `MappedFairMutexGuard` and `FairMutexGuard` is that the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":44848,"byte_end":44935,"line_start":100,"line_end":100,"column_start":1,"column_end":88}},{"value":"/ former doesn't support temporarily unlocking and re-locking, since that","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":44936,"byte_end":45011,"line_start":101,"line_end":101,"column_start":1,"column_end":76}},{"value":"/ could introduce soundness issues if the locked object is modified by another","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":45012,"byte_end":45092,"line_start":102,"line_end":102,"column_start":1,"column_end":81}},{"value":"/ thread.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/fair_mutex.rs","byte_start":45093,"byte_end":45104,"line_start":103,"line_end":103,"column_start":1,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":83},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":53429,"byte_end":53434,"line_start":87,"line_end":87,"column_start":10,"column_end":15},"name":"Mutex","qualname":"::mutex::Mutex","value":"lock_api::Mutex<RawMutex, T>","parent":null,"children":[],"decl_id":null,"docs":" A mutual exclusion primitive useful for protecting shared data","sig":null,"attributes":[{"value":"/ A mutual exclusion primitive useful for protecting shared data","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":50054,"byte_end":50120,"line_start":11,"line_end":11,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":50121,"byte_end":50124,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This mutex will block threads waiting for the lock to become available. The","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":50125,"byte_end":50204,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ mutex can also be statically initialized or created via a `new`","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":50205,"byte_end":50272,"line_start":14,"line_end":14,"column_start":1,"column_end":68}},{"value":"/ constructor. Each mutex has a type parameter which represents the data that","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":50273,"byte_end":50352,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ it is protecting. The data can only be accessed through the RAII guards","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":50353,"byte_end":50428,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ returned from `lock` and `try_lock`, which guarantees that the data is only","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":50429,"byte_end":50508,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ ever accessed when the mutex is locked.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":50509,"byte_end":50552,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":50553,"byte_end":50556,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Fairness","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":50557,"byte_end":50571,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":50572,"byte_end":50575,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ A typical unfair lock can often end up in a situation where a single thread","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":50576,"byte_end":50655,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ quickly acquires and releases the same mutex in succession, which can starve","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":50656,"byte_end":50736,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ other threads waiting to acquire the mutex. While this improves performance","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":50737,"byte_end":50816,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ because it doesn't force a context switch when a thread tries to re-acquire","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":50817,"byte_end":50896,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ a mutex it has just released, this can starve other threads.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":50897,"byte_end":50961,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":50962,"byte_end":50965,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This mutex uses [eventual fairness](https://trac.webkit.org/changeset/203350)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":50966,"byte_end":51047,"line_start":28,"line_end":28,"column_start":1,"column_end":82}},{"value":"/ to ensure that the lock will be fair on average without sacrificing","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":51048,"byte_end":51119,"line_start":29,"line_end":29,"column_start":1,"column_end":72}},{"value":"/ performance. This is done by forcing a fair unlock on average every 0.5ms,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":51120,"byte_end":51198,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ which will force the lock to go to the next thread waiting for the mutex.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":51199,"byte_end":51276,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":51277,"byte_end":51280,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Additionally, any critical section longer than 1ms will always use a fair","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":51281,"byte_end":51358,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ unlock, which has a negligible performance impact compared to the length of","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":51359,"byte_end":51438,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ the critical section.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":51439,"byte_end":51464,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":51465,"byte_end":51468,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ You can also force a fair unlock by calling `MutexGuard::unlock_fair` when","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":51469,"byte_end":51547,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ unlocking a mutex instead of simply dropping the `MutexGuard`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":51548,"byte_end":51614,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":51615,"byte_end":51618,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Differences from the standard library `Mutex`","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":51619,"byte_end":51670,"line_start":40,"line_end":40,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":51671,"byte_end":51674,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ - No poisoning, the lock is released normally on panic.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":51675,"byte_end":51734,"line_start":42,"line_end":42,"column_start":1,"column_end":60}},{"value":"/ - Only requires 1 byte of space, whereas the standard library boxes the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":51735,"byte_end":51810,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/   `Mutex` due to platform limitations.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":51811,"byte_end":51853,"line_start":44,"line_end":44,"column_start":1,"column_end":43}},{"value":"/ - Can be statically constructed (requires the `const_fn` nightly feature).","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":51854,"byte_end":51932,"line_start":45,"line_end":45,"column_start":1,"column_end":79}},{"value":"/ - Does not require any drop glue when dropped.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":51933,"byte_end":51983,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ - Inline fast path for the uncontended case.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":51984,"byte_end":52032,"line_start":47,"line_end":47,"column_start":1,"column_end":49}},{"value":"/ - Efficient handling of micro-contention using adaptive spinning.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":52033,"byte_end":52102,"line_start":48,"line_end":48,"column_start":1,"column_end":70}},{"value":"/ - Allows raw locking & unlocking without a guard.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":52103,"byte_end":52156,"line_start":49,"line_end":49,"column_start":1,"column_end":54}},{"value":"/ - Supports eventual fairness so that the mutex is fair on average.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":52157,"byte_end":52227,"line_start":50,"line_end":50,"column_start":1,"column_end":71}},{"value":"/ - Optionally allows making the mutex fair by calling `MutexGuard::unlock_fair`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":52228,"byte_end":52311,"line_start":51,"line_end":51,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":52312,"byte_end":52315,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":52316,"byte_end":52330,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":52331,"byte_end":52334,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":52335,"byte_end":52342,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use parking_lot::Mutex;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":52343,"byte_end":52370,"line_start":56,"line_end":56,"column_start":1,"column_end":28}},{"value":"/ use std::sync::{Arc, mpsc::channel};","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":52371,"byte_end":52411,"line_start":57,"line_end":57,"column_start":1,"column_end":41}},{"value":"/ use std::thread;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":52412,"byte_end":52432,"line_start":58,"line_end":58,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":52433,"byte_end":52436,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ const N: usize = 10;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":52437,"byte_end":52461,"line_start":60,"line_end":60,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":52462,"byte_end":52465,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // Spawn a few threads to increment a shared variable (non-atomically), and","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":52466,"byte_end":52545,"line_start":62,"line_end":62,"column_start":1,"column_end":80}},{"value":"/ // let the main thread know once all increments are done.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":52546,"byte_end":52607,"line_start":63,"line_end":63,"column_start":1,"column_end":62}},{"value":"/ //","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":52608,"byte_end":52614,"line_start":64,"line_end":64,"column_start":1,"column_end":7}},{"value":"/ // Here we're using an Arc to share memory among threads, and the data inside","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":52615,"byte_end":52696,"line_start":65,"line_end":65,"column_start":1,"column_end":82}},{"value":"/ // the Arc is protected with a mutex.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":52697,"byte_end":52738,"line_start":66,"line_end":66,"column_start":1,"column_end":42}},{"value":"/ let data = Arc::new(Mutex::new(0));","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":52739,"byte_end":52778,"line_start":67,"line_end":67,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":52779,"byte_end":52782,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ let (tx, rx) = channel();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":52783,"byte_end":52812,"line_start":69,"line_end":69,"column_start":1,"column_end":30}},{"value":"/ for _ in 0..10 {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":52813,"byte_end":52833,"line_start":70,"line_end":70,"column_start":1,"column_end":21}},{"value":"/     let (data, tx) = (Arc::clone(&data), tx.clone());","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":52834,"byte_end":52891,"line_start":71,"line_end":71,"column_start":1,"column_end":58}},{"value":"/     thread::spawn(move || {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":52892,"byte_end":52923,"line_start":72,"line_end":72,"column_start":1,"column_end":32}},{"value":"/         // The shared state can only be accessed once the lock is held.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":52924,"byte_end":52999,"line_start":73,"line_end":73,"column_start":1,"column_end":76}},{"value":"/         // Our non-atomic increment is safe because we're the only thread","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":53000,"byte_end":53077,"line_start":74,"line_end":74,"column_start":1,"column_end":78}},{"value":"/         // which can access the shared state when the lock is held.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":53078,"byte_end":53149,"line_start":75,"line_end":75,"column_start":1,"column_end":72}},{"value":"/         let mut data = data.lock();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":53150,"byte_end":53189,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/         *data += 1;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":53190,"byte_end":53213,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/         if *data == N {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":53214,"byte_end":53241,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/             tx.send(()).unwrap();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":53242,"byte_end":53279,"line_start":79,"line_end":79,"column_start":1,"column_end":38}},{"value":"/         }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":53280,"byte_end":53293,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/         // the lock is unlocked here when `data` goes out of scope.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":53294,"byte_end":53365,"line_start":81,"line_end":81,"column_start":1,"column_end":72}},{"value":"/     });","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":53366,"byte_end":53377,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":53378,"byte_end":53383,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":53384,"byte_end":53387,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ rx.recv().unwrap();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":53388,"byte_end":53411,"line_start":85,"line_end":85,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":53412,"byte_end":53419,"line_start":86,"line_end":86,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":85},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":53619,"byte_end":53630,"line_start":92,"line_end":92,"column_start":14,"column_end":25},"name":"const_mutex","qualname":"::mutex::const_mutex","value":"fn <T> (val: T) -> Mutex<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new mutex in an unlocked state ready for use.","sig":null,"attributes":[{"value":"/ Creates a new mutex in an unlocked state ready for use.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":53471,"byte_end":53530,"line_start":89,"line_end":89,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":53531,"byte_end":53534,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ This allows creating a mutex in a constant context on stable Rust.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":53535,"byte_end":53605,"line_start":91,"line_end":91,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":87},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":54003,"byte_end":54013,"line_start":101,"line_end":101,"column_start":10,"column_end":20},"name":"MutexGuard","qualname":"::mutex::MutexGuard","value":"lock_api::MutexGuard<'a, RawMutex, T>","parent":null,"children":[],"decl_id":null,"docs":" An RAII implementation of a \"scoped lock\" of a mutex. When this structure is\n dropped (falls out of scope), the lock will be unlocked.","sig":null,"attributes":[{"value":"/ An RAII implementation of a \"scoped lock\" of a mutex. When this structure is","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":53725,"byte_end":53805,"line_start":96,"line_end":96,"column_start":1,"column_end":81}},{"value":"/ dropped (falls out of scope), the lock will be unlocked.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":53806,"byte_end":53866,"line_start":97,"line_end":97,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":53867,"byte_end":53870,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ The data protected by the mutex can be accessed through this guard via its","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":53871,"byte_end":53949,"line_start":99,"line_end":99,"column_start":1,"column_end":79}},{"value":"/ `Deref` and `DerefMut` implementations.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":53950,"byte_end":53993,"line_start":100,"line_end":100,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":90},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":54437,"byte_end":54453,"line_start":110,"line_end":110,"column_start":10,"column_end":26},"name":"MappedMutexGuard","qualname":"::mutex::MappedMutexGuard","value":"lock_api::MappedMutexGuard<'a, RawMutex, T>","parent":null,"children":[],"decl_id":null,"docs":" An RAII mutex guard returned by `MutexGuard::map`, which can point to a\n subfield of the protected data.","sig":null,"attributes":[{"value":"/ An RAII mutex guard returned by `MutexGuard::map`, which can point to a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":54063,"byte_end":54138,"line_start":103,"line_end":103,"column_start":1,"column_end":76}},{"value":"/ subfield of the protected data.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":54139,"byte_end":54174,"line_start":104,"line_end":104,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":54175,"byte_end":54178,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ The main difference between `MappedMutexGuard` and `MutexGuard` is that the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":54179,"byte_end":54258,"line_start":106,"line_end":106,"column_start":1,"column_end":80}},{"value":"/ former doesn't support temporarily unlocking and re-locking, since that","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":54259,"byte_end":54334,"line_start":107,"line_end":107,"column_start":1,"column_end":76}},{"value":"/ could introduce soundness issues if the locked object is modified by another","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":54335,"byte_end":54415,"line_start":108,"line_end":108,"column_start":1,"column_end":81}},{"value":"/ thread.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/mutex.rs","byte_start":54416,"byte_end":54427,"line_start":109,"line_end":109,"column_start":1,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":449},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":60537,"byte_end":60540,"line_start":24,"line_end":24,"column_start":5,"column_end":8},"name":"New","qualname":"::once::OnceState::New","value":"OnceState::New","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":" A closure has not been executed yet\n","sig":null,"attributes":[{"value":"/ A closure has not been executed yet","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":60493,"byte_end":60532,"line_start":23,"line_end":23,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":451},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":60592,"byte_end":60600,"line_start":27,"line_end":27,"column_start":5,"column_end":13},"name":"Poisoned","qualname":"::once::OnceState::Poisoned","value":"OnceState::Poisoned","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":" A closure was executed but panicked.\n","sig":null,"attributes":[{"value":"/ A closure was executed but panicked.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":60547,"byte_end":60587,"line_start":26,"line_end":26,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":453},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":60658,"byte_end":60668,"line_start":30,"line_end":30,"column_start":5,"column_end":15},"name":"InProgress","qualname":"::once::OnceState::InProgress","value":"OnceState::InProgress","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":" A thread is currently executing a closure.\n","sig":null,"attributes":[{"value":"/ A thread is currently executing a closure.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":60607,"byte_end":60653,"line_start":29,"line_end":29,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":455},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":60721,"byte_end":60725,"line_start":33,"line_end":33,"column_start":5,"column_end":9},"name":"Done","qualname":"::once::OnceState::Done","value":"OnceState::Done","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":" A closure has completed successfully.\n","sig":null,"attributes":[{"value":"/ A closure has completed successfully.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":60675,"byte_end":60716,"line_start":32,"line_end":32,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":448},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":60477,"byte_end":60486,"line_start":22,"line_end":22,"column_start":10,"column_end":19},"name":"OnceState","qualname":"::once::OnceState","value":"OnceState::{New, Poisoned, InProgress, Done}","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":451},{"krate":0,"index":453},{"krate":0,"index":455}],"decl_id":null,"docs":" Current state of a `Once`.\n","sig":null,"attributes":[{"value":"/ Current state of a `Once`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":60392,"byte_end":60422,"line_start":20,"line_end":20,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":61005,"byte_end":61013,"line_start":42,"line_end":42,"column_start":12,"column_end":20},"name":"poisoned","qualname":"<OnceState>::poisoned","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the associated `Once` has been poisoned.","sig":null,"attributes":[{"value":"/ Returns whether the associated `Once` has been poisoned.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":60751,"byte_end":60811,"line_start":37,"line_end":37,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":60816,"byte_end":60819,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ Once an initialization routine for a `Once` has panicked it will forever","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":60824,"byte_end":60900,"line_start":39,"line_end":39,"column_start":5,"column_end":81}},{"value":"/ indicate to future forced initialization routines that it is poisoned.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":60905,"byte_end":60979,"line_start":40,"line_end":40,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":60984,"byte_end":60993,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":61249,"byte_end":61253,"line_start":52,"line_end":52,"column_start":12,"column_end":16},"name":"done","qualname":"<OnceState>::done","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the associated `Once` has successfully executed a\n closure.\n","sig":null,"attributes":[{"value":"/ Returns whether the associated `Once` has successfully executed a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":61137,"byte_end":61206,"line_start":49,"line_end":49,"column_start":5,"column_end":74}},{"value":"/ closure.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":61211,"byte_end":61223,"line_start":50,"line_end":50,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":61228,"byte_end":61237,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":114},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":62074,"byte_end":62078,"line_start":83,"line_end":83,"column_start":12,"column_end":16},"name":"Once","qualname":"::once::Once","value":"","parent":null,"children":[],"decl_id":null,"docs":" A synchronization primitive which can be used to run a one-time\n initialization. Useful for one-time initialization for globals, FFI or\n related functionality.","sig":null,"attributes":[{"value":"/ A synchronization primitive which can be used to run a one-time","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":61371,"byte_end":61438,"line_start":60,"line_end":60,"column_start":1,"column_end":68}},{"value":"/ initialization. Useful for one-time initialization for globals, FFI or","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":61439,"byte_end":61513,"line_start":61,"line_end":61,"column_start":1,"column_end":75}},{"value":"/ related functionality.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":61514,"byte_end":61540,"line_start":62,"line_end":62,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":61541,"byte_end":61544,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ # Differences from the standard library `Once`","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":61545,"byte_end":61595,"line_start":64,"line_end":64,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":61596,"byte_end":61599,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ - Only requires 1 byte of space, instead of 1 word.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":61600,"byte_end":61655,"line_start":66,"line_end":66,"column_start":1,"column_end":56}},{"value":"/ - Not required to be `'static`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":61656,"byte_end":61691,"line_start":67,"line_end":67,"column_start":1,"column_end":36}},{"value":"/ - Relaxed memory barriers in the fast path, which can significantly improve","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":61692,"byte_end":61771,"line_start":68,"line_end":68,"column_start":1,"column_end":80}},{"value":"/   performance on some architectures.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":61772,"byte_end":61812,"line_start":69,"line_end":69,"column_start":1,"column_end":41}},{"value":"/ - Efficient handling of micro-contention using adaptive spinning.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":61813,"byte_end":61882,"line_start":70,"line_end":70,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":61883,"byte_end":61886,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":61887,"byte_end":61901,"line_start":72,"line_end":72,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":61902,"byte_end":61905,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":61906,"byte_end":61913,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ use parking_lot::Once;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":61914,"byte_end":61940,"line_start":75,"line_end":75,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":61941,"byte_end":61944,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ static START: Once = Once::new();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":61945,"byte_end":61982,"line_start":77,"line_end":77,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":61983,"byte_end":61986,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ START.call_once(|| {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":61987,"byte_end":62011,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/     // run initialization here","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":62012,"byte_end":62046,"line_start":80,"line_end":80,"column_start":1,"column_end":35}},{"value":"/ });","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":62047,"byte_end":62054,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":62055,"byte_end":62062,"line_start":82,"line_end":82,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":62170,"byte_end":62173,"line_start":88,"line_end":88,"column_start":18,"column_end":21},"name":"new","qualname":"<Once>::new","value":"fn () -> Once","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Once` value.\n","sig":null,"attributes":[{"value":"/ Creates a new `Once` value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":62107,"byte_end":62138,"line_start":86,"line_end":86,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":62143,"byte_end":62152,"line_start":87,"line_end":87,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":62299,"byte_end":62304,"line_start":94,"line_end":94,"column_start":12,"column_end":17},"name":"state","qualname":"<Once>::state","value":"fn (&self) -> OnceState","parent":null,"children":[],"decl_id":null,"docs":" Returns the current state of this `Once`.\n","sig":null,"attributes":[{"value":"/ Returns the current state of this `Once`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":62228,"byte_end":62273,"line_start":92,"line_end":92,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":62278,"byte_end":62287,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":64577,"byte_end":64586,"line_start":157,"line_end":157,"column_start":12,"column_end":21},"name":"call_once","qualname":"<Once>::call_once","value":"fn <F> (&self, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Performs an initialization routine once and only once. The given closure\n will be executed if this is the first time `call_once` has been called,\n and otherwise the routine will *not* be invoked.","sig":null,"attributes":[{"value":"/ Performs an initialization routine once and only once. The given closure","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":62661,"byte_end":62737,"line_start":107,"line_end":107,"column_start":5,"column_end":81}},{"value":"/ will be executed if this is the first time `call_once` has been called,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":62742,"byte_end":62817,"line_start":108,"line_end":108,"column_start":5,"column_end":80}},{"value":"/ and otherwise the routine will *not* be invoked.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":62822,"byte_end":62874,"line_start":109,"line_end":109,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":62879,"byte_end":62882,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ This method will block the calling thread if another initialization","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":62887,"byte_end":62958,"line_start":111,"line_end":111,"column_start":5,"column_end":76}},{"value":"/ routine is currently running.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":62963,"byte_end":62996,"line_start":112,"line_end":112,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":63001,"byte_end":63004,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ When this function returns, it is guaranteed that some initialization","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":63009,"byte_end":63082,"line_start":114,"line_end":114,"column_start":5,"column_end":78}},{"value":"/ has run and completed (it may not be the closure specified). It is also","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":63087,"byte_end":63162,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/ guaranteed that any memory writes performed by the executed closure can","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":63167,"byte_end":63242,"line_start":116,"line_end":116,"column_start":5,"column_end":80}},{"value":"/ be reliably observed by other threads at this point (there is a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":63247,"byte_end":63314,"line_start":117,"line_end":117,"column_start":5,"column_end":72}},{"value":"/ happens-before relation between the closure and code executing after the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":63319,"byte_end":63395,"line_start":118,"line_end":118,"column_start":5,"column_end":81}},{"value":"/ return).","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":63400,"byte_end":63412,"line_start":119,"line_end":119,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":63417,"byte_end":63420,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":63425,"byte_end":63439,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":63444,"byte_end":63447,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":63452,"byte_end":63459,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use parking_lot::Once;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":63464,"byte_end":63490,"line_start":124,"line_end":124,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":63495,"byte_end":63498,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ static mut VAL: usize = 0;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":63503,"byte_end":63533,"line_start":126,"line_end":126,"column_start":5,"column_end":35}},{"value":"/ static INIT: Once = Once::new();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":63538,"byte_end":63574,"line_start":127,"line_end":127,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":63579,"byte_end":63582,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ // Accessing a `static mut` is unsafe much of the time, but if we do so","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":63587,"byte_end":63662,"line_start":129,"line_end":129,"column_start":5,"column_end":80}},{"value":"/ // in a synchronized fashion (e.g. write once or read all) then we're","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":63667,"byte_end":63740,"line_start":130,"line_end":130,"column_start":5,"column_end":78}},{"value":"/ // good to go!","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":63745,"byte_end":63763,"line_start":131,"line_end":131,"column_start":5,"column_end":23}},{"value":"/ //","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":63768,"byte_end":63774,"line_start":132,"line_end":132,"column_start":5,"column_end":11}},{"value":"/ // This function will only call `expensive_computation` once, and will","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":63779,"byte_end":63853,"line_start":133,"line_end":133,"column_start":5,"column_end":79}},{"value":"/ // otherwise always return the value returned from the first invocation.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":63858,"byte_end":63934,"line_start":134,"line_end":134,"column_start":5,"column_end":81}},{"value":"/ fn get_cached_val() -> usize {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":63939,"byte_end":63973,"line_start":135,"line_end":135,"column_start":5,"column_end":39}},{"value":"/     unsafe {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":63978,"byte_end":63994,"line_start":136,"line_end":136,"column_start":5,"column_end":21}},{"value":"/         INIT.call_once(|| {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":63999,"byte_end":64030,"line_start":137,"line_end":137,"column_start":5,"column_end":36}},{"value":"/             VAL = expensive_computation();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":64035,"byte_end":64081,"line_start":138,"line_end":138,"column_start":5,"column_end":51}},{"value":"/         });","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":64086,"byte_end":64101,"line_start":139,"line_end":139,"column_start":5,"column_end":20}},{"value":"/         VAL","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":64106,"byte_end":64121,"line_start":140,"line_end":140,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":64126,"byte_end":64135,"line_start":141,"line_end":141,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":64140,"byte_end":64145,"line_start":142,"line_end":142,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":64150,"byte_end":64153,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ fn expensive_computation() -> usize {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":64158,"byte_end":64199,"line_start":144,"line_end":144,"column_start":5,"column_end":46}},{"value":"/     // ...","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":64204,"byte_end":64218,"line_start":145,"line_end":145,"column_start":5,"column_end":19}},{"value":"/ # 2","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":64223,"byte_end":64230,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":64235,"byte_end":64240,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":64245,"byte_end":64252,"line_start":148,"line_end":148,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":64257,"byte_end":64260,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":64265,"byte_end":64277,"line_start":150,"line_end":150,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":64282,"byte_end":64285,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ The closure `f` will only be executed once if this is called","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":64290,"byte_end":64354,"line_start":152,"line_end":152,"column_start":5,"column_end":69}},{"value":"/ concurrently amongst many threads. If that closure panics, however, then","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":64359,"byte_end":64435,"line_start":153,"line_end":153,"column_start":5,"column_end":81}},{"value":"/ it will *poison* this `Once` instance, causing all future invocations of","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":64440,"byte_end":64516,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/ `call_once` to also panic.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":64521,"byte_end":64551,"line_start":155,"line_end":155,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":64556,"byte_end":64565,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":65337,"byte_end":65352,"line_start":179,"line_end":179,"column_start":12,"column_end":27},"name":"call_once_force","qualname":"<Once>::call_once_force","value":"fn <F> (&self, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Performs the same function as `call_once` except ignores poisoning.","sig":null,"attributes":[{"value":"/ Performs the same function as `call_once` except ignores poisoning.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":64854,"byte_end":64925,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":64930,"byte_end":64933,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If this `Once` has been poisoned (some initialization panicked) then","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":64938,"byte_end":65010,"line_start":171,"line_end":171,"column_start":5,"column_end":77}},{"value":"/ this function will continue to attempt to call initialization functions","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":65015,"byte_end":65090,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ until one of them doesn't panic.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":65095,"byte_end":65131,"line_start":173,"line_end":173,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":65136,"byte_end":65139,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is yielded a structure which can be used to query the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":65144,"byte_end":65217,"line_start":175,"line_end":175,"column_start":5,"column_end":78}},{"value":"/ state of this `Once` (whether initialization has previously panicked or","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":65222,"byte_end":65297,"line_start":176,"line_end":176,"column_start":5,"column_end":80}},{"value":"/ not).","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":65302,"byte_end":65311,"line_start":177,"line_end":177,"column_start":5,"column_end":14}},{"value":"inline","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":65316,"byte_end":65325,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":144},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_fair_mutex.rs","byte_start":74151,"byte_end":74163,"line_start":12,"line_end":12,"column_start":12,"column_end":24},"name":"RawFairMutex","qualname":"::raw_fair_mutex::RawFairMutex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Raw fair mutex type backed by the parking lot.\n","sig":null,"attributes":[{"value":"/ Raw fair mutex type backed by the parking lot.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_fair_mutex.rs","byte_start":74089,"byte_end":74139,"line_start":11,"line_end":11,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":185},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_mutex.rs","byte_start":76619,"byte_end":76627,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"RawMutex","qualname":"::raw_mutex::RawMutex","value":"RawMutex {  }","parent":null,"children":[{"krate":0,"index":186}],"decl_id":null,"docs":" Raw mutex type backed by the parking lot.\n","sig":null,"attributes":[{"value":"/ Raw mutex type backed by the parking lot.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_mutex.rs","byte_start":76562,"byte_end":76607,"line_start":31,"line_end":31,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":249},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_rwlock.rs","byte_start":89463,"byte_end":89472,"line_start":55,"line_end":55,"column_start":12,"column_end":21},"name":"RawRwLock","qualname":"::raw_rwlock::RawRwLock","value":"RawRwLock {  }","parent":null,"children":[{"krate":0,"index":250}],"decl_id":null,"docs":" Raw reader-writer lock type backed by the parking lot.\n","sig":null,"attributes":[{"value":"/ Raw reader-writer lock type backed by the parking lot.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_rwlock.rs","byte_start":89393,"byte_end":89451,"line_start":54,"line_end":54,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":345},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/remutex.rs","byte_start":125156,"byte_end":125167,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"RawThreadId","qualname":"::remutex::RawThreadId","value":"","parent":null,"children":[],"decl_id":null,"docs":" Implementation of the `GetThreadId` trait for `lock_api::ReentrantMutex`.\n","sig":null,"attributes":[{"value":"/ Implementation of the `GetThreadId` trait for `lock_api::ReentrantMutex`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/remutex.rs","byte_start":125067,"byte_end":125144,"line_start":12,"line_end":12,"column_start":1,"column_end":78}}]},{"kind":"Type","id":{"krate":0,"index":351},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/remutex.rs","byte_start":126238,"byte_end":126252,"line_start":41,"line_end":41,"column_start":10,"column_end":24},"name":"ReentrantMutex","qualname":"::remutex::ReentrantMutex","value":"lock_api::ReentrantMutex<RawMutex, RawThreadId, T>","parent":null,"children":[],"decl_id":null,"docs":" A mutex which can be recursively locked by a single thread.","sig":null,"attributes":[{"value":"/ A mutex which can be recursively locked by a single thread.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/remutex.rs","byte_start":125767,"byte_end":125830,"line_start":30,"line_end":30,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/remutex.rs","byte_start":125831,"byte_end":125834,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This type is identical to `Mutex` except for the following points:","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/remutex.rs","byte_start":125835,"byte_end":125905,"line_start":32,"line_end":32,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/remutex.rs","byte_start":125906,"byte_end":125909,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ - Locking multiple times from the same thread will work correctly instead of","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/remutex.rs","byte_start":125910,"byte_end":125990,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/   deadlocking.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/remutex.rs","byte_start":125991,"byte_end":126009,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/ - `ReentrantMutexGuard` does not give mutable references to the locked data.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/remutex.rs","byte_start":126010,"byte_end":126090,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"/   Use a `RefCell` if you need this.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/remutex.rs","byte_start":126091,"byte_end":126130,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/remutex.rs","byte_start":126131,"byte_end":126134,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ See [`Mutex`](type.Mutex.html) for more details about the underlying mutex","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/remutex.rs","byte_start":126135,"byte_end":126213,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ primitive.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/remutex.rs","byte_start":126214,"byte_end":126228,"line_start":40,"line_end":40,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":353},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/remutex.rs","byte_start":126479,"byte_end":126500,"line_start":46,"line_end":46,"column_start":14,"column_end":35},"name":"const_reentrant_mutex","qualname":"::remutex::const_reentrant_mutex","value":"fn <T> (val: T) -> ReentrantMutex<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new reentrant mutex in an unlocked state ready for use.","sig":null,"attributes":[{"value":"/ Creates a new reentrant mutex in an unlocked state ready for use.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/remutex.rs","byte_start":126311,"byte_end":126380,"line_start":43,"line_end":43,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/remutex.rs","byte_start":126381,"byte_end":126384,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ This allows creating a reentrant mutex in a constant context on stable Rust.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/remutex.rs","byte_start":126385,"byte_end":126465,"line_start":45,"line_end":45,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":355},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/remutex.rs","byte_start":126962,"byte_end":126981,"line_start":59,"line_end":59,"column_start":10,"column_end":29},"name":"ReentrantMutexGuard","qualname":"::remutex::ReentrantMutexGuard","value":"lock_api::ReentrantMutexGuard<'a, RawMutex, RawThreadId, T>","parent":null,"children":[],"decl_id":null,"docs":" An RAII implementation of a \"scoped lock\" of a reentrant mutex. When this structure\n is dropped (falls out of scope), the lock will be unlocked.","sig":null,"attributes":[{"value":"/ An RAII implementation of a \"scoped lock\" of a reentrant mutex. When this structure","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/remutex.rs","byte_start":126690,"byte_end":126777,"line_start":54,"line_end":54,"column_start":1,"column_end":88}},{"value":"/ is dropped (falls out of scope), the lock will be unlocked.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/remutex.rs","byte_start":126778,"byte_end":126841,"line_start":55,"line_end":55,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/remutex.rs","byte_start":126842,"byte_end":126845,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ The data protected by the mutex can be accessed through this guard via its","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/remutex.rs","byte_start":126846,"byte_end":126924,"line_start":57,"line_end":57,"column_start":1,"column_end":79}},{"value":"/ `Deref` implementation.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/remutex.rs","byte_start":126925,"byte_end":126952,"line_start":58,"line_end":58,"column_start":1,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":358},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/remutex.rs","byte_start":127454,"byte_end":127479,"line_start":68,"line_end":68,"column_start":10,"column_end":35},"name":"MappedReentrantMutexGuard","qualname":"::remutex::MappedReentrantMutexGuard","value":"lock_api::MappedReentrantMutexGuard<'a, RawMutex, RawThreadId, T>","parent":null,"children":[],"decl_id":null,"docs":" An RAII mutex guard returned by `ReentrantMutexGuard::map`, which can point to a\n subfield of the protected data.","sig":null,"attributes":[{"value":"/ An RAII mutex guard returned by `ReentrantMutexGuard::map`, which can point to a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/remutex.rs","byte_start":127053,"byte_end":127137,"line_start":61,"line_end":61,"column_start":1,"column_end":85}},{"value":"/ subfield of the protected data.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/remutex.rs","byte_start":127138,"byte_end":127173,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/remutex.rs","byte_start":127174,"byte_end":127177,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ The main difference between `MappedReentrantMutexGuard` and `ReentrantMutexGuard` is that the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/remutex.rs","byte_start":127178,"byte_end":127275,"line_start":64,"line_end":64,"column_start":1,"column_end":98}},{"value":"/ former doesn't support temporarily unlocking and re-locking, since that","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/remutex.rs","byte_start":127276,"byte_end":127351,"line_start":65,"line_end":65,"column_start":1,"column_end":76}},{"value":"/ could introduce soundness issues if the locked object is modified by another","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/remutex.rs","byte_start":127352,"byte_end":127432,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/ thread.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/remutex.rs","byte_start":127433,"byte_end":127444,"line_start":67,"line_end":67,"column_start":1,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":364},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":133536,"byte_end":133542,"line_start":89,"line_end":89,"column_start":10,"column_end":16},"name":"RwLock","qualname":"::rwlock::RwLock","value":"lock_api::RwLock<RawRwLock, T>","parent":null,"children":[],"decl_id":null,"docs":" A reader-writer lock","sig":null,"attributes":[{"value":"/ A reader-writer lock","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":129977,"byte_end":130001,"line_start":11,"line_end":11,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":130002,"byte_end":130005,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This type of lock allows a number of readers or at most one writer at any","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":130006,"byte_end":130083,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ point in time. The write portion of this lock typically allows modification","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":130084,"byte_end":130163,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ of the underlying data (exclusive access) and the read portion of this lock","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":130164,"byte_end":130243,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ typically allows for read-only access (shared access).","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":130244,"byte_end":130302,"line_start":16,"line_end":16,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":130303,"byte_end":130306,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This lock uses a task-fair locking policy which avoids both reader and","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":130307,"byte_end":130381,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ writer starvation. This means that readers trying to acquire the lock will","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":130382,"byte_end":130460,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ block even if the lock is unlocked when there are writers waiting to acquire","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":130461,"byte_end":130541,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ the lock. Because of this, attempts to recursively acquire a read lock","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":130542,"byte_end":130616,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ within a single thread may result in a deadlock.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":130617,"byte_end":130669,"line_start":22,"line_end":22,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":130670,"byte_end":130673,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The type parameter `T` represents the data that this lock protects. It is","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":130674,"byte_end":130751,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ required that `T` satisfies `Send` to be shared across threads and `Sync` to","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":130752,"byte_end":130832,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ allow concurrent access through readers. The RAII guards returned from the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":130833,"byte_end":130911,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ locking methods implement `Deref` (and `DerefMut` for the `write` methods)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":130912,"byte_end":130990,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ to allow access to the contained of the lock.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":130991,"byte_end":131040,"line_start":28,"line_end":28,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":131041,"byte_end":131044,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Fairness","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":131045,"byte_end":131059,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":131060,"byte_end":131063,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ A typical unfair lock can often end up in a situation where a single thread","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":131064,"byte_end":131143,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ quickly acquires and releases the same lock in succession, which can starve","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":131144,"byte_end":131223,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ other threads waiting to acquire the rwlock. While this improves performance","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":131224,"byte_end":131304,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ because it doesn't force a context switch when a thread tries to re-acquire","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":131305,"byte_end":131384,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ a rwlock it has just released, this can starve other threads.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":131385,"byte_end":131450,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":131451,"byte_end":131454,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ This rwlock uses [eventual fairness](https://trac.webkit.org/changeset/203350)","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":131455,"byte_end":131537,"line_start":38,"line_end":38,"column_start":1,"column_end":83}},{"value":"/ to ensure that the lock will be fair on average without sacrificing","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":131538,"byte_end":131609,"line_start":39,"line_end":39,"column_start":1,"column_end":72}},{"value":"/ performance. This is done by forcing a fair unlock on average every 0.5ms,","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":131610,"byte_end":131688,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/ which will force the lock to go to the next thread waiting for the rwlock.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":131689,"byte_end":131767,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":131768,"byte_end":131771,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Additionally, any critical section longer than 1ms will always use a fair","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":131772,"byte_end":131849,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ unlock, which has a negligible performance impact compared to the length of","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":131850,"byte_end":131929,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ the critical section.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":131930,"byte_end":131955,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":131956,"byte_end":131959,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ You can also force a fair unlock by calling `RwLockReadGuard::unlock_fair`","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":131960,"byte_end":132038,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"/ or `RwLockWriteGuard::unlock_fair` when unlocking a mutex instead of simply","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":132039,"byte_end":132118,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ dropping the guard.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":132119,"byte_end":132142,"line_start":49,"line_end":49,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":132143,"byte_end":132146,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Differences from the standard library `RwLock`","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":132147,"byte_end":132199,"line_start":51,"line_end":51,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":132200,"byte_end":132203,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ - Supports atomically downgrading a write lock into a read lock.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":132204,"byte_end":132272,"line_start":53,"line_end":53,"column_start":1,"column_end":69}},{"value":"/ - Task-fair locking policy instead of an unspecified platform default.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":132273,"byte_end":132347,"line_start":54,"line_end":54,"column_start":1,"column_end":75}},{"value":"/ - No poisoning, the lock is released normally on panic.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":132348,"byte_end":132407,"line_start":55,"line_end":55,"column_start":1,"column_end":60}},{"value":"/ - Only requires 1 word of space, whereas the standard library boxes the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":132408,"byte_end":132483,"line_start":56,"line_end":56,"column_start":1,"column_end":76}},{"value":"/   `RwLock` due to platform limitations.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":132484,"byte_end":132527,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/ - Can be statically constructed (requires the `const_fn` nightly feature).","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":132528,"byte_end":132606,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ - Does not require any drop glue when dropped.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":132607,"byte_end":132657,"line_start":59,"line_end":59,"column_start":1,"column_end":51}},{"value":"/ - Inline fast path for the uncontended case.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":132658,"byte_end":132706,"line_start":60,"line_end":60,"column_start":1,"column_end":49}},{"value":"/ - Efficient handling of micro-contention using adaptive spinning.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":132707,"byte_end":132776,"line_start":61,"line_end":61,"column_start":1,"column_end":70}},{"value":"/ - Allows raw locking & unlocking without a guard.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":132777,"byte_end":132830,"line_start":62,"line_end":62,"column_start":1,"column_end":54}},{"value":"/ - Supports eventual fairness so that the rwlock is fair on average.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":132831,"byte_end":132902,"line_start":63,"line_end":63,"column_start":1,"column_end":72}},{"value":"/ - Optionally allows making the rwlock fair by calling","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":132903,"byte_end":132960,"line_start":64,"line_end":64,"column_start":1,"column_end":58}},{"value":"/   `RwLockReadGuard::unlock_fair` and `RwLockWriteGuard::unlock_fair`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":132961,"byte_end":133034,"line_start":65,"line_end":65,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":133035,"byte_end":133038,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":133039,"byte_end":133053,"line_start":67,"line_end":67,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":133054,"byte_end":133057,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":133058,"byte_end":133065,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ use parking_lot::RwLock;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":133066,"byte_end":133094,"line_start":70,"line_end":70,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":133095,"byte_end":133098,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":133099,"byte_end":133129,"line_start":72,"line_end":72,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":133130,"byte_end":133133,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ // many reader locks can be held at once","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":133134,"byte_end":133178,"line_start":74,"line_end":74,"column_start":1,"column_end":45}},{"value":"/ {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":133179,"byte_end":133184,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/     let r1 = lock.read();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":133185,"byte_end":133214,"line_start":76,"line_end":76,"column_start":1,"column_end":30}},{"value":"/     let r2 = lock.read();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":133215,"byte_end":133244,"line_start":77,"line_end":77,"column_start":1,"column_end":30}},{"value":"/     assert_eq!(*r1, 5);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":133245,"byte_end":133272,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/     assert_eq!(*r2, 5);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":133273,"byte_end":133300,"line_start":79,"line_end":79,"column_start":1,"column_end":28}},{"value":"/ } // read locks are dropped at this point","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":133301,"byte_end":133346,"line_start":80,"line_end":80,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":133347,"byte_end":133350,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ // only one write lock may be held, however","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":133351,"byte_end":133398,"line_start":82,"line_end":82,"column_start":1,"column_end":48}},{"value":"/ {","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":133399,"byte_end":133404,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/     let mut w = lock.write();","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":133405,"byte_end":133438,"line_start":84,"line_end":84,"column_start":1,"column_end":34}},{"value":"/     *w += 1;","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":133439,"byte_end":133455,"line_start":85,"line_end":85,"column_start":1,"column_end":17}},{"value":"/     assert_eq!(*w, 6);","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":133456,"byte_end":133482,"line_start":86,"line_end":86,"column_start":1,"column_end":27}},{"value":"/ } // write lock is dropped here","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":133483,"byte_end":133518,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":133519,"byte_end":133526,"line_start":88,"line_end":88,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":366},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":133739,"byte_end":133751,"line_start":94,"line_end":94,"column_start":14,"column_end":26},"name":"const_rwlock","qualname":"::rwlock::const_rwlock","value":"fn <T> (val: T) -> RwLock<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":133581,"byte_end":133644,"line_start":91,"line_end":91,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":133645,"byte_end":133648,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ This allows creating a `RwLock<T>` in a constant context on stable Rust.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":133649,"byte_end":133725,"line_start":93,"line_end":93,"column_start":1,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":368},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":133945,"byte_end":133960,"line_start":100,"line_end":100,"column_start":10,"column_end":25},"name":"RwLockReadGuard","qualname":"::rwlock::RwLockReadGuard","value":"lock_api::RwLockReadGuard<'a, RawRwLock, T>","parent":null,"children":[],"decl_id":null,"docs":" RAII structure used to release the shared read access of a lock when\n dropped.\n","sig":null,"attributes":[{"value":"/ RAII structure used to release the shared read access of a lock when","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":133850,"byte_end":133922,"line_start":98,"line_end":98,"column_start":1,"column_end":73}},{"value":"/ dropped.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":133923,"byte_end":133935,"line_start":99,"line_end":99,"column_start":1,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":371},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":134115,"byte_end":134131,"line_start":104,"line_end":104,"column_start":10,"column_end":26},"name":"RwLockWriteGuard","qualname":"::rwlock::RwLockWriteGuard","value":"lock_api::RwLockWriteGuard<'a, RawRwLock, T>","parent":null,"children":[],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.\n","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":134016,"byte_end":134092,"line_start":102,"line_end":102,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":134093,"byte_end":134105,"line_start":103,"line_end":103,"column_start":1,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":374},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":134581,"byte_end":134602,"line_start":113,"line_end":113,"column_start":10,"column_end":31},"name":"MappedRwLockReadGuard","qualname":"::rwlock::MappedRwLockReadGuard","value":"lock_api::MappedRwLockReadGuard<'a, RawRwLock, T>","parent":null,"children":[],"decl_id":null,"docs":" An RAII read lock guard returned by `RwLockReadGuard::map`, which can point to a\n subfield of the protected data.","sig":null,"attributes":[{"value":"/ An RAII read lock guard returned by `RwLockReadGuard::map`, which can point to a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":134188,"byte_end":134272,"line_start":106,"line_end":106,"column_start":1,"column_end":85}},{"value":"/ subfield of the protected data.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":134273,"byte_end":134308,"line_start":107,"line_end":107,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":134309,"byte_end":134312,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ The main difference between `MappedRwLockReadGuard` and `RwLockReadGuard` is that the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":134313,"byte_end":134402,"line_start":109,"line_end":109,"column_start":1,"column_end":90}},{"value":"/ former doesn't support temporarily unlocking and re-locking, since that","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":134403,"byte_end":134478,"line_start":110,"line_end":110,"column_start":1,"column_end":76}},{"value":"/ could introduce soundness issues if the locked object is modified by another","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":134479,"byte_end":134559,"line_start":111,"line_end":111,"column_start":1,"column_end":81}},{"value":"/ thread.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":134560,"byte_end":134571,"line_start":112,"line_end":112,"column_start":1,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":377},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":135061,"byte_end":135083,"line_start":122,"line_end":122,"column_start":10,"column_end":32},"name":"MappedRwLockWriteGuard","qualname":"::rwlock::MappedRwLockWriteGuard","value":"lock_api::MappedRwLockWriteGuard<'a, RawRwLock, T>","parent":null,"children":[],"decl_id":null,"docs":" An RAII write lock guard returned by `RwLockWriteGuard::map`, which can point to a\n subfield of the protected data.","sig":null,"attributes":[{"value":"/ An RAII write lock guard returned by `RwLockWriteGuard::map`, which can point to a","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":134664,"byte_end":134750,"line_start":115,"line_end":115,"column_start":1,"column_end":87}},{"value":"/ subfield of the protected data.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":134751,"byte_end":134786,"line_start":116,"line_end":116,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":134787,"byte_end":134790,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ The main difference between `MappedRwLockWriteGuard` and `RwLockWriteGuard` is that the","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":134791,"byte_end":134882,"line_start":118,"line_end":118,"column_start":1,"column_end":92}},{"value":"/ former doesn't support temporarily unlocking and re-locking, since that","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":134883,"byte_end":134958,"line_start":119,"line_end":119,"column_start":1,"column_end":76}},{"value":"/ could introduce soundness issues if the locked object is modified by another","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":134959,"byte_end":135039,"line_start":120,"line_end":120,"column_start":1,"column_end":81}},{"value":"/ thread.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":135040,"byte_end":135051,"line_start":121,"line_end":121,"column_start":1,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":380},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":135245,"byte_end":135270,"line_start":126,"line_end":126,"column_start":10,"column_end":35},"name":"RwLockUpgradableReadGuard","qualname":"::rwlock::RwLockUpgradableReadGuard","value":"lock_api::RwLockUpgradableReadGuard<'a, RawRwLock, T>","parent":null,"children":[],"decl_id":null,"docs":" RAII structure used to release the upgradable read access of a lock when\n dropped.\n","sig":null,"attributes":[{"value":"/ RAII structure used to release the upgradable read access of a lock when","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":135146,"byte_end":135222,"line_start":124,"line_end":124,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/rwlock.rs","byte_start":135223,"byte_end":135235,"line_start":125,"line_end":125,"column_start":1,"column_end":13}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":2501,"byte_end":2518,"line_start":24,"line_end":24,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":5062,"byte_end":5069,"line_start":93,"line_end":93,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":17501,"byte_end":17508,"line_start":400,"line_end":400,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":17607,"byte_end":17614,"line_start":407,"line_end":407,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/elision.rs","byte_start":38080,"byte_end":38091,"line_start":37,"line_end":37,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":60735,"byte_end":60744,"line_start":36,"line_end":36,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":62096,"byte_end":62100,"line_start":85,"line_end":85,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":69191,"byte_end":69201,"line_start":282,"line_end":282,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":70443,"byte_end":70447,"line_start":318,"line_end":318,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":70540,"byte_end":70544,"line_start":325,"line_end":325,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_fair_mutex.rs","byte_start":74211,"byte_end":74223,"line_start":14,"line_end":14,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_fair_mutex.rs","byte_start":74631,"byte_end":74643,"line_start":35,"line_end":35,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_fair_mutex.rs","byte_start":74830,"byte_end":74842,"line_start":47,"line_end":47,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_mutex.rs","byte_start":78450,"byte_end":78458,"line_start":58,"line_end":58,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_mutex.rs","byte_start":79899,"byte_end":79907,"line_start":113,"line_end":113,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_mutex.rs","byte_start":80434,"byte_end":80442,"line_start":135,"line_end":135,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_mutex.rs","byte_start":81433,"byte_end":81441,"line_start":174,"line_end":174,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":208},{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_rwlock.rs","byte_start":89538,"byte_end":89547,"line_start":59,"line_end":59,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_rwlock.rs","byte_start":91621,"byte_end":91630,"line_start":142,"line_end":142,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_rwlock.rs","byte_start":92535,"byte_end":92544,"line_start":179,"line_end":179,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_rwlock.rs","byte_start":92905,"byte_end":92914,"line_start":193,"line_end":193,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_rwlock.rs","byte_start":94581,"byte_end":94590,"line_start":258,"line_end":258,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_rwlock.rs","byte_start":95188,"byte_end":95197,"line_start":282,"line_end":282,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_rwlock.rs","byte_start":95939,"byte_end":95948,"line_start":310,"line_end":310,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_rwlock.rs","byte_start":97830,"byte_end":97839,"line_start":385,"line_end":385,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_rwlock.rs","byte_start":98674,"byte_end":98683,"line_start":415,"line_end":415,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_rwlock.rs","byte_start":99372,"byte_end":99381,"line_start":440,"line_end":440,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_rwlock.rs","byte_start":100785,"byte_end":100794,"line_start":494,"line_end":494,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":318},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":327},{"krate":0,"index":332},{"krate":0,"index":337},{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/remutex.rs","byte_start":125198,"byte_end":125209,"line_start":15,"line_end":15,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/util.rs","byte_start":148832,"byte_end":148838,"line_start":15,"line_end":15,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":2501,"byte_end":2518,"line_start":24,"line_end":24,"column_start":6,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":433},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":5062,"byte_end":5069,"line_start":93,"line_end":93,"column_start":6,"column_end":13},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":30},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":17501,"byte_end":17508,"line_start":400,"line_end":400,"column_start":18,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/condvar.rs","byte_start":17607,"byte_end":17614,"line_start":407,"line_end":407,"column_start":21,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/elision.rs","byte_start":38080,"byte_end":38091,"line_start":37,"line_end":37,"column_start":27,"column_end":38},"kind":{"Impl":{"id":4}},"from":{"krate":2,"index":29809},"to":{"krate":0,"index":58}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":60735,"byte_end":60744,"line_start":36,"line_end":36,"column_start":6,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":62096,"byte_end":62100,"line_start":85,"line_end":85,"column_start":6,"column_end":10},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":69191,"byte_end":69201,"line_start":282,"line_end":282,"column_start":27,"column_end":37},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":130},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":70443,"byte_end":70447,"line_start":318,"line_end":318,"column_start":18,"column_end":22},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":114},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/once.rs","byte_start":70540,"byte_end":70544,"line_start":325,"line_end":325,"column_start":21,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":114},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_fair_mutex.rs","byte_start":74211,"byte_end":74223,"line_start":14,"line_end":14,"column_start":36,"column_end":48},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":144},"to":{"krate":15,"index":19}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_fair_mutex.rs","byte_start":74631,"byte_end":74643,"line_start":35,"line_end":35,"column_start":40,"column_end":52},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":144},"to":{"krate":15,"index":25}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_fair_mutex.rs","byte_start":74830,"byte_end":74842,"line_start":47,"line_end":47,"column_start":41,"column_end":53},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":144},"to":{"krate":15,"index":28}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_mutex.rs","byte_start":78450,"byte_end":78458,"line_start":58,"line_end":58,"column_start":36,"column_end":44},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":185},"to":{"krate":15,"index":19}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_mutex.rs","byte_start":79899,"byte_end":79907,"line_start":113,"line_end":113,"column_start":40,"column_end":48},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":185},"to":{"krate":15,"index":25}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_mutex.rs","byte_start":80434,"byte_end":80442,"line_start":135,"line_end":135,"column_start":41,"column_end":49},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":185},"to":{"krate":15,"index":28}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_mutex.rs","byte_start":81433,"byte_end":81441,"line_start":174,"line_end":174,"column_start":6,"column_end":14},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_rwlock.rs","byte_start":89538,"byte_end":89547,"line_start":59,"line_end":59,"column_start":37,"column_end":46},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":249},"to":{"krate":15,"index":445}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_rwlock.rs","byte_start":91621,"byte_end":91630,"line_start":142,"line_end":142,"column_start":41,"column_end":50},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":249},"to":{"krate":15,"index":454}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_rwlock.rs","byte_start":92535,"byte_end":92544,"line_start":179,"line_end":179,"column_start":46,"column_end":55},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":249},"to":{"krate":15,"index":459}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_rwlock.rs","byte_start":92905,"byte_end":92914,"line_start":193,"line_end":193,"column_start":42,"column_end":51},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":249},"to":{"krate":15,"index":461}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_rwlock.rs","byte_start":94581,"byte_end":94590,"line_start":258,"line_end":258,"column_start":46,"column_end":55},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":249},"to":{"krate":15,"index":468}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_rwlock.rs","byte_start":95188,"byte_end":95197,"line_start":282,"line_end":282,"column_start":51,"column_end":60},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":249},"to":{"krate":15,"index":471}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_rwlock.rs","byte_start":95939,"byte_end":95948,"line_start":310,"line_end":310,"column_start":44,"column_end":53},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":249},"to":{"krate":15,"index":474}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_rwlock.rs","byte_start":97830,"byte_end":97839,"line_start":385,"line_end":385,"column_start":48,"column_end":57},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":249},"to":{"krate":15,"index":480}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_rwlock.rs","byte_start":98674,"byte_end":98683,"line_start":415,"line_end":415,"column_start":53,"column_end":62},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":249},"to":{"krate":15,"index":483}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_rwlock.rs","byte_start":99372,"byte_end":99381,"line_start":440,"line_end":440,"column_start":49,"column_end":58},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":249},"to":{"krate":15,"index":486}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/raw_rwlock.rs","byte_start":100785,"byte_end":100794,"line_start":494,"line_end":494,"column_start":6,"column_end":15},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/remutex.rs","byte_start":125198,"byte_end":125209,"line_start":15,"line_end":15,"column_start":29,"column_end":40},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":345},"to":{"krate":15,"index":222}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.10.2/src/util.rs","byte_start":148832,"byte_end":148838,"line_start":15,"line_end":15,"column_start":35,"column_end":41},"kind":{"Impl":{"id":29}},"from":{"krate":2,"index":29311},"to":{"krate":0,"index":387}}]}