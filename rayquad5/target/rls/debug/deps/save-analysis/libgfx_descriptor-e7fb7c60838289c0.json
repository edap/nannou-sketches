{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0","program":"/home/dapx/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","gfx_descriptor","--edition=2018","/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=e7fb7c60838289c0","-C","extra-filename=-e7fb7c60838289c0","--out-dir","/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps","-L","dependency=/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps","--extern","fxhash=/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps/libfxhash-967f550d50730602.rmeta","--extern","hal=/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps/libgfx_hal-a8c88defba1e0cd9.rmeta","--extern","log=/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps/liblog-da2d0079f404670c.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/dapx/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/dapx/Sources/rust/nannou-sketches/rayquad5/target/rls/debug/deps/libgfx_descriptor-e7fb7c60838289c0.rmeta"},"prelude":{"crate_id":{"name":"gfx_descriptor","disambiguator":[6095036957982477111,17269523964587798349]},"crate_root":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src","external_crates":[{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6528836112941390771,2028724122443642861]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14673858572786541001,1892137737928154225]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17117278319981904138,16406771668640906211]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11917984669602857069,6489053565454986112]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12362109612685904499,382626321872987168]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4151571022625212401,1888722734493896023]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4322023011642103678,14222697504055880771]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8420579222726968489,9136630199856205157]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[13745492306750544571,5475822973716876235]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14030493773096865675,2651053314204399788]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[8310449678941769819,14748581810882876583]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17983290995241619958,6056021938633518527]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2836549575564442446,8627689666430273126]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7274711288869898279,15671112109327640352]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","num":15,"id":{"name":"gfx_hal","disambiguator":[11122676734006237625,10181242700647790931]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","num":16,"id":{"name":"bitflags","disambiguator":[381175081479133518,10994153786536176848]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","num":17,"id":{"name":"raw_window_handle","disambiguator":[6552574937117001955,7578084645408101463]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","num":18,"id":{"name":"libc","disambiguator":[7997064065336242500,8511025302220419458]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","num":19,"id":{"name":"log","disambiguator":[2463566853520751095,647246307195811942]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","num":20,"id":{"name":"cfg_if","disambiguator":[905820604123660737,9080961431952796619]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","num":21,"id":{"name":"fxhash","disambiguator":[949214370214060910,13199831759942322742]}},{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","num":22,"id":{"name":"byteorder","disambiguator":[10719404080946289605,17148540255389135738]}}],"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/lib.rs","byte_start":0,"byte_end":69,"line_start":1,"line_end":4,"column_start":1,"column_end":42}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/lib.rs","byte_start":55,"byte_end":56,"line_start":4,"line_end":4,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/lib.rs","byte_start":55,"byte_end":56,"line_start":4,"line_end":4,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/lib.rs","byte_start":0,"byte_end":69,"line_start":1,"line_end":4,"column_start":1,"column_end":42},"name":"","qualname":"::","value":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":52},{"krate":0,"index":88}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":91},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","byte_start":506,"byte_end":519,"line_start":21,"line_end":21,"column_start":12,"column_end":25},"name":"DescriptorSet","qualname":"::allocator::DescriptorSet","value":"DescriptorSet {  }","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95}],"decl_id":null,"docs":" Descriptor set from allocator.\n","sig":null,"attributes":[{"value":"/ Descriptor set from allocator.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","byte_start":443,"byte_end":477,"line_start":19,"line_end":19,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","byte_start":665,"byte_end":668,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"raw","qualname":"<DescriptorSet<B>>::raw","value":"fn (&self) -> &B::DescriptorSet","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":122},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","byte_start":6949,"byte_end":6968,"line_start":218,"line_end":218,"column_start":12,"column_end":31},"name":"DescriptorAllocator","qualname":"::allocator::DescriptorAllocator","value":"DescriptorAllocator {  }","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127}],"decl_id":null,"docs":" Descriptor allocator.\n Can be used to allocate descriptor sets for any layout.\n","sig":null,"attributes":[{"value":"/ Descriptor allocator.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","byte_start":6835,"byte_end":6860,"line_start":215,"line_end":215,"column_start":1,"column_end":26}},{"value":"/ Can be used to allocate descriptor sets for any layout.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","byte_start":6861,"byte_end":6920,"line_start":216,"line_end":216,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","byte_start":7454,"byte_end":7457,"line_start":235,"line_end":235,"column_start":12,"column_end":15},"name":"new","qualname":"<DescriptorAllocator<B>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new allocator instance.\n","sig":null,"attributes":[{"value":"/ Create new allocator instance.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","byte_start":7408,"byte_end":7442,"line_start":234,"line_end":234,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","byte_start":7855,"byte_end":7860,"line_start":249,"line_end":249,"column_start":19,"column_end":24},"name":"clear","qualname":"<DescriptorAllocator<B>>::clear","value":"fn (&mut self, device: &B::Device) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear the allocator instance.\n All sets allocated from this allocator become invalid.\n","sig":null,"attributes":[{"value":"/ Clear the allocator instance.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","byte_start":7740,"byte_end":7773,"line_start":247,"line_end":247,"column_start":5,"column_end":38}},{"value":"/ All sets allocated from this allocator become invalid.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","byte_start":7778,"byte_end":7836,"line_start":248,"line_end":248,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","byte_start":8289,"byte_end":8297,"line_start":261,"line_end":261,"column_start":19,"column_end":27},"name":"allocate","qualname":"<DescriptorAllocator<B>>::allocate","value":"fn (&mut self, device: &B::Device, layout: &B::DescriptorSetLayout, layout_counts: &DescriptorCounts, count: u32, extend: &mut impl Extend<DescriptorSet<B>>) -> Result<(), OutOfMemory>","parent":null,"children":[],"decl_id":null,"docs":" Allocate descriptor set with specified layout.\n `DescriptorCounts` must match descriptor numbers of the layout.\n `DescriptorCounts` can be constructed [from bindings] that were used\n to create layout instance.","sig":null,"attributes":[{"value":"/ Allocate descriptor set with specified layout.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","byte_start":8001,"byte_end":8051,"line_start":255,"line_end":255,"column_start":5,"column_end":55}},{"value":"/ `DescriptorCounts` must match descriptor numbers of the layout.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","byte_start":8056,"byte_end":8123,"line_start":256,"line_end":256,"column_start":5,"column_end":72}},{"value":"/ `DescriptorCounts` can be constructed [from bindings] that were used","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","byte_start":8128,"byte_end":8200,"line_start":257,"line_end":257,"column_start":5,"column_end":77}},{"value":"/ to create layout instance.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","byte_start":8205,"byte_end":8235,"line_start":258,"line_end":258,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","byte_start":8240,"byte_end":8243,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ [from bindings]: .","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","byte_start":8248,"byte_end":8270,"line_start":260,"line_end":260,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","byte_start":10519,"byte_end":10523,"line_start":327,"line_end":327,"column_start":19,"column_end":23},"name":"free","qualname":"<DescriptorAllocator<B>>::free","value":"fn (&mut self, all_sets: impl IntoIterator<Item = DescriptorSet<B>>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Free descriptor sets.","sig":null,"attributes":[{"value":"/ Free descriptor sets.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","byte_start":10252,"byte_end":10277,"line_start":320,"line_end":320,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","byte_start":10282,"byte_end":10285,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","byte_start":10290,"byte_end":10302,"line_start":322,"line_end":322,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","byte_start":10307,"byte_end":10310,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ None of descriptor sets can be referenced in any pending command buffers.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","byte_start":10315,"byte_end":10392,"line_start":324,"line_end":324,"column_start":5,"column_end":82}},{"value":"/ All command buffers where at least one of descriptor sets referenced","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","byte_start":10397,"byte_end":10469,"line_start":325,"line_end":325,"column_start":5,"column_end":77}},{"value":"/ move to invalid state.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","byte_start":10474,"byte_end":10500,"line_start":326,"line_end":326,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","byte_start":11780,"byte_end":11787,"line_start":359,"line_end":359,"column_start":19,"column_end":26},"name":"cleanup","qualname":"<DescriptorAllocator<B>>::cleanup","value":"fn (&mut self, device: &B::Device) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Perform cleanup to allow resources reuse.\n","sig":null,"attributes":[{"value":"/ Perform cleanup to allow resources reuse.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","byte_start":11716,"byte_end":11761,"line_start":358,"line_end":358,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":131},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/counts.rs","byte_start":17074,"byte_end":17090,"line_start":159,"line_end":159,"column_start":12,"column_end":28},"name":"DescriptorCounts","qualname":"::counts::DescriptorCounts","value":"DescriptorCounts {  }","parent":null,"children":[{"krate":0,"index":132}],"decl_id":null,"docs":" Number of descriptors per type.\n","sig":null,"attributes":[{"value":"/ Number of descriptors per type.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/counts.rs","byte_start":16973,"byte_end":17008,"line_start":157,"line_end":157,"column_start":1,"column_end":36}}]},{"kind":"Const","id":{"krate":0,"index":71},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/counts.rs","byte_start":17207,"byte_end":17212,"line_start":165,"line_end":165,"column_start":15,"column_end":20},"name":"EMPTY","qualname":"::counts::DescriptorCounts::EMPTY","value":"Self","parent":{"krate":0,"index":70},"children":[],"decl_id":null,"docs":" Empty descriptor counts.\n","sig":null,"attributes":[{"value":"/ Empty descriptor counts.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/counts.rs","byte_start":17164,"byte_end":17192,"line_start":164,"line_end":164,"column_start":2,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/counts.rs","byte_start":17401,"byte_end":17412,"line_start":171,"line_end":171,"column_start":12,"column_end":23},"name":"add_binding","qualname":"<DescriptorCounts>::add_binding","value":"fn (&mut self, binding: DescriptorSetLayoutBinding) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Add a single layout binding.\n Useful when created with `DescriptorCounts::EMPTY`.\n","sig":null,"attributes":[{"value":"/ Add a single layout binding.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/counts.rs","byte_start":17297,"byte_end":17329,"line_start":169,"line_end":169,"column_start":5,"column_end":37}},{"value":"/ Useful when created with `DescriptorCounts::EMPTY`.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/counts.rs","byte_start":17334,"byte_end":17389,"line_start":170,"line_end":170,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/counts.rs","byte_start":17636,"byte_end":17640,"line_start":176,"line_end":176,"column_start":12,"column_end":16},"name":"iter","qualname":"<DescriptorCounts>::iter","value":"fn (&self) -> impl '_ + Iterator<Item = DescriptorRangeDesc>","parent":null,"children":[],"decl_id":null,"docs":" Iterate through counts yelding descriptor types and their amount.\n","sig":null,"attributes":[{"value":"/ Iterate through counts yelding descriptor types and their amount.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/counts.rs","byte_start":17555,"byte_end":17624,"line_start":175,"line_end":175,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/counts.rs","byte_start":18024,"byte_end":18032,"line_start":188,"line_end":188,"column_start":12,"column_end":20},"name":"multiply","qualname":"<DescriptorCounts>::multiply","value":"fn (&self, value: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Multiply all the counts by a value.\n","sig":null,"attributes":[{"value":"/ Multiply all the counts by a value.","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/counts.rs","byte_start":17973,"byte_end":18012,"line_start":187,"line_end":187,"column_start":5,"column_end":44}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","byte_start":635,"byte_end":648,"line_start":27,"line_end":27,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","byte_start":855,"byte_end":865,"line_start":39,"line_end":39,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","byte_start":2894,"byte_end":2910,"line_start":92,"line_end":92,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","byte_start":7196,"byte_end":7215,"line_start":225,"line_end":225,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","byte_start":7379,"byte_end":7398,"line_start":233,"line_end":233,"column_start":18,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/counts.rs","byte_start":17144,"byte_end":17160,"line_start":163,"line_end":163,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/counts.rs","byte_start":18251,"byte_end":18267,"line_start":197,"line_end":197,"column_start":51,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/counts.rs","byte_start":18571,"byte_end":18587,"line_start":211,"line_end":211,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/counts.rs","byte_start":19143,"byte_end":19159,"line_start":227,"line_end":227,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/counts.rs","byte_start":19332,"byte_end":19348,"line_start":235,"line_end":235,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","byte_start":635,"byte_end":648,"line_start":27,"line_end":27,"column_start":18,"column_end":31},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":91},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","byte_start":855,"byte_end":865,"line_start":39,"line_end":39,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":99},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","byte_start":2894,"byte_end":2910,"line_start":92,"line_end":92,"column_start":18,"column_end":34},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","byte_start":7196,"byte_end":7215,"line_start":225,"line_end":225,"column_start":27,"column_end":46},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":122},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/allocator.rs","byte_start":7379,"byte_end":7398,"line_start":233,"line_end":233,"column_start":18,"column_end":37},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/counts.rs","byte_start":17144,"byte_end":17160,"line_start":163,"line_end":163,"column_start":6,"column_end":22},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/counts.rs","byte_start":18251,"byte_end":18267,"line_start":197,"line_end":197,"column_start":51,"column_end":67},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":131},"to":{"krate":2,"index":4676}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/counts.rs","byte_start":18571,"byte_end":18587,"line_start":211,"line_end":211,"column_start":21,"column_end":37},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":131},"to":{"krate":2,"index":1656}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/counts.rs","byte_start":19143,"byte_end":19159,"line_start":227,"line_end":227,"column_start":20,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":131},"to":{"krate":2,"index":1979}},{"span":{"file_name":"/home/dapx/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.1.0/src/counts.rs","byte_start":19332,"byte_end":19348,"line_start":235,"line_end":235,"column_start":20,"column_end":36},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":131},"to":{"krate":2,"index":1983}}]}